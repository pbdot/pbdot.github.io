{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/preact-cli/src/lib/entry.js","webpack:///../node_modules/preact/src/util.js","webpack:///../node_modules/preact/src/create-element.js","webpack:///../node_modules/preact/src/component.js","webpack:///../node_modules/preact/src/diff/children.js","webpack:///../node_modules/preact/src/diff/props.js","webpack:///../node_modules/preact/src/diff/index.js","webpack:///../node_modules/preact/src/render.js","webpack:///../node_modules/preact/src/clone-element.js","webpack:///../node_modules/preact/src/create-context.js","webpack:///../node_modules/preact/src/options.js","webpack:///../node_modules/preact/src/constants.js","webpack:///../node_modules/preact/src/diff/catch-error.js","webpack:///../node_modules/preact/hooks/src/index.js","webpack:///../node_modules/@preact/signals-core/src/index.ts","webpack:///../node_modules/@preact/signals/src/index.ts","webpack:///./components/header/style.css","webpack:///./components/header/index.tsx","webpack:///./components/player/style.css","webpack:///./edge-classic.js","webpack:///./components/player/index.tsx","webpack:///./index.ts","webpack:///./components/app.tsx"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","h","render","hydrate","Preact","interopDefault","default","normalizeURL","url","length","navigator","serviceWorker","register","__webpack_public_path__","require","root","document","getElementById","body","firstElementChild","init","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","innerHTML","CLI_DATA","currentURL","location","pathname","u","v","parentNode","removeChild","y","f","arguments","children","defaultProps","type","props","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","current","_","k","this","context","b","indexOf","g","base","push","w","__r","debounceRendering","e","sort","shift","__P","L","__n","ownerSVGElement","M","x","a","Array","isArray","A","C","$","nextSibling","S","O","P","some","appendChild","insertBefore","I","setProperty","test","T","style","cssText","replace","toLowerCase","slice","addEventListener","z","j","removeEventListener","removeAttribute","setAttribute","event","H","contextType","__E","q","sub","state","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","N","diffed","localName","nodeType","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","checked","unmount","componentWillUnmount","B","firstChild","D","E","F","Consumer","Provider","splice","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","resolve","setTimeout","__H","__V","__N","filter","every","clearTimeout","cancelAnimationFrame","requestAnimationFrame","Error","U","useSignal","__$f","__$u","peek","Header","class","display","width","maxWidth","href","src","height","target","subscribe","valueOf","toString","set","displayName","defineProperties","configurable","__np","_scriptDir","createEdgeModule","currentScript","undefined","assert","condition","text","abort","updateMemoryViews","wasmMemory","buffer","Module","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","Uint8Array","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","keepRuntimeAlive","noExitRuntime","runtimeKeepaliveCounter","addRunDependency","runDependencies","removeRunDependency","runDependencyWatcher","clearInterval","dependenciesFulfilled","callback","what","err","ABORT","EXITSTATUS","WebAssembly","RuntimeError","readyPromiseReject","isDataURI","filename","startsWith","dataURIPrefix","getBinary","file","wasmBinaryFile","wasmBinary","readBinary","instantiateArrayBuffer","binaryFile","imports","receiver","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","fetch","credentials","response","catch","getBinaryPromise","binary","instantiate","instance","reason","ExitStatus","status","message","callRuntimeCallbacks","callbacks","dynCall","sig","ptr","args","apply","concat","dynCallLegacy","setValue","endsWith","tempI64","tempDouble","Math","abs","floor","ceil","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","set_adjusted_ptr","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","randomFill","view","crypto","getRandomValues","initRandomFill","lengthBytesUTF8","str","len","charCodeAt","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","endIdx","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","mmapAlloc","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endPtr","UTF8Decoder","decode","subarray","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","convertI32PairToI53Checked","lo","hi","NaN","stringToUTF8","outPtr","isLeapYear","year","ydayFromDate","date","getFullYear","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","getMonth","getDate","stringToNewUTF8","size","ret","_malloc","_emscripten_set_main_loop_timing","Browser","mainLoop","timingMode","timingValue","func","running","scheduler","timeUntilNextTick","max","tickStartTime","_emscripten_get_now","runner","method","setImmediate","setImmediates","emscriptenMainLoopMessageId","stopPropagation","postMessage","setMainLoop","browserIterationFunc","fps","simulateInfiniteLoop","arg","noSetTiming","checkIsRunning","thisMainLoopId","currentlyRunningMainloop","queue","start","Date","now","blocker","remainingBlockers","remaining","next","counted","out","updateStatus","currentFrameNumber","GL","newRenderingFrameStarted","runIter","SDL","audio","queueNewAudioData","handleException","quit_","exitJS","code","callUserCallback","_exit","maybeExit","safeSetTimeout","timeout","warnOnce","shown","readEmAsmArgs","sigPtr","buf","readEmAsmArgsArray","withStackSave","stack","stackSave","stackRestore","setLetterbox","element","topBottom","leftRight","paddingLeft","paddingRight","paddingTop","paddingBottom","findEventTarget","cString","specialHTMLTargets","findCanvasEventTarget","stringToUTF8OnStack","stackAlloc","getCanvasElementSize","canvas","_emscripten_get_canvas_element_size","id","_emscripten_set_canvas_element_size","setCanvasElementSize","controlTransferredOffscreen","jstoi_q","parseInt","softFullscreenResizeWebGLRenderTarget","topMargin","dpr","devicePixelRatio","inHiDPIFullscreenMode","currentFullscreenStrategy","canvasResolutionScaleMode","inAspectRatioFixedFullscreenMode","scaleMode","inPixelPerfectFullscreenMode","inCenteredWithoutScalingFullscreenMode","screenWidth","round","innerWidth","screenHeight","innerHeight","canvasSize","GLctxObject","GLctx","viewport","canvasResizedCallback","dynCall_iiii","canvasResizedCallbackUserData","getBoundingClientRect","JSEvents_resizeCanvasForFullscreen","strategy","restoreOldStyle","fullscreenElement","webkitFullscreenElement","oldWidth","oldHeight","oldCssWidth","oldCssHeight","backgroundColor","oldBackgroundColor","oldDocumentBackgroundColor","oldPaddingLeft","oldPaddingRight","oldPaddingTop","oldPaddingBottom","marginLeft","oldMarginLeft","marginRight","oldMarginRight","marginTop","oldMarginTop","marginBottom","oldMarginBottom","margin","oldDocumentBodyMargin","documentElement","overflow","oldDocumentOverflow","scroll","oldDocumentScroll","imageRendering","oldImageRendering","registerRestoreOldStyle","cssWidth","softFullscreen","screen","cssHeight","rect","windowedCssWidth","windowedCssHeight","windowedRttWidth","windowedRttHeight","desiredCssHeight","desiredCssWidth","filteringMode","dpiScale","newWidth","newHeight","JSEvents_requestFullscreen","requestFullscreen","webkitRequestFullscreen","JSEvents","fullscreenEnabled","Element","ALLOW_KEYBOARD_INPUT","requestPointerLock","fillGamepadEventData","eventStruct","timestamp","axes","buttons","pressed","connected","index","mapping","_glBindVertexArray","vao","bindVertexArray","vaos","ibo","getParameter","currentElementArrayBufferBinding","convertI32PairToI53","_glDeleteVertexArrays","deleteVertexArray","_glDrawArraysInstanced","first","count","primcount","drawArraysInstanced","_glDrawBuffers","bufs","bufArray","tempFixedLengthArray","drawBuffers","_glDrawElements","indices","calcBufLength","getTempIndexBuffer","bindBuffer","bufferSubData","preDrawHandleClientVertexAttribBindings","drawElements","postDrawHandleClientVertexAttribBindings","_glDrawElementsInstanced","drawElementsInstanced","__glGenObject","buffers","createFunction","objectTable","getNewId","recordError","_glGenVertexArrays","arrays","__glGetActiveAttribOrUniform","funcName","program","bufSize","info","programs","numBytesWrittenExclNull","writeI53ToI64","num","emscriptenWebGLGet","name_","formats","currentContext","version","getSupportedExtensions","result","_glGetFloatv","emscriptenWebGLGetIndexed","getIndexedParameter","WebGLBuffer","_glGetQueryObjecti64vEXT","pname","params","param","query","queries","disjointTimerQueryExt","getQueryParameter","_glGetQueryObjectivEXT","webglGetLeftBracePos","lastIndexOf","webglPrepareUniformLocationsBeforeFirstUse","uniformLocsById","uniformSizeAndIdsByName","uniformArrayNamesById","getProgramParameter","getActiveUniform","nm","sz","lb","arrayName","uniformIdCounter","webglGetUniformLocation","currentProgram","webglLoc","getUniformLocation","emscriptenWebGLGetUniform","getUniform","emscriptenWebGLGetVertexAttrib","clientBuffers","enabled","getVertexAttrib","fround","_glGetVertexAttribIiv","_glIsVertexArray","array","isVertexArray","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","clz32","BYTES_PER_ELEMENT","emscriptenWebGLGetTexPixelData","format","pixels","byteSize","sizePerPixel","colorChannelsInGlTextureFormat","bytes","alignment","alignedRowSize","roundedToNextMultipleOf","computeUnpackAlignedImageSize","unpackAlignment","_glVertexAttribDivisor","divisor","vertexAttribDivisor","emscripten_realloc_buffer","grow","byteLength","registerFocusEventCallback","userData","useCapture","callbackfunc","eventTypeId","eventTypeString","focusEvent","eventHandler","handlerFunc","nodeName","getNodeNameForTarget","preventDefault","registerOrRemoveHandler","registerFullscreenChangeEventCallback","fullscreenChangeEvent","mozFullScreenElement","msFullscreenElement","isFullscreen","reportedElement","previousFullscreenElement","clientWidth","clientHeight","fillFullscreenChangeEventData","registerGamepadEventCallback","gamepadEvent","allowsDeferredCalls","registerKeyEventCallback","keyEvent","keyEventData","timeStamp","ctrlKey","shiftKey","altKey","metaKey","repeat","charCode","keyCode","which","char","locale","fillMouseEventData","screenX","screenY","clientX","clientY","button","left","top","registerMouseEventCallback","mouseEvent","registerPointerlockChangeEventCallback","pointerlockChangeEvent","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","msPointerLockElement","fillPointerlockChangeEventData","registerTouchEventCallback","touchEvent","touches","et","isChanged","onTarget","identifier","changedTouches","targetTouches","targetRect","numTouches","pageX","pageY","registerVisibilityChangeEventCallback","visibilityChangeEvent","visibilityState","hidden","_emscripten_sleep","ms","Asyncify","handleSleep","wakeUp","getEnvStrings","strings","env","languages","thisProgram","ENV","_strftime","maxsize","tm","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","days","newDate","getTime","leap","currentMonth","daysInCurrentMonth","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","setDate","setMonth","setFullYear","addDays","tm_year","tm_yday","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_wday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","EXPANSION_RULES_2","substring","twelveHour","sum","arraySum","val","jan1","dec31","off","ahead","includes","runAndAbortIfError","run","arguments_","doRun","calledRun","FS","initialized","ignorePermissions","TTY","__ATINIT__","__ATMAIN__","readyPromiseResolve","shouldRunNow","entryFunction","_main","unshift","argc","argv","argv_ptr","callMain","cb","__ATPOSTRUN__","postRun","__ATPRERUN__","preRun","reject","expectedDataFileDownloads","metadata","fetchRemotePackage","packageName","packageSize","xhr","XMLHttpRequest","open","responseType","onprogress","total","loaded","addedTotal","dataFileDownloads","download","onerror","onload","statusText","responseURL","send","runWithFS","check","msg","processPackageData","arrayBuffer","ArrayBuffer","byteArray","compressedData","loadPackage","preloadFallback","error","console","REMOTE_PACKAGE_NAME","REMOTE_PACKAGE_SIZE","indexedDB","PACKAGE_UUID","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","self","IDB_RO","IDB_RW","DB_NAME","DB_VERSION","METADATA_STORE_NAME","PACKAGE_STORE_NAME","CHUNK_SIZE","preloadResults","errback","openRequest","onupgradeneeded","db","objectStoreNames","contains","deleteObjectStore","createObjectStore","onsuccess","openDatabase","getRequest","transaction","objectStore","checkCachedPackage","PACKAGE_PATH","PACKAGE_NAME","useCached","fromCache","packages","chunksDone","totalSize","chunkCount","chunks","chunkId","tempTyped","byteOffset","fetchCachedPackage","packageData","packageMeta","chunkSliceStart","nextChunkSliceStart","finishedChunks","putPackageRequest","put","putMetadataRequest","uuid","cacheRemotePackage","process","encodeURIComponent","REMOTE_PACKAGE_BASE","read_","readAsync","setWindowTitle","moduleOverrides","_extends","toThrow","scriptDirectory","substr","responseText","title","log","warn","path","__ATEXIT__","ASM_CONSTS","edgePostInit","$0","$1","homeIndex","homeDir","analyzePath","exists","mkdirTree","mount","IDBFS","syncfs","_I_WebMain","onFullscreen","edgePreSyncFS","edgePostSyncFS","AudioContext","webkitAudioContext","mediaDevices","getUserMedia","webkitGetUserMedia","ctx","elements","SDL2","capture","audioContext","listenOnce","resume","sampleRate","$2","$3","have_microphone","stream","silenceTimer","mediaStreamNode","createMediaStreamSource","scriptProcessorNode","createScriptProcessor","onaudioprocess","audioProcessingEvent","outputBuffer","getChannelData","fill","currentCaptureBuffer","inputBuffer","connect","destination","no_microphone","silenceBuffer","createBuffer","video","currentOutputBuffer","numChannels","numberOfChannels","channelData","tracks","getAudioTracks","removeTrack","disconnect","close","ctxCanvas","imageCtx","image","createImageData","dst","CanvasPixelArray","data32Data","data32","data8","putImageData","$4","hot_x","hot_y","getContext","toDataURL","urlBuf","alert","PATH","isAbs","charAt","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","normalize","isAbsolute","trailingSlash","split","join","dirname","dir","basename","lastSlash","paths","join2","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","end","fromParts","toParts","min","samePartsLength","outputParts","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","tty","node","rdev","ErrnoError","seekable","fsync","read","offset","get_char","bytesRead","write","put_char","default_tty_ops","prompt","readline","default_tty1_ops","MEMFS","ops_table","createNode","parent","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","position","canOwn","whence","prot","flags","allocated","dbs","DB_STORE_NAME","populate","getLocalSet","local","getRemoteSet","remote","reconcile","quit","values","getDB","req","fileStore","indexNames","createIndex","unique","isRealDir","toAbsolute","mountpoint","map","stat","pop","openKeyCursor","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","entry","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","removeRemoteEntry","delete","done","errored","keys","e2","remove","oncomplete","reverse","LZ4","DIR_MODE","FILE_MODE","codec","MiniLZ4","sIdx","eIdx","token","literals_length","match_length","pos","maxInputSize","minMatch","hashShift","mfLimit","skipStrength","mlBits","mlMask","runMask","hasher","hashTable","empty","compressBound","isize","compress","dpos","dlen","anchor","findMatchAttempts","srcLength","sequenceLowBits","sequenceHighBits","hash","imul","ln","compressBlock","compressPackage","verify","temp","compressedChunks","successes","chunk","bound","compressed","compressedSize","back","uncompress","pack","preloadPlugin","files","createPath","handled","fullname","plugin","finish","readFile","written","currChunk","desired","chunkIndex","compressedStart","found","originalSize","startInChunk","endInChunk","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","opts","follow_mount","recurse_count","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","hashName","parentid","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","shared","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","completed","pseudo","mountRoot","mkdir","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","dontFollow","lstat","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","mmapFlags","munmap","ioctl","cmd","encoding","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","staticInit","getMode","canRead","canWrite","findObject","dontResolveLastLink","parentExists","parentPath","parentObject","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","writeChunks","chunkOffset","chunkSize","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","chunkNum","doXHR","setRequestHeader","overrideMimeType","_length","_chunkSize","fn","createPreloadedFile","dontCreateFile","preFinish","processData","handledByPreloadPlugin","noRunDep","dep","asyncLoad","TextDecoder","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","doMsync","addr","varargs","getStr","nowIsMonotonic","performance","pause","expected","expectedBlockers","pointerLock","moduleContextCreatedCallbacks","workers","pointerLockChange","initted","Blob","hasBlobConstructor","BlobBuilder","MozBlobBuilder","WebKitBlobBuilder","URLObject","URL","webkitURL","noImageDecoding","imagePlugin","getMimetype","bb","append","getBlob","createObjectURL","img","Image","complete","drawImage","preloadedImages","revokeObjectURL","audioPlugin","noAudioDecoding","preloadedAudios","fail","Audio","BASE","leftchar","leftbits","curr","PAD","encode64","exitPointerLock","ev","createContext","useWebGL","setInModule","webGLContextAttributes","contextHandle","contextAttributes","antialias","alpha","majorVersion","WebGL2RenderingContext","attribute","makeContextCurrent","destroyContext","fullscreenHandlersInstalled","lockPointer","resizeCanvas","fullscreenChange","canvasContainer","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","setWindowedCanvasSize","nextRAF","fakeRequestAnimationFrame","delay","RAF","safeRequestAnimationFrame","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","deltaY","deltaMode","mouseX","mouseY","mouseMovementX","mouseMovementY","lastTouches","calculateMouseEvent","cw","scrollX","pageXOffset","scrollY","pageYOffset","touch","adjustedX","adjustedY","coords","resizeListeners","updateResizeListeners","listener","setCanvasSize","noUpdates","windowedWidth","windowedHeight","wNative","hNative","widthNative","heightNative","factor","removeProperty","EGL","errorCode","defaultDisplayInitialized","currentReadSurface","currentDrawSurface","depth","stencil","stringCache","setErrorCode","chooseConfig","attribList","config","config_size","numConfigs","lowLatency","counter","framebuffers","renderbuffers","textures","shaders","contexts","offscreenCanvases","samplers","transformFeedbacks","syncs","byteSizeByTypeRoot","byteSizeByType","stringiCache","lastError","table","MAX_TEMP_BUFFER_SIZE","numTempVertexBuffersPerSize","log2ceilLookup","generateTempBuffers","quads","largestIndex","tempVertexBufferCounters1","tempVertexBufferCounters2","tempVertexBuffers1","tempVertexBuffers2","tempIndexBuffers","ringbufferLength","ringbuffer1","ringbuffer2","tempQuadIndexBuffer","numIndexes","quadIndexes","bufferData","getTempVertexBuffer","sizeBytes","ringbuffer","nextFreeBufferIndex","vbo","prevVBO","prevIBO","vb","getSource","shader","string","source","stride","usedTempBuffers","resetBufferBinding","maxVertexAttribs","clientside","vertexAttribPointerAdaptor","normalized","currentArrayBufferBinding","getContextSafariWebGL2Fixed","fixedGetContext","ver","attrs","gl","WebGLRenderingContext","registerContext","handle","enableExtensionsByDefault","initExtensions","deleteContext","removeAllHandlersOnTarget","initExtensionsDone","ext","getExtension","webgl_enable_ANGLE_instanced_arrays","webgl_enable_OES_vertex_array_object","webgl_enable_WEBGL_draw_buffers","dibvbi","mdibvbi","webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance","multiDrawWebgl","webgl_enable_WEBGL_multi_draw","_eglWaitGL","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","runDeferredCalls","eventListenerFunc","jsEventHandler","webkitFullscreenEnabled","restoreOldWindowedStyle","_emscripten_glActiveTexture","x0","activeTexture","_emscripten_glAttachShader","attachShader","_emscripten_glBeginQuery","beginQuery","_emscripten_glBeginQueryEXT","_emscripten_glBeginTransformFeedback","beginTransformFeedback","_emscripten_glBindAttribLocation","bindAttribLocation","_emscripten_glBindBuffer","currentPixelPackBufferBinding","currentPixelUnpackBufferBinding","_emscripten_glBindBufferBase","bindBufferBase","_emscripten_glBindBufferRange","ptrsize","bindBufferRange","_emscripten_glBindFramebuffer","framebuffer","bindFramebuffer","_emscripten_glBindRenderbuffer","renderbuffer","bindRenderbuffer","_emscripten_glBindSampler","unit","sampler","bindSampler","_emscripten_glBindTexture","texture","bindTexture","_emscripten_glBindTransformFeedback","bindTransformFeedback","_emscripten_glBindVertexArray","_glBindVertexArrayOES","_emscripten_glBindVertexArrayOES","_emscripten_glBlendColor","x1","x2","x3","blendColor","_emscripten_glBlendEquation","blendEquation","_emscripten_glBlendEquationSeparate","blendEquationSeparate","_emscripten_glBlendFunc","blendFunc","_emscripten_glBlendFuncSeparate","blendFuncSeparate","_emscripten_glBlitFramebuffer","x4","x5","x6","x7","x8","x9","blitFramebuffer","_emscripten_glBufferData","usage","_emscripten_glBufferSubData","_emscripten_glCheckFramebufferStatus","checkFramebufferStatus","_emscripten_glClear","clear","_emscripten_glClearBufferfi","clearBufferfi","_emscripten_glClearBufferfv","drawbuffer","clearBufferfv","_emscripten_glClearBufferiv","clearBufferiv","_emscripten_glClearBufferuiv","clearBufferuiv","_emscripten_glClearColor","clearColor","_emscripten_glClearDepthf","clearDepth","_emscripten_glClearStencil","clearStencil","_emscripten_glClientWaitSync","sync","timeout_low","timeout_high","clientWaitSync","_emscripten_glColorMask","red","green","blue","colorMask","_emscripten_glCompileShader","compileShader","_emscripten_glCompressedTexImage2D","level","internalFormat","border","imageSize","compressedTexImage2D","_emscripten_glCompressedTexImage3D","compressedTexImage3D","_emscripten_glCompressedTexSubImage2D","xoffset","yoffset","compressedTexSubImage2D","_emscripten_glCompressedTexSubImage3D","zoffset","compressedTexSubImage3D","_emscripten_glCopyBufferSubData","copyBufferSubData","_emscripten_glCopyTexImage2D","copyTexImage2D","_emscripten_glCopyTexSubImage2D","copyTexSubImage2D","_emscripten_glCopyTexSubImage3D","copyTexSubImage3D","_emscripten_glCreateProgram","createProgram","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","_emscripten_glCreateShader","shaderType","createShader","_emscripten_glCullFace","cullFace","_emscripten_glDeleteBuffers","deleteBuffer","_emscripten_glDeleteFramebuffers","deleteFramebuffer","_emscripten_glDeleteProgram","deleteProgram","_emscripten_glDeleteQueries","ids","deleteQuery","_emscripten_glDeleteQueriesEXT","_emscripten_glDeleteRenderbuffers","deleteRenderbuffer","_emscripten_glDeleteSamplers","deleteSampler","_emscripten_glDeleteShader","deleteShader","_emscripten_glDeleteSync","deleteSync","_emscripten_glDeleteTextures","deleteTexture","_emscripten_glDeleteTransformFeedbacks","transformFeedback","deleteTransformFeedback","_emscripten_glDeleteVertexArrays","_glDeleteVertexArraysOES","_emscripten_glDeleteVertexArraysOES","_emscripten_glDepthFunc","depthFunc","_emscripten_glDepthMask","depthMask","_emscripten_glDepthRangef","depthRange","_emscripten_glDetachShader","detachShader","_emscripten_glDisable","disable","_emscripten_glDisableVertexAttribArray","disableVertexAttribArray","_emscripten_glDrawArrays","drawArrays","_emscripten_glDrawArraysInstanced","_glDrawArraysInstancedANGLE","_emscripten_glDrawArraysInstancedANGLE","_glDrawArraysInstancedARB","_emscripten_glDrawArraysInstancedARB","_glDrawArraysInstancedEXT","_emscripten_glDrawArraysInstancedEXT","_glDrawArraysInstancedNV","_emscripten_glDrawArraysInstancedNV","_emscripten_glDrawBuffers","_glDrawBuffersEXT","_emscripten_glDrawBuffersEXT","_glDrawBuffersWEBGL","_emscripten_glDrawBuffersWEBGL","_emscripten_glDrawElements","_emscripten_glDrawElementsInstanced","_glDrawElementsInstancedANGLE","_emscripten_glDrawElementsInstancedANGLE","_glDrawElementsInstancedARB","_emscripten_glDrawElementsInstancedARB","_glDrawElementsInstancedEXT","_emscripten_glDrawElementsInstancedEXT","_glDrawElementsInstancedNV","_emscripten_glDrawElementsInstancedNV","_emscripten_glDrawRangeElements","_emscripten_glEnable","enable","_emscripten_glEnableVertexAttribArray","enableVertexAttribArray","_emscripten_glEndQuery","endQuery","_emscripten_glEndQueryEXT","_emscripten_glEndTransformFeedback","endTransformFeedback","_emscripten_glFenceSync","fenceSync","_emscripten_glFinish","_emscripten_glFlush","flush","_emscripten_glFramebufferRenderbuffer","attachment","renderbuffertarget","framebufferRenderbuffer","_emscripten_glFramebufferTexture2D","textarget","framebufferTexture2D","_emscripten_glFramebufferTextureLayer","layer","framebufferTextureLayer","_emscripten_glFrontFace","frontFace","_emscripten_glGenBuffers","_emscripten_glGenFramebuffers","_emscripten_glGenQueries","_emscripten_glGenQueriesEXT","_emscripten_glGenRenderbuffers","_emscripten_glGenSamplers","_emscripten_glGenTextures","_emscripten_glGenTransformFeedbacks","_emscripten_glGenVertexArrays","_emscripten_glGenVertexArraysOES","_emscripten_glGenerateMipmap","generateMipmap","_emscripten_glGetActiveAttrib","_emscripten_glGetActiveUniform","_emscripten_glGetActiveUniformBlockName","uniformBlockIndex","uniformBlockName","getActiveUniformBlockName","_emscripten_glGetActiveUniformBlockiv","getActiveUniformBlockParameter","_emscripten_glGetActiveUniformsiv","uniformCount","uniformIndices","getActiveUniforms","_emscripten_glGetAttachedShaders","maxCount","getAttachedShaders","_emscripten_glGetAttribLocation","getAttribLocation","_emscripten_glGetBooleanv","_emscripten_glGetBufferParameteri64v","getBufferParameter","_emscripten_glGetBufferParameteriv","_emscripten_glGetError","getError","_emscripten_glGetFloatv","_emscripten_glGetFragDataLocation","getFragDataLocation","_emscripten_glGetFramebufferAttachmentParameteriv","getFramebufferAttachmentParameter","WebGLRenderbuffer","WebGLTexture","_emscripten_glGetInteger64i_v","_emscripten_glGetInteger64v","_emscripten_glGetIntegeri_v","_emscripten_glGetIntegerv","_emscripten_glGetInternalformativ","internalformat","getInternalformatParameter","_emscripten_glGetProgramBinary","_emscripten_glGetProgramInfoLog","maxLength","infoLog","getProgramInfoLog","_emscripten_glGetProgramiv","getActiveAttrib","_emscripten_glGetQueryObjecti64vEXT","_emscripten_glGetQueryObjectivEXT","_emscripten_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectuiv","_emscripten_glGetQueryObjectuivEXT","_emscripten_glGetQueryiv","getQuery","_emscripten_glGetQueryivEXT","_emscripten_glGetRenderbufferParameteriv","getRenderbufferParameter","_emscripten_glGetSamplerParameterfv","getSamplerParameter","_emscripten_glGetSamplerParameteriv","_emscripten_glGetShaderInfoLog","getShaderInfoLog","_emscripten_glGetShaderPrecisionFormat","precisionType","range","precision","getShaderPrecisionFormat","rangeMin","rangeMax","_emscripten_glGetShaderSource","getShaderSource","_emscripten_glGetShaderiv","getShaderParameter","_emscripten_glGetString","exts","glVersion","glslVersion","ver_num","match","_emscripten_glGetStringi","_emscripten_glGetSynciv","getSyncParameter","_emscripten_glGetTexParameterfv","getTexParameter","_emscripten_glGetTexParameteriv","_emscripten_glGetTransformFeedbackVarying","getTransformFeedbackVarying","_emscripten_glGetUniformBlockIndex","getUniformBlockIndex","_emscripten_glGetUniformIndices","uniformNames","names","getUniformIndices","_emscripten_glGetUniformLocation","arrayIndex","uniformBaseName","leftBrace","sizeAndId","_emscripten_glGetUniformfv","_emscripten_glGetUniformiv","_emscripten_glGetUniformuiv","_emscripten_glGetVertexAttribIiv","_emscripten_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribPointerv","pointer","getVertexAttribOffset","_emscripten_glGetVertexAttribfv","_emscripten_glGetVertexAttribiv","_emscripten_glHint","hint","_emscripten_glInvalidateFramebuffer","numAttachments","attachments","list","invalidateFramebuffer","_emscripten_glInvalidateSubFramebuffer","invalidateSubFramebuffer","_emscripten_glIsBuffer","isBuffer","_emscripten_glIsEnabled","isEnabled","_emscripten_glIsFramebuffer","fb","isFramebuffer","_emscripten_glIsProgram","isProgram","_emscripten_glIsQuery","isQuery","_emscripten_glIsQueryEXT","_emscripten_glIsRenderbuffer","rb","isRenderbuffer","_emscripten_glIsSampler","isSampler","_emscripten_glIsShader","isShader","_emscripten_glIsSync","isSync","_emscripten_glIsTexture","isTexture","_emscripten_glIsTransformFeedback","isTransformFeedback","_emscripten_glIsVertexArray","_emscripten_glIsVertexArrayOES","_emscripten_glLineWidth","lineWidth","_emscripten_glLinkProgram","linkProgram","_emscripten_glPauseTransformFeedback","pauseTransformFeedback","_emscripten_glPixelStorei","pixelStorei","_emscripten_glPolygonOffset","polygonOffset","_emscripten_glProgramBinary","_emscripten_glProgramParameteri","_emscripten_glQueryCounterEXT","_emscripten_glReadBuffer","readBuffer","_emscripten_glReadPixels","readPixels","pixelData","_emscripten_glReleaseShaderCompiler","_emscripten_glRenderbufferStorage","renderbufferStorage","_emscripten_glRenderbufferStorageMultisample","renderbufferStorageMultisample","_emscripten_glResumeTransformFeedback","resumeTransformFeedback","_emscripten_glSampleCoverage","invert","sampleCoverage","_emscripten_glSamplerParameterf","samplerParameterf","_emscripten_glSamplerParameterfv","_emscripten_glSamplerParameteri","samplerParameteri","_emscripten_glSamplerParameteriv","_emscripten_glScissor","scissor","_emscripten_glShaderBinary","_emscripten_glShaderSource","shaderSource","_emscripten_glStencilFunc","stencilFunc","_emscripten_glStencilFuncSeparate","stencilFuncSeparate","_emscripten_glStencilMask","stencilMask","_emscripten_glStencilMaskSeparate","stencilMaskSeparate","_emscripten_glStencilOp","stencilOp","_emscripten_glStencilOpSeparate","stencilOpSeparate","_emscripten_glTexImage2D","texImage2D","_emscripten_glTexImage3D","texImage3D","_emscripten_glTexParameterf","texParameterf","_emscripten_glTexParameterfv","_emscripten_glTexParameteri","texParameteri","_emscripten_glTexParameteriv","_emscripten_glTexStorage2D","texStorage2D","_emscripten_glTexStorage3D","texStorage3D","_emscripten_glTexSubImage2D","texSubImage2D","_emscripten_glTexSubImage3D","texSubImage3D","_emscripten_glTransformFeedbackVaryings","varyings","bufferMode","vars","transformFeedbackVaryings","_emscripten_glUniform1f","v0","uniform1f","miniTempWebGLFloatBuffers","_emscripten_glUniform1fv","uniform1fv","_emscripten_glUniform1i","uniform1i","miniTempWebGLIntBuffers","_emscripten_glUniform1iv","uniform1iv","_emscripten_glUniform1ui","uniform1ui","_emscripten_glUniform1uiv","uniform1uiv","_emscripten_glUniform2f","v1","uniform2f","_emscripten_glUniform2fv","uniform2fv","_emscripten_glUniform2i","uniform2i","_emscripten_glUniform2iv","uniform2iv","_emscripten_glUniform2ui","uniform2ui","_emscripten_glUniform2uiv","uniform2uiv","_emscripten_glUniform3f","v2","uniform3f","_emscripten_glUniform3fv","uniform3fv","_emscripten_glUniform3i","uniform3i","_emscripten_glUniform3iv","uniform3iv","_emscripten_glUniform3ui","uniform3ui","_emscripten_glUniform3uiv","uniform3uiv","_emscripten_glUniform4f","v3","uniform4f","_emscripten_glUniform4fv","uniform4fv","_emscripten_glUniform4i","uniform4i","_emscripten_glUniform4iv","uniform4iv","_emscripten_glUniform4ui","uniform4ui","_emscripten_glUniform4uiv","uniform4uiv","_emscripten_glUniformBlockBinding","uniformBlockBinding","_emscripten_glUniformMatrix2fv","transpose","uniformMatrix2fv","_emscripten_glUniformMatrix2x3fv","uniformMatrix2x3fv","_emscripten_glUniformMatrix2x4fv","uniformMatrix2x4fv","_emscripten_glUniformMatrix3fv","uniformMatrix3fv","_emscripten_glUniformMatrix3x2fv","uniformMatrix3x2fv","_emscripten_glUniformMatrix3x4fv","uniformMatrix3x4fv","_emscripten_glUniformMatrix4fv","uniformMatrix4fv","_emscripten_glUniformMatrix4x2fv","uniformMatrix4x2fv","_emscripten_glUniformMatrix4x3fv","uniformMatrix4x3fv","_emscripten_glUseProgram","useProgram","_emscripten_glValidateProgram","validateProgram","_emscripten_glVertexAttrib1f","vertexAttrib1f","_emscripten_glVertexAttrib1fv","_emscripten_glVertexAttrib2f","vertexAttrib2f","_emscripten_glVertexAttrib2fv","_emscripten_glVertexAttrib3f","vertexAttrib3f","_emscripten_glVertexAttrib3fv","_emscripten_glVertexAttrib4f","vertexAttrib4f","_emscripten_glVertexAttrib4fv","_emscripten_glVertexAttribDivisor","_emscripten_glVertexAttribDivisorANGLE","_emscripten_glVertexAttribDivisorARB","_emscripten_glVertexAttribDivisorEXT","_emscripten_glVertexAttribDivisorNV","_emscripten_glVertexAttribI4i","vertexAttribI4i","_emscripten_glVertexAttribI4iv","_emscripten_glVertexAttribI4ui","vertexAttribI4ui","_emscripten_glVertexAttribI4uiv","_emscripten_glVertexAttribIPointer","vertexAttribIPointer","_emscripten_glVertexAttribPointer","vertexAttribPointer","_emscripten_glViewport","_emscripten_glWaitSync","waitSync","isAsync","instrumentWasmImports","ASYNCIFY_IMPORTS","original","instrumentWasmExports","exportCallStack","maybeStopUnwind","State","Normal","Unwinding","Rewinding","Disabled","StackSize","currData","handleSleepReturnValue","callStackNameToId","callStackIdToName","callStackId","asyncPromiseHandlers","sleepCallbacks","getCallStackId","_asyncify_stop_unwind","Fibers","trampoline","whenDone","allocateData","setDataHeader","setDataRewindFunc","stackSize","rewindId","getDataRewindFunc","doRewind","startAsync","reachedCallback","reachedAfterCallback","_asyncify_start_rewind","asyncWasmReturnValue","isError","_asyncify_start_unwind","_asyncify_stop_rewind","_free","handleAsync","readMode","writeMode","miniTempWebGLFloatBuffersStorage","miniTempWebGLIntBuffersStorage","atob","wasmImports","___errno_location","length_low","length_high","isNaN","cwdLengthInBytes","dirp","struct_size","child","op","argp","nofollow","time","tmPtr","getSeconds","getMinutes","getHours","yday","getTimezoneOffset","summerOffset","winterOffset","guessedOffset","dstOffset","nonDstOffset","trueOffset","setTime","getYear","timezone","daylight","tzname","extractZone","toTimeString","currentYear","winter","summer","stdTimezoneOffset","winterName","summerName","winterNamePtr","summerNamePtr","api","attrib_list","configs","hmm","contextAttribs","glesContextVersion","minorVersion","surface","draw","isContextLost","interval","argbuf","runEmAsmFunction","runMainThreadEmAsm","fullscreenStrategy","hiddenElements","onlyVisibleElement","displayState","hideEverythingExceptGivenElement","restoreHiddenElements","webkitExitFullscreen","gamepadState","lastGamepadState","dest","copyWithin","deferUntilInEventHandler","doRequestFullscreen","requestedSize","oldSize","maxHeapSize","alignUp","multiple","cutDown","overGrownHeapSize","getGamepads","webkitGetGamepads","targetThread","onbeforeunload","confirmationMessage","returnValue","registerBeforeUnloadEventCallback","dynCall_v","mozRequestPointerLock","webkitRequestPointerLock","msRequestPointerLock","uiEvent","outerWidth","outerHeight","registerUiEventCallback","onwheel","wheelEvent","registerWheelEventCallback","__environ","environ_buf","stringToAscii","penviron_count","penviron_buf_size","pbuf","rightsBase","rightsInheriting","iov","iovcnt","pnum","doReadv","offset_low","offset_high","newOffset","doWritev","receiveInstance","instantiateStreaming","createWasm","runCaller","ready","defaultIWad","deathmatchIWad","indexDBName","WadHandler","_defineProperty","signal","trace","setWad","wadName","isIWAD","wadState","async","database","_database","upload","reader","FileReader","readAsArrayBuffer","iwad","trans","_database2","wad","_database3","dbrequest","singleton","projects","WadChooser","pelements","flex","fontSize","whiteSpace","fontWeight","flexGrow","padding","flexDirection","justifyContent","alignItems","onClick","click","onChange","uploadWad","flexShrink","EdgeClassic","canvasRef","useRef","canvasContainerRef","useState","loading","lock","_I_WebSetFullscreen","useEffect","syncCanvasSize","offsetWidth","offsetHeight","canvasSync","_I_WebSyncScreenSize","doSyncTimeout","find","_I_WebOpenGameMenu","_objectSpread","preEdgeSyncFS","postEdgeSyncFS","preInit","print","printErr","setStatus","monitorRunDependencies","globalThis","visibility","_canvasRef$current","Player","App"],"mappings":"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AAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,4CAA6C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,QAAU,CAAC,SAAY,0DAA2D,MAAS,OAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,4CAA6C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,M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AyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wDAAyD,MAAS,QAAS,IA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AS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAA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O,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,SAAW,CAAC,SAAY,8CAA+C,MAAS,QAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW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iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW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","file":"bundle.ee91b.esm.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"Pq/i\");\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) + 'sw-debug.js'\n\t\t);\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register(\n\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\tdoRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {import('./internal').Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function(p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","function cycleDetected(): never {\n\tthrow new Error(\"Cycle detected\");\n}\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\nfunction batch<T>(callback: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn callback();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\tpeek(): T;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\tconst signal = this;\n\treturn effect(function (this: Effect) {\n\t\tconst value = signal.value;\n\t\tconst flag = this._flags & TRACKING;\n\t\tthis._flags &= ~TRACKING;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tthis._flags |= flag;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.peek = function () {\n\treturn this._value;\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget() {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tcycleDetected();\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\nfunction signal<T>(value: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_compute: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(compute: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, compute: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._compute = compute;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._compute();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when the it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nComputed.prototype.peek = function () {\n\tif (!this._refresh()) {\n\t\tcycleDetected();\n\t}\n\tif (this._flags & HAS_ERROR) {\n\t\tthrow this._value;\n\t}\n\treturn this._value;\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget() {\n\t\tif (this._flags & RUNNING) {\n\t\t\tcycleDetected();\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\ninterface ReadonlySignal<T = any> extends Signal<T> {\n\treadonly value: T;\n}\n\nfunction computed<T>(compute: () => T): ReadonlySignal<T> {\n\treturn new Computed(compute);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._compute = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ndeclare class Effect {\n\t_compute?: () => unknown;\n\t_cleanup?: unknown;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(compute: () => void);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, compute: () => void) {\n\tthis._compute = compute;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (!(this._flags & DISPOSED) && this._compute !== undefined) {\n\t\t\tthis._cleanup = this._compute();\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tcycleDetected();\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nfunction effect(compute: () => unknown): () => void {\n\tconst effect = new Effect(compute);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { signal, computed, effect, batch, Signal, ReadonlySignal };\n","import { options, Component } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport { signal, computed, batch, effect, Signal, type ReadonlySignal };\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction Text(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst s = useMemo(() => {\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Replace this component's vdom updater with a direct text one:\n\t\tthis._updater!._callback = () => {\n\t\t\t(this.base as Text).data = s.peek();\n\t\t};\n\n\t\treturn computed(() => {\n\t\t\tlet data = currentSignal.value;\n\t\t\tlet s = data.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\t}, []);\n\n\treturn s.value;\n}\nText.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: Text },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(() => {\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// let reason;\n\t// if (!hasSignals && !hasComputeds.has(this)) {\n\t// \treason = \"no signals or computeds\";\n\t// } else if (hasPendingUpdate.has(this)) {\n\t// \treason = \"has pending update\";\n\t// } else if (hasHookState.has(this)) {\n\t// \treason = \"has hook state\";\n\t// }\n\t// if (reason) {\n\t// \tif (!this) reason += \" (`this` bug)\";\n\t// \tconsole.log(\"not optimizing\", this?.constructor?.name, \": \", reason, {\n\t// \t\tdetails: {\n\t// \t\t\thasSignals,\n\t// \t\t\thasComputeds: hasComputeds.has(this),\n\t// \t\t\thasPendingUpdate: hasPendingUpdate.has(this),\n\t// \t\t\thasHookState: hasHookState.has(this),\n\t// \t\t\tdeps: Array.from(updater._deps),\n\t// \t\t\tupdater,\n\t// \t\t},\n\t// \t});\n\t// }\n\n\t// if this component used no signals or computeds, update:\n\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t// if there is a pending re-render triggered from Signals,\n\t// or if there is hook or class state, update:\n\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T) {\n\treturn useMemo(() => signal<T>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(() => callback.current());\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header__OVZyn\",\"logo\":\"logo__jPF5-\"};","import { h } from 'preact';\r\nimport style from './style.css';\r\n\r\nconst Header = () => (\r\n\t<header class={style.header}>\r\n\t\t<div style={{ display: \"flex\", width: \"100%\", maxWidth: \"1440px\" }}>\r\n\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t<a href=\"./\" class={style.logo}>\r\n\t\t\t\t\t<img src=\"./assets/eclogo.png\" height=\"48px\" />\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\r\n\t\t\t<nav>\r\n\t\t\t\t<div style={{ display: \"flex\", width: \"100%\" }} />\r\n\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t\t<a href=\"https://discord.gg/jUhEKHGWZm\" target=\"_blank\">\r\n\t\t\t\t\t\t\t<img src=\"./assets/discord-mark-white.svg\" height=\"32px\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t\t<a href=\"https://github.com/edge-classic/EDGE-classic\" target=\"_blank\">\r\n\t\t\t\t\t\t\t<img src=\"./assets/github-mark-white.svg\" height=\"32px\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t</header >\r\n);\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"loading__O14bA\"};","\r\nvar createEdgeModule = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  \r\n  return (\r\nfunction(createEdgeModule = {})  {\r\n\r\n// include: shell.js\r\n// The Module object: Our interface to the outside world. We import\r\n// and export values on it. There are various ways Module can be used:\r\n// 1. Not defined. We create it here\r\n// 2. A function parameter, function(Module) { ..generated code.. }\r\n// 3. pre-run appended it, var Module = {}; ..generated code..\r\n// 4. External script tag defines var Module.\r\n// We need to check if Module already exists (e.g. case 3 above).\r\n// Substitution will be replaced with actual code on later stage of the build,\r\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\r\n// Note that if you want to run closure, and also to use Module\r\n// after the generated code, you will need to define   var Module = {};\r\n// before the code. Then that object will be used in the code, and you\r\n// can continue to use Module afterwards as well.\r\nvar Module = typeof createEdgeModule != 'undefined' ? createEdgeModule : {};\r\n\r\n// Set up the promise that indicates the Module is initialized\r\nvar readyPromiseResolve, readyPromiseReject;\r\nModule['ready'] = new Promise((resolve, reject) => {\r\n  readyPromiseResolve = resolve;\r\n  readyPromiseReject = reject;\r\n});\r\n\r\n// --pre-jses are emitted after the Module integration code, so that they can\r\n// refer to Module (if they choose; they can also define Module)\r\n\r\n  var Module = typeof Module !== 'undefined' ? Module : {};\r\n\r\n  if (!Module.expectedDataFileDownloads) {\r\n    Module.expectedDataFileDownloads = 0;\r\n  }\r\n\r\n  Module.expectedDataFileDownloads++;\r\n  (function() {\r\n    // Do not attempt to redownload the virtual filesystem data when in a pthread or a Wasm Worker context.\r\n    if (Module['ENVIRONMENT_IS_PTHREAD'] || Module['$ww']) return;\r\n    var loadPackage = function(metadata) {\r\n\r\n      var PACKAGE_PATH = '';\r\n      if (typeof window === 'object') {\r\n        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');\r\n      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {\r\n        // web worker\r\n        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');\r\n      }\r\n      var PACKAGE_NAME = 'C:/Dev/EDGE-classic/web/site/edge-classic.data';\r\n      var REMOTE_PACKAGE_BASE = 'edge-classic.data';\r\n      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {\r\n        Module['locateFile'] = Module['locateFilePackage'];\r\n        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');\r\n      }\r\n      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\r\nvar REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\r\n\r\n      function fetchRemotePackage(packageName, packageSize, callback, errback) {\r\n        \r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', packageName, true);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.onprogress = function(event) {\r\n          var url = packageName;\r\n          var size = packageSize;\r\n          if (event.total) size = event.total;\r\n          if (event.loaded) {\r\n            if (!xhr.addedTotal) {\r\n              xhr.addedTotal = true;\r\n              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};\r\n              Module.dataFileDownloads[url] = {\r\n                loaded: event.loaded,\r\n                total: size\r\n              };\r\n            } else {\r\n              Module.dataFileDownloads[url].loaded = event.loaded;\r\n            }\r\n            var total = 0;\r\n            var loaded = 0;\r\n            var num = 0;\r\n            for (var download in Module.dataFileDownloads) {\r\n            var data = Module.dataFileDownloads[download];\r\n              total += data.total;\r\n              loaded += data.loaded;\r\n              num++;\r\n            }\r\n            total = Math.ceil(total * Module.expectedDataFileDownloads/num);\r\n            if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');\r\n          } else if (!Module.dataFileDownloads) {\r\n            if (Module['setStatus']) Module['setStatus']('Downloading data...');\r\n          }\r\n        };\r\n        xhr.onerror = function(event) {\r\n          throw new Error(\"NetworkError for: \" + packageName);\r\n        }\r\n        xhr.onload = function(event) {\r\n          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n            var packageData = xhr.response;\r\n            callback(packageData);\r\n          } else {\r\n            throw new Error(xhr.statusText + \" : \" + xhr.responseURL);\r\n          }\r\n        };\r\n        xhr.send(null);\r\n      };\r\n\r\n      function handleError(error) {\r\n        console.error('package error:', error);\r\n      };\r\n\r\n    function runWithFS() {\r\n\r\n      function assert(check, msg) {\r\n        if (!check) throw msg + new Error().stack;\r\n      }\r\nModule['FS_createPath'](\"/\", \"edge_base\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"blasphemer\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom1\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom2\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"freedoom1\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1/graphics\", \"freedoom_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"freedoom2\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2/graphics\", \"freedoom_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"hacx\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"harmony\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony/graphics\", \"harmony_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"heretic\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"plutonia\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"rekkr\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"colormaps\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"tnt\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/\", \"edge_defs\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"colormaps\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"crosshairs\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"edge1_font\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"overlays\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"sounds\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/sprites\", \"mbf_dog\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"ttf\", true, true);\r\nModule['FS_createPath'](\"/\", \"soundfont\", true, true);\r\n\r\n        var PACKAGE_UUID = metadata['package_uuid'];\r\n        var indexedDB;\r\n        if (typeof window === 'object') {\r\n          indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        } else if (typeof location !== 'undefined') {\r\n          // worker\r\n          indexedDB = self.indexedDB;\r\n        } else {\r\n          throw 'using IndexedDB to cache data can only be done on a web page or in a web worker';\r\n        }\r\n        var IDB_RO = \"readonly\";\r\n        var IDB_RW = \"readwrite\";\r\n        var DB_NAME = \"EM_PRELOAD_CACHE\";\r\n        var DB_VERSION = 1;\r\n        var METADATA_STORE_NAME = 'METADATA';\r\n        var PACKAGE_STORE_NAME = 'PACKAGES';\r\n        function openDatabase(callback, errback) {\r\n          try {\r\n            var openRequest = indexedDB.open(DB_NAME, DB_VERSION);\r\n          } catch (e) {\r\n            return errback(e);\r\n          }\r\n          openRequest.onupgradeneeded = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n\r\n            if (db.objectStoreNames.contains(PACKAGE_STORE_NAME)) {\r\n              db.deleteObjectStore(PACKAGE_STORE_NAME);\r\n            }\r\n            var packages = db.createObjectStore(PACKAGE_STORE_NAME);\r\n\r\n            if (db.objectStoreNames.contains(METADATA_STORE_NAME)) {\r\n              db.deleteObjectStore(METADATA_STORE_NAME);\r\n            }\r\n            var metadata = db.createObjectStore(METADATA_STORE_NAME);\r\n          };\r\n          openRequest.onsuccess = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n            callback(db);\r\n          };\r\n          openRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        };\r\n\r\n        // This is needed as chromium has a limit on per-entry files in IndexedDB\r\n        // https://cs.chromium.org/chromium/src/content/renderer/indexed_db/webidbdatabase_impl.cc?type=cs&sq=package:chromium&g=0&l=177\r\n        // https://cs.chromium.org/chromium/src/out/Debug/gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom.h?type=cs&sq=package:chromium&g=0&l=60\r\n        // We set the chunk size to 64MB to stay well-below the limit\r\n        var CHUNK_SIZE = 64 * 1024 * 1024;\r\n\r\n        function cacheRemotePackage(\r\n          db,\r\n          packageName,\r\n          packageData,\r\n          packageMeta,\r\n          callback,\r\n          errback\r\n        ) {\r\n          var transactionPackages = db.transaction([PACKAGE_STORE_NAME], IDB_RW);\r\n          var packages = transactionPackages.objectStore(PACKAGE_STORE_NAME);\r\n          var chunkSliceStart = 0;\r\n          var nextChunkSliceStart = 0;\r\n          var chunkCount = Math.ceil(packageData.byteLength / CHUNK_SIZE);\r\n          var finishedChunks = 0;\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            nextChunkSliceStart += CHUNK_SIZE;\r\n            var putPackageRequest = packages.put(\r\n              packageData.slice(chunkSliceStart, nextChunkSliceStart),\r\n              'package/' + packageName + '/' + chunkId\r\n            );\r\n            chunkSliceStart = nextChunkSliceStart;\r\n            putPackageRequest.onsuccess = function(event) {\r\n              finishedChunks++;\r\n              if (finishedChunks == chunkCount) {\r\n                var transaction_metadata = db.transaction(\r\n                  [METADATA_STORE_NAME],\r\n                  IDB_RW\r\n                );\r\n                var metadata = transaction_metadata.objectStore(METADATA_STORE_NAME);\r\n                var putMetadataRequest = metadata.put(\r\n                  {\r\n                    'uuid': packageMeta.uuid,\r\n                    'chunkCount': chunkCount\r\n                  },\r\n                  'metadata/' + packageName\r\n                );\r\n                putMetadataRequest.onsuccess = function(event) {\r\n                  callback(packageData);\r\n                };\r\n                putMetadataRequest.onerror = function(error) {\r\n                  errback(error);\r\n                };\r\n              }\r\n            };\r\n            putPackageRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n        /* Check if there's a cached package, and if so whether it's the latest available */\r\n        function checkCachedPackage(db, packageName, callback, errback) {\r\n          var transaction = db.transaction([METADATA_STORE_NAME], IDB_RO);\r\n          var metadata = transaction.objectStore(METADATA_STORE_NAME);\r\n          var getRequest = metadata.get('metadata/' + packageName);\r\n          getRequest.onsuccess = function(event) {\r\n            var result = event.target.result;\r\n            if (!result) {\r\n              return callback(false, null);\r\n            } else {\r\n              return callback(PACKAGE_UUID === result['uuid'], result);\r\n            }\r\n          };\r\n          getRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        }\r\n\r\n        function fetchCachedPackage(db, packageName, metadata, callback, errback) {\r\n          var transaction = db.transaction([PACKAGE_STORE_NAME], IDB_RO);\r\n          var packages = transaction.objectStore(PACKAGE_STORE_NAME);\r\n\r\n          var chunksDone = 0;\r\n          var totalSize = 0;\r\n          var chunkCount = metadata['chunkCount'];\r\n          var chunks = new Array(chunkCount);\r\n\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            var getRequest = packages.get('package/' + packageName + '/' + chunkId);\r\n            getRequest.onsuccess = function(event) {\r\n              // If there's only 1 chunk, there's nothing to concatenate it with so we can just return it now\r\n              if (chunkCount == 1) {\r\n                callback(event.target.result);\r\n              } else {\r\n                chunksDone++;\r\n                totalSize += event.target.result.byteLength;\r\n                chunks.push(event.target.result);\r\n                if (chunksDone == chunkCount) {\r\n                  if (chunksDone == 1) {\r\n                    callback(event.target.result);\r\n                  } else {\r\n                    var tempTyped = new Uint8Array(totalSize);\r\n                    var byteOffset = 0;\r\n                    for (var chunkId in chunks) {\r\n                      var buffer = chunks[chunkId];\r\n                      tempTyped.set(new Uint8Array(buffer), byteOffset);\r\n                      byteOffset += buffer.byteLength;\r\n                      buffer = undefined;\r\n                    }\r\n                    chunks = undefined;\r\n                    callback(tempTyped.buffer);\r\n                    tempTyped = undefined;\r\n                  }\r\n                }\r\n              }\r\n            };\r\n            getRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n      function processPackageData(arrayBuffer) {\r\n        assert(arrayBuffer, 'Loading data file failed.');\r\n        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');\r\n        var byteArray = new Uint8Array(arrayBuffer);\r\n        var curr;\r\n        var compressedData = {\"data\":null,\"cachedOffset\":52707248,\"cachedIndexes\":[-1,-1],\"cachedChunks\":[null,null],\"offsets\":[0,2048,4096,6153,8201,10249,12297,14345,16393,18441,20489,22537,24585,26633,28681,30729,32777,34825,36873,38921,40969,43017,44320,45575,46645,47624,49234,50342,51819,53416,54516,55518,56293,57235,58188,59129,60147,60899,61811,62792,63738,64694,65555,66506,67313,68206,69153,69989,70783,71676,72484,73741,74613,75611,76579,77724,78848,79834,81111,82160,83070,84335,85561,86826,88099,89202,89797,90410,90968,91530,92066,93080,94033,94910,95577,96322,96866,97624,98169,98862,99599,100613,101527,102129,102801,103500,104157,105285,105929,106967,107816,108514,109054,109564,110124,110861,111634,112366,113190,113776,114475,115334,116328,117464,118346,119140,120134,121095,121679,122622,123315,124229,125107,125813,126670,127636,128563,128937,129456,130251,131027,131723,132264,132878,133791,134395,135059,135695,136352,137133,137861,138655,139319,139991,140693,141209,143257,144769,146219,147670,149199,150706,152248,153791,155287,156800,158320,159949,161728,163596,165554,167544,169565,171581,173578,175584,177601,179547,181442,183205,185010,186874,188820,190683,192684,194725,196601,198464,200308,202093,203809,205536,207264,209087,210952,212869,214811,216840,218841,220836,222812,224644,226260,227773,229261,230754,232273,233788,235317,236814,238294,239740,241185,242625,244557,246151,247455,248756,250011,251304,252547,253875,255221,256518,257769,259087,260297,261582,262985,264378,265809,267204,268686,270096,271545,273082,274609,276124,277655,279196,280758,282399,284013,285596,287197,288768,290352,291899,293386,294930,296627,298328,299926,301660,303196,304565,305922,307331,308579,309813,311064,312358,313585,314769,315949,317149,318295,319484,320664,321905,323192,324447,326153,327821,328904,330003,331144,332245,333232,334230,335285,336399,337542,338722,339797,341006,342261,343628,345103,346587,348119,349729,351277,352868,354471,355917,357278,358869,360470,361988,363521,364954,366359,367796,369045,370378,371774,372990,374400,375841,377329,378837,380351,381862,383239,384499,385680,386685,387722,388744,389887,391030,392215,393269,394154,395186,396205,397102,398040,399036,400374,402375,403877,405454,407002,408617,410190,411807,413495,415072,416686,418287,419971,421546,422959,424528,426120,427672,429332,431050,432638,434215,435825,437304,438803,440257,441857,443470,444923,446410,447950,449516,451073,452600,454155,455752,457343,458986,460674,462360,463924,465463,467111,468732,470254,471747,472929,474320,475875,477418,478884,480372,481967,483617,485320,487061,488608,490119,491716,493764,494786,495786,496783,497865,499008,500071,501147,502267,503310,504351,505463,506613,507772,508888,509991,511106,512244,513408,514636,515886,517106,518394,519713,521010,522188,523287,524359,525414,526420,527425,528414,529478,530447,531394,532344,533269,534175,535220,536304,537363,538346,539390,540380,541422,542408,543358,544361,545376,546466,547586,548688,549810,550898,551977,552993,553828,554728,556503,558099,559403,560682,561957,563243,564478,565800,567149,568444,569692,571015,572210,573394,574692,576025,577368,578685,580046,581356,582766,584295,585954,587573,589121,590446,591789,593222,594798,596405,598128,599801,601406,602819,604092,605455,606907,608388,609871,611361,612817,614197,615554,616945,618184,619428,620709,621990,623207,624391,625562,626774,627935,629133,630299,631538,632842,634086,635808,637685,639260,640851,642425,644026,645597,647147,648730,650337,651893,653477,655114,656878,658636,660464,662265,663969,665504,667123,668827,670602,672497,674280,676025,677934,679799,681599,683496,685234,687025,688789,690528,692250,694014,695680,697367,699061,700770,702684,704421,706233,707530,708892,710286,711553,712986,714486,715991,717477,719009,720557,722078,723593,725140,726594,728048,729526,731223,733077,733876,734699,735527,736469,737346,738022,738803,739768,740579,741441,742149,743008,744005,745212,746486,747672,749010,750281,751677,753169,754704,756251,757820,759455,761056,762647,764253,765850,767495,769097,770675,772160,773632,775136,776660,778238,779731,781138,782627,784046,785392,786706,787925,789082,790248,791455,792524,793543,794562,795610,796627,797629,798638,799653,800667,801495,802240,804288,805959,807810,809711,811566,813397,815203,817029,818880,820643,822328,823918,825442,826852,828813,830611,832457,834340,836225,838080,839962,841865,843792,845573,847302,848878,850448,851851,853707,855660,857587,859375,861286,863204,865050,866810,868545,870048,871498,873059,874679,876309,878101,879903,881656,883662,885395,887273,889239,890881,892880,894815,896224,897618,899253,900748,902244,904202,905810,907046,908707,910268,911771,913422,915269,916726,918153,919834,921353,922887,924866,926677,928377,930061,931798,933566,935294,937034,938797,940587,942422,944223,946105,947910,949662,951428,953199,954991,956829,958662,960446,962316,964138,965909,967662,969428,971195,972959,974641,976393,978197,979914,981685,983451,985287,987044,988803,990558,992276,994015,995699,997431,999179,1000927,1002617,1004237,1006065,1007896,1009794,1011646,1013460,1015282,1017185,1019065,1020914,1022708,1024388,1026000,1027879,1029931,1031859,1033771,1035692,1037651,1039534,1041427,1043327,1045261,1047129,1048991,1050920,1052830,1054674,1056422,1058160,1059927,1061717,1063546,1065326,1067171,1068928,1070811,1072656,1074457,1076231,1078003,1079720,1081362,1082949,1084530,1086221,1087991,1089783,1091510,1093286,1094984,1096662,1098400,1100093,1101820,1103605,1105400,1107182,1108900,1110751,1112685,1114583,1116519,1118338,1120157,1122055,1123966,1125868,1127806,1129701,1131604,1133534,1135590,1137541,1139482,1141486,1143496,1145494,1147499,1149494,1151438,1153361,1155285,1157275,1159290,1161258,1163189,1165089,1167056,1169030,1170986,1172938,1174958,1176969,1178995,1180897,1182827,1184713,1186621,1188523,1190321,1192120,1193875,1195715,1197639,1199560,1201496,1203449,1205432,1207395,1209371,1211297,1213265,1215249,1217160,1219007,1220841,1222677,1224534,1226383,1228194,1229997,1231808,1233658,1235462,1237180,1238835,1240408,1241873,1243388,1244115,1246163,1248211,1250259,1252307,1254355,1256403,1258451,1260499,1262547,1264595,1266643,1268691,1270739,1272787,1274835,1276883,1278931,1280979,1283036,1285084,1287132,1289180,1291228,1293276,1295324,1297372,1299420,1301468,1303516,1305564,1307612,1309660,1311708,1313756,1315804,1317852,1319900,1321948,1323996,1326044,1328092,1330140,1332188,1334236,1336284,1338332,1340380,1342428,1344476,1346524,1348572,1350620,1352668,1354716,1356764,1358812,1360860,1362908,1364956,1367004,1369052,1371100,1373148,1375196,1377244,1379292,1381340,1383388,1385436,1387484,1389532,1391580,1393628,1395676,1397724,1399772,1401820,1403868,1405916,1407964,1410012,1412060,1414108,1416156,1418204,1420252,1422300,1424348,1426396,1428444,1430492,1432540,1434588,1436636,1438684,1440732,1442780,1444828,1446876,1448924,1450972,1453020,1455068,1457116,1459164,1461212,1463260,1465308,1467356,1469412,1471460,1473508,1475556,1477604,1479652,1481700,1483748,1485804,1487852,1489900,1491948,1493996,1496044,1498092,1500140,1502188,1504236,1506284,1508332,1510380,1512428,1514476,1516524,1518572,1520620,1522668,1524716,1526764,1528812,1530860,1532908,1534956,1537004,1539052,1541100,1543148,1545196,1547244,1549292,1551340,1553388,1555436,1557484,1559532,1561580,1563628,1565676,1567724,1569772,1571820,1573868,1575916,1577964,1580012,1582060,1584108,1586156,1588204,1590252,1592300,1594348,1596396,1598444,1600492,1602540,1604588,1606636,1608684,1610732,1612780,1614828,1616876,1618924,1620972,1623020,1625068,1627116,1629164,1631212,1633260,1635308,1637356,1639404,1641452,1643500,1645548,1647596,1649644,1651692,1653740,1655788,1657836,1659884,1661932,1663980,1666028,1668076,1670124,1672172,1674220,1676268,1678316,1680373,1682421,1684469,1686517,1688565,1690613,1692661,1694709,1696757,1698805,1700853,1702901,1704949,1706997,1709045,1711093,1713141,1715189,1717237,1719285,1721333,1723381,1725429,1727477,1729525,1731573,1733621,1735669,1737717,1739765,1741813,1743861,1745909,1747957,1750005,1752053,1754101,1756149,1758197,1760245,1762293,1764341,1766389,1768398,1769851,1771255,1772685,1774221,1775772,1777263,1778682,1780161,1781379,1782623,1784063,1785573,1786835,1788043,1789434,1790894,1792399,1793826,1795306,1796700,1798126,1799482,1801001,1802466,1803919,1805392,1806887,1808398,1809839,1811390,1812899,1814439,1815960,1817450,1819047,1820513,1822044,1823574,1825034,1826552,1828130,1829690,1831058,1832507,1833893,1835572,1837224,1838851,1840494,1842053,1843626,1845287,1846977,1848512,1850081,1851728,1853234,1855282,1856428,1857504,1858681,1859804,1860824,1861830,1862904,1864043,1865143,1866296,1867401,1868585,1869789,1871164,1872514,1873999,1875558,1877159,1878700,1880237,1881873,1883367,1884772,1886275,1887868,1889405,1890943,1892458,1893829,1895286,1896605,1897943,1899297,1900608,1901910,1903360,1904786,1906341,1907870,1909342,1910808,1912115,1913356,1914438,1915441,1916473,1917496,1918639,1919790,1920944,1921850,1922817,1923853,1924800,1925737,1926724,1927769,1929623,1931042,1932101,1933239,1934348,1935415,1936406,1937439,1938524,1939617,1940766,1941950,1943284,1944543,1945812,1947442,1948957,1950377,1951949,1953430,1954897,1956492,1958069,1959543,1961086,1962674,1964279,1965704,1967201,1968701,1970321,1971947,1973680,1975507,1977411,1979170,1980795,1982602,1984348,1986025,1987586,1989175,1990472,1991807,1993042,1993958,1995080,1996159,1997316,1998512,1999660,2000640,2001536,2002593,2003549,2004451,2005398,2006413,2008032,2009891,2011414,2012943,2014449,2015994,2017515,2019001,2020509,2022028,2023509,2025034,2026613,2028305,2030055,2031870,2033638,2035321,2036830,2038438,2040119,2041841,2043735,2045439,2047150,2048954,2050758,2052488,2054417,2055967,2057696,2059473,2061199,2062891,2064631,2066178,2067764,2069417,2071101,2073000,2074704,2076492,2077755,2079096,2080459,2081682,2083065,2084509,2086011,2087461,2088920,2090398,2091849,2093354,2094823,2096199,2097599,2099028,2100689,2102729,2104407,2106076,2107741,2109531,2111302,2113053,2114782,2116575,2118374,2120185,2122005,2123917,2125648,2127392,2129183,2130971,2132798,2134633,2136438,2138277,2140128,2141922,2143694,2145459,2147226,2148998,2150755,2152453,2154264,2156018,2157766,2159509,2161328,2163141,2164893,2166662,2168411,2170108,2171831,2173543,2175282,2176999,2178717,2180384,2182046,2183904,2185789,2187665,2189511,2191330,2193161,2195065,2196934,2198734,2200456,2202079,2203656,2204327,2206375,2208423,2210471,2212519,2214567,2216615,2218663,2220720,2222768,2224816,2226864,2228912,2230960,2233008,2235056,2237104,2239152,2241200,2243248,2245296,2247344,2249392,2251440,2253488,2255536,2257584,2259632,2261680,2263728,2265776,2267824,2269872,2271920,2273968,2276016,2278064,2280112,2282160,2284208,2286256,2288304,2290352,2292400,2294448,2296496,2298544,2300592,2302640,2304688,2306736,2308784,2310832,2312880,2314928,2316976,2319024,2321072,2323120,2325168,2327216,2329264,2331312,2333360,2335408,2337456,2339504,2340807,2342120,2343459,2344922,2346339,2347887,2349402,2350815,2352279,2353734,2355216,2356644,2358073,2359468,2360821,2361955,2362632,2363678,2364906,2366401,2368030,2369802,2371640,2373483,2375368,2377237,2379008,2380761,2382152,2383920,2385667,2387510,2389389,2391227,2393048,2394858,2396641,2398388,2399861,2401110,2402064,2403170,2404511,2405748,2406997,2408375,2409545,2410680,2411910,2413239,2414688,2416142,2417646,2419107,2420521,2421879,2423279,2425233,2426848,2428293,2429792,2431330,2432869,2434326,2435874,2437379,2438810,2440299,2441893,2443531,2444958,2446520,2448200,2449865,2451561,2453370,2455125,2456785,2458517,2460090,2461668,2463224,2464755,2466348,2467970,2469556,2471166,2472777,2474399,2475991,2477531,2479080,2480698,2482360,2483932,2485581,2487135,2488709,2490295,2491955,2493577,2495162,2496552,2497693,2499158,2500658,2502102,2503445,2504913,2506438,2508012,2509621,2511138,2512554,2514018,2515837,2517591,2519010,2520422,2521803,2523241,2524625,2526063,2527542,2528903,2530301,2531759,2533269,2534453,2535821,2537379,2538912,2540427,2542078,2543697,2545295,2546923,2548457,2549922,2551381,2552908,2554447,2556024,2557473,2558970,2560504,2562058,2563532,2565026,2566553,2568079,2569646,2571231,2572822,2574454,2575973,2577517,2579075,2580548,2581933,2583221,2584168,2585326,2586677,2588041,2589295,2590687,2592137,2593607,2595160,2596634,2597976,2599333,2600917,2602925,2604521,2606174,2607836,2609591,2611344,2613053,2614825,2616485,2618188,2619920,2621748,2623425,2624883,2626526,2628181,2629800,2631526,2633326,2635005,2636652,2638321,2639863,2641404,2642916,2644593,2646277,2647789,2649335,2650909,2652534,2654200,2655806,2657451,2659164,2660841,2662573,2664335,2666112,2667745,2669333,2671018,2672678,2674231,2675763,2677013,2678546,2680265,2681978,2683536,2685153,2686865,2688639,2690455,2692294,2693953,2695583,2697257,2699305,2699943,2700505,2701128,2701797,2702460,2703144,2703943,2704934,2706026,2707091,2707933,2709090,2710561,2712097,2713715,2715264,2716420,2717999,2719517,2721187,2722980,2724634,2726169,2727896,2729520,2731232,2732962,2734590,2736136,2737933,2739620,2741364,2743108,2744807,2746426,2748115,2749853,2751579,2753346,2755069,2756604,2758032,2759439,2760652,2761822,2763229,2764609,2765877,2767095,2768357,2769695,2771161,2772699,2774218,2775727,2777289,2778960,2779883,2781931,2783979,2786027,2788075,2790123,2792171,2794219,2796267,2798315,2800363,2802411,2804459,2806507,2808555,2810603,2812651,2814699,2816747,2818795,2820843,2822891,2824939,2826987,2829035,2831083,2833131,2835179,2837227,2839275,2841323,2843371,2845419,2847467,2849515,2851563,2853611,2855659,2857707,2859755,2861803,2863851,2865899,2867947,2869995,2872043,2874091,2876139,2878187,2880235,2882283,2884331,2886379,2888427,2890475,2892523,2894571,2896619,2898667,2900715,2902763,2904811,2906859,2908907,2910955,2913003,2915051,2917099,2919147,2921195,2923243,2925291,2927339,2929387,2931435,2933483,2935531,2937579,2939627,2941675,2943723,2945771,2947819,2949867,2951915,2953963,2956011,2958059,2960107,2962155,2964203,2966251,2968299,2970347,2972395,2974443,2976491,2978539,2980587,2982635,2984691,2986739,2988787,2990835,2992883,2994931,2996979,2999027,3001075,3003123,3005171,3007219,3009267,3011315,3013363,3015411,3017459,3019507,3021555,3023603,3025651,3027699,3029747,3031795,3033851,3035899,3037947,3039995,3042043,3044091,3046139,3048187,3050235,3052283,3054331,3056379,3058427,3060475,3062523,3064571,3066619,3068667,3070715,3072763,3074819,3076867,3078915,3080963,3083011,3085059,3087107,3089155,3091203,3093251,3095299,3097347,3099395,3101443,3103491,3105539,3107587,3109635,3111683,3113731,3115779,3117834,3119882,3121930,3123978,3126026,3128074,3130122,3132170,3134218,3136266,3138314,3140362,3142410,3144458,3146506,3148554,3150602,3152650,3154698,3156746,3158803,3160846,3162856,3164886,3166936,3168984,3171032,3173080,3175130,3177178,3179226,3181274,3183322,3185370,3187418,3189466,3191514,3193562,3195610,3197658,3199706,3201754,3203802,3205850,3207898,3209946,3212003,3214051,3216099,3218147,3220195,3222243,3224291,3226339,3228387,3230435,3232483,3234531,3236579,3238627,3240683,3242731,3244779,3246827,3248875,3250923,3252971,3255019,3257067,3259094,3261110,3263156,3265210,3267266,3269314,3271362,3273408,3275456,3277504,3279552,3281600,3283648,3285696,3287744,3289792,3291840,3293888,3295936,3297984,3300032,3302080,3304128,3306176,3308224,3310272,3312329,3314377,3316425,3318473,3320521,3322569,3324617,3326665,3328713,3330761,3332809,3334857,3336905,3338953,3341009,3343057,3345105,3347153,3349201,3351249,3353297,3355351,3357383,3359391,3361435,3363490,3365538,3367586,3369634,3371682,3373730,3375778,3377826,3379874,3381922,3383970,3386018,3388066,3390114,3392162,3394210,3396258,3398306,3400354,3402402,3404450,3406498,3408546,3410594,3412642,3414690,3416738,3418786,3420834,3422882,3424930,3426978,3429026,3431074,3433122,3435170,3437218,3439266,3441314,3443362,3445410,3447458,3449506,3451554,3453602,3455650,3457698,3459746,3461794,3463842,3465890,3467938,3469986,3472034,3474082,3476130,3478178,3480226,3482274,3484322,3486370,3488418,3490466,3492514,3494562,3496610,3498658,3500706,3502754,3504802,3506850,3508898,3510946,3512994,3515042,3517090,3519138,3521186,3523234,3525282,3527330,3529378,3531426,3533474,3535522,3537570,3539618,3541666,3543714,3545762,3547810,3549858,3551906,3553954,3556002,3558050,3560098,3562146,3564194,3566242,3568290,3570338,3572386,3574434,3576482,3578530,3580578,3582626,3584674,3586722,3588770,3590818,3592866,3594914,3596966,3599014,3601062,3603110,3605158,3607206,3609254,3611302,3613350,3615398,3617446,3619494,3621542,3623590,3625638,3627686,3629734,3631782,3633830,3635878,3637926,3639963,3641973,3644013,3646066,3648123,3650180,3652228,3654277,3656325,3658373,3660421,3662469,3664517,3666565,3668613,3670661,3672709,3674757,3676805,3678853,3680901,3682949,3684997,3687045,3689093,3690701,3692061,3693497,3694733,3695873,3696973,3697984,3699159,3700243,3701457,3702574,3703808,3704970,3706029,3707214,3708304,3709441,3710526,3711674,3712762,3713937,3715083,3716274,3717237,3718168,3719081,3720067,3721013,3721663,3722666,3723458,3724284,3725266,3725665,3726006,3726358,3727022,3728178,3729475,3730921,3732312,3733720,3734971,3735894,3736966,3737822,3738734,3739614,3740464,3741846,3743230,3744474,3745642,3746757,3747701,3748845,3750014,3751078,3752183,3753266,3754469,3755755,3756826,3757940,3758972,3760219,3761351,3762544,3763652,3764780,3765908,3766870,3767801,3768768,3769596,3770593,3771552,3772190,3773272,3774123,3774992,3776001,3776336,3776675,3777033,3777951,3779107,3780525,3781990,3783411,3784845,3785803,3786938,3788076,3788981,3789929,3790762,3792270,3793632,3793682,3793729,3793774,3793831,3793951,3794089,3794282,3794460,3794625,3794890,3795125,3795400,3796013,3796968,3797995,3798992,3800199,3801672,3803251,3804817,3806483,3808105,3809893,3811640,3813392,3815002,3816553,3818132,3819759,3821443,3823123,3824880,3826665,3828295,3829941,3831569,3833194,3834828,3836368,3837416,3838346,3839329,3840091,3840645,3840916,3841110,3841247,3841355,3841490,3841663,3841782,3841843,3841896,3841942,3841990,3842039,3842509,3844418,3844571,3844767,3844965,3845170,3845390,3845779,3846169,3846554,3846973,3847405,3847650,3847987,3848662,3849486,3850504,3851447,3852540,3853824,3855420,3857131,3858927,3860676,3862450,3864302,3866117,3867861,3869517,3871196,3872891,3874756,3876577,3878483,3880354,3882159,3883947,3885868,3887721,3889591,3891479,3892787,3893734,3894637,3895515,3896217,3896773,3897141,3897494,3897811,3898216,3898532,3898931,3899100,3899267,3899408,3899632,3899836,3899959,3901968,3903335,3904648,3905942,3907137,3908455,3909855,3911256,3912565,3913949,3915261,3916667,3918148,3919567,3920950,3922401,3923897,3925354,3926802,3928266,3929813,3931196,3932563,3933969,3935371,3936642,3937748,3939008,3940412,3941708,3943075,3944420,3945810,3947052,3948435,3949868,3951195,3952475,3953856,3955384,3956859,3958274,3959787,3961063,3962446,3963855,3965292,3966714,3968149,3969512,3970824,3972205,3973505,3974988,3976337,3977533,3978790,3980013,3981834,3982728,3984549,3985687,3986570,3987732,3989325,3990602,3991830,3993586,3994361,3995451,3996615,3998484,3998529,3998574,3998622,3998755,3999856,4000783,4001813,4003096,4004517,4006086,4007367,4009139,4010950,4012710,4014369,4016048,4017458,4018294,4019710,4021350,4023119,4024938,4026664,4028458,4030298,4032102,4033742,4035391,4037064,4038803,4040705,4042552,4044452,4046303,4048090,4049908,4051800,4053655,4055507,4057438,4059073,4060674,4062215,4063891,4065533,4066888,4068124,4069498,4070674,4071873,4072980,4073731,4074683,4074803,4074848,4074886,4074931,4075779,4076787,4077673,4078464,4079320,4080598,4081865,4083198,4084484,4085351,4086269,4086937,4087626,4088350,4089034,4089765,4090460,4091418,4092248,4093190,4094103,4094974,4095914,4096750,4097483,4098064,4099002,4099970,4100861,4101743,4102721,4103186,4103926,4104661,4105424,4106151,4106968,4107829,4108612,4109550,4110206,4110916,4111754,4112579,4113394,4114221,4115057,4115971,4116859,4117732,4118564,4119364,4120215,4121025,4122062,4122884,4123712,4125421,4126916,4128445,4129887,4131568,4133183,4134717,4136326,4137872,4139377,4140888,4142536,4144157,4145711,4147242,4148892,4150205,4151704,4153289,4154892,4156473,4157939,4159488,4160969,4162667,4164510,4165970,4167426,4168677,4169793,4171027,4172371,4173668,4174700,4175862,4177076,4178154,4179318,4180554,4181845,4183077,4184097,4184896,4185734,4186886,4188500,4190040,4191448,4192908,4194254,4195540,4196936,4198101,4199384,4200737,4202048,4203233,4204289,4205211,4206048,4206676,4207972,4209729,4211269,4212715,4214230,4215592,4216893,4218281,4219412,4220673,4222009,4223320,4224469,4225278,4226133,4226775,4227743,4229664,4231159,4232598,4234067,4235477,4236774,4238125,4239410,4240587,4241962,4243342,4244655,4245797,4246783,4247717,4248526,4249198,4250568,4252294,4253746,4255204,4256639,4258109,4259651,4261167,4262426,4263572,4264436,4265234,4266003,4266908,4267774,4268680,4270545,4272017,4273483,4274912,4276311,4277584,4278907,4280133,4281318,4282661,4284003,4285288,4286436,4287341,4288245,4288927,4289730,4291586,4293129,4294591,4295965,4297041,4298346,4299845,4301256,4302457,4303359,4304446,4305932,4307723,4309305,4310874,4312178,4313361,4314671,4316157,4317483,4318657,4319764,4321036,4322285,4323642,4324524,4325984,4327590,4329429,4331217,4333035,4334711,4336157,4337676,4339560,4341467,4343191,4344986,4346961,4348693,4349790,4351194,4352477,4353822,4355250,4356895,4358701,4359892,4361325,4362634,4363973,4365353,4367081,4368292,4369118,4370015,4371489,4373064,4373990,4374884,4375946,4377799,4379033,4380522,4382256,4383810,4385397,4387151,4388875,4390560,4391807,4393373,4395074,4396598,4398289,4400185,4402102,4403427,4404773,4406440,4408065,4409627,4411448,4413364,4415266,4416522,4417936,4419643,4421232,4422848,4424710,4426623,4428471,4429689,4431212,4432957,4434603,4436130,4437952,4439851,4441678,4442999,4444474,4446171,4447778,4449301,4451104,4452937,4454789,4456048,4457548,4459267,4460782,4462364,4464115,4465916,4467535,4468751,4470326,4472016,4473520,4475200,4476977,4478824,4480080,4481483,4483197,4484735,4486301,4488061,4489760,4491598,4492812,4494380,4496112,4497645,4499309,4501160,4502933,4504517,4506198,4507754,4509335,4510850,4512443,4514006,4515686,4517142,4518729,4520338,4521875,4523401,4524959,4526560,4528104,4529555,4531003,4532453,4533986,4535425,4536828,4537968,4539039,4540296,4541726,4542951,4544132,4545468,4547121,4548603,4549909,4551188,4552638,4554075,4555410,4556658,4558032,4559158,4560627,4562032,4562079,4562124,4562168,4562214,4562263,4562435,4562917,4563674,4564427,4565282,4566246,4567206,4568217,4569229,4570187,4571389,4572532,4573859,4575174,4576319,4577646,4578923,4580103,4581272,4582317,4583408,4584611,4585619,4586815,4587938,4588938,4589853,4590781,4591485,4592155,4592922,4593486,4593677,4593725,4593774,4593821,4593866,4593911,4595687,4596307,4597027,4597875,4599020,4600365,4601529,4602483,4603547,4604515,4605521,4606221,4607029,4607802,4608838,4609778,4610976,4612132,4613267,4614500,4615778,4616970,4618221,4619574,4620928,4622316,4623657,4624981,4626301,4627432,4628361,4629081,4629593,4630128,4630735,4631520,4632449,4633238,4634079,4635006,4636039,4636982,4637876,4638922,4640528,4641958,4643180,4644502,4645820,4647318,4648752,4650251,4651901,4653657,4655461,4657288,4659124,4660870,4662621,4664345,4665946,4667697,4669451,4671088,4672723,4674353,4676032,4677532,4679056,4680735,4682429,4683975,4685569,4687153,4688737,4690273,4691651,4692797,4693865,4695358,4696931,4698494,4700085,4701661,4703063,4704419,4705853,4707380,4709179,4709873,4710699,4711776,4712861,4714056,4715363,4716768,4718081,4719378,4720915,4722350,4723545,4724265,4725225,4726431,4727771,4729163,4730401,4731614,4732807,4733987,4735156,4736361,4737561,4738835,4740043,4741382,4742784,4743992,4745265,4746633,4747972,4749340,4750621,4751857,4753075,4754278,4755240,4756228,4757446,4758562,4759880,4761082,4762729,4763353,4764874,4766392,4767438,4768995,4769870,4771498,4772856,4774870,4775983,4776941,4777714,4779435,4781042,4781864,4782711,4783527,4784578,4785672,4786690,4787665,4788736,4789957,4791331,4792927,4794565,4796220,4797830,4799303,4800640,4802080,4803614,4805280,4806889,4808573,4810223,4811838,4813433,4814987,4816472,4817924,4819607,4821448,4823310,4825148,4826962,4828706,4830428,4831863,4833252,4834621,4835962,4837265,4838546,4839505,4840111,4841197,4842294,4843399,4844603,4845445,4846621,4847446,4848561,4849575,4850571,4851582,4852533,4853518,4854539,4855560,4856558,4857509,4858524,4859529,4860547,4861498,4862518,4863523,4864508,4865445,4866425,4867441,4868450,4869473,4870421,4871439,4872441,4873462,4874423,4875435,4876443,4877454,4878406,4879425,4880447,4881471,4882417,4883443,4884455,4885910,4886989,4887835,4888700,4889854,4890705,4891917,4893242,4894531,4895215,4895804,4896424,4897104,4897767,4898432,4899073,4900100,4901157,4901928,4902939,4903757,4904588,4905405,4906223,4907069,4908034,4908971,4909871,4910846,4911722,4912535,4913404,4914309,4915196,4916146,4917145,4918045,4919069,4919694,4920374,4920956,4921726,4922446,4923128,4924084,4924955,4925724,4926666,4927436,4928268,4929120,4930032,4930760,4931681,4933203,4935014,4936391,4938184,4940232,4942280,4944336,4946384,4948432,4950480,4952528,4954576,4956624,4958672,4960720,4962768,4964816,4966864,4968912,4970960,4973008,4975056,4977104,4979152,4981200,4983201,4985069,4986840,4988535,4990294,4992006,4993743,4995515,4997402,4999360,5001158,5001207,5001252,5001297,5001342,5001387,5001436,5001481,5001526,5001571,5001619,5001668,5001713,5002139,5002895,5004211,5005632,5007087,5008646,5010174,5011636,5013131,5014697,5016361,5018043,5019759,5021504,5023248,5024912,5026633,5028272,5029862,5031508,5033143,5034757,5036331,5037637,5038970,5040194,5041383,5042467,5043095,5043512,5043783,5043942,5044072,5044121,5044166,5044210,5044255,5044303,5044352,5044397,5044441,5044486,5044534,5044583,5044628,5046683,5048731,5050779,5052827,5054875,5056923,5058971,5061019,5063067,5065115,5067163,5069211,5071259,5073307,5075355,5077403,5079451,5081499,5083547,5085595,5087643,5089691,5091739,5093787,5095835,5097883,5099931,5101979,5103860,5105205,5106344,5107522,5108796,5109964,5111115,5112324,5113437,5114664,5115930,5117221,5118534,5119825,5121244,5122524,5124097,5125762,5127287,5128768,5130146,5131514,5133048,5134625,5136023,5137434,5139128,5140731,5142227,5143730,5145160,5146802,5148137,5149508,5150925,5152435,5153892,5155287,5156447,5157719,5159040,5160314,5161585,5162624,5163684,5164563,5165661,5166720,5167765,5168646,5169398,5170088,5170919,5171686,5172266,5172922,5173561,5174449,5176467,5177877,5178976,5180032,5181182,5182252,5183483,5184869,5186065,5187291,5188529,5189732,5191004,5192304,5193627,5195192,5196847,5198585,5200357,5202125,5203911,5205549,5207256,5208584,5210191,5211566,5213127,5214740,5216300,5217640,5219254,5220892,5222517,5224162,5225678,5227336,5228868,5230207,5231537,5232900,5234091,5235192,5236262,5237269,5238247,5239263,5240156,5241174,5242194,5243231,5244263,5245153,5245943,5246628,5247031,5247536,5247946,5248290,5250293,5251155,5251818,5252487,5253123,5253829,5254514,5255180,5255863,5256525,5257186,5257878,5258548,5259336,5260702,5262336,5263842,5265425,5267012,5268693,5270274,5271822,5273323,5274679,5275640,5276450,5278007,5279393,5280882,5282427,5283940,5285417,5286952,5288297,5289567,5290682,5291645,5292913,5294382,5295885,5297322,5298836,5300274,5301601,5302777,5303618,5304295,5304967,5305616,5306269,5306959,5307662,5308322,5308984,5309636,5310322,5310975,5311656,5313327,5314541,5315174,5315868,5316531,5317236,5317905,5318576,5319264,5319954,5320615,5321232,5321897,5322582,5323536,5325133,5326727,5328344,5330043,5331764,5333389,5334968,5336438,5337891,5339293,5340574,5341915,5343226,5344543,5345811,5347058,5348413,5349710,5350980,5352281,5353932,5355620,5357220,5358859,5360526,5362104,5363576,5364869,5365974,5366882,5367650,5368340,5368987,5369663,5370369,5370994,5371670,5372344,5373017,5373744,5374413,5375034,5375712,5377037,5378585,5380143,5381962,5383565,5385202,5386992,5388210,5390240,5392023,5393615,5393966,5394448,5395071,5395717,5396410,5397204,5398082,5399021,5400119,5401175,5402209,5403490,5404922,5406463,5408029,5409609,5411208,5412734,5414210,5415660,5417115,5418578,5419985,5421458,5422982,5424398,5425876,5427284,5428628,5429903,5431310,5432717,5434249,5435901,5437477,5438961,5440294,5441459,5442617,5443859,5445085,5446316,5447648,5448814,5449973,5451041,5452003,5452990,5454031,5455094,5456061,5457000,5457914,5458641,5459271,5459766,5460293,5462331,5462587,5463013,5463528,5464153,5464849,5465621,5466489,5467397,5468377,5469366,5470453,5471627,5472942,5474364,5475980,5477656,5479349,5481005,5482632,5484231,5485655,5487081,5488359,5489647,5490975,5492397,5493865,5495288,5496723,5498183,5499622,5501054,5502471,5503947,5505392,5506846,5508519,5510202,5511780,5513203,5514512,5515770,5517001,5518237,5519435,5520612,5521842,5522906,5523948,5525030,5526096,5527058,5527895,5528646,5529359,5529937,5530347,5532198,5532860,5533263,5533839,5534494,5535155,5535894,5536767,5537627,5538618,5539700,5540696,5541872,5543387,5544912,5546444,5547968,5549521,5550998,5552367,5553609,5554943,5556287,5557638,5559062,5560442,5561859,5563296,5564549,5565937,5567282,5568677,5570006,5571316,5572650,5573964,5575276,5576790,5578330,5579900,5581457,5582903,5584331,5585721,5587036,5588218,5589442,5590629,5591781,5592835,5593906,5594893,5595873,5596769,5597636,5598276,5598857,5599266,5600571,5602164,5603821,5605410,5607057,5608855,5610284,5612015,5613303,5615008,5616431,5617900,5619745,5621152,5621980,5623139,5624728,5626385,5628105,5629507,5631216,5632375,5634258,5636306,5638269,5640317,5642302,5644281,5646262,5648310,5650366,5652414,5654444,5656310,5657870,5658940,5660690,5662414,5664153,5665962,5667676,5669732,5671780,5673828,5675876,5677924,5679972,5682020,5684068,5686116,5688164,5690212,5692260,5694308,5696356,5698404,5700452,5702500,5704548,5706596,5708644,5710692,5712740,5714788,5716836,5718884,5720703,5721820,5722811,5723601,5724516,5725449,5726374,5727394,5728142,5729045,5730025,5730958,5731912,5732773,5733710,5734518,5735420,5736359,5737184,5737982,5738870,5739694,5740983,5741857,5742867,5743813,5744976,5746080,5747052,5748350,5749420,5750125,5750878,5752238,5753505,5754779,5756109,5756831,5757457,5758076,5758664,5759206,5759779,5760769,5761691,5762593,5763285,5764056,5764584,5765308,5765881,5766558,5767294,5768357,5769236,5769834,5770526,5771249,5771848,5772965,5773676,5774673,5775580,5776238,5776794,5777337,5777890,5778594,5779312,5779981,5780846,5781493,5782205,5783101,5784087,5785250,5786066,5786843,5787781,5788731,5789369,5790207,5791034,5791947,5792734,5793436,5794411,5795350,5796271,5796730,5797231,5798014,5798716,5799582,5800056,5800652,5801645,5802260,5802936,5803503,5804111,5804777,5805587,5806473,5807147,5807838,5808551,5809098,5810962,5812644,5814310,5815735,5817181,5818592,5820026,5821574,5823399,5825233,5826976,5828665,5830110,5831548,5832944,5834397,5835940,5837869,5839686,5841294,5842963,5844674,5846254,5847876,5849578,5851324,5853131,5854884,5856618,5858353,5859922,5861169,5862359,5863530,5865159,5866776,5868387,5870166,5871928,5873664,5875428,5877112,5878902,5880613,5882346,5884011,5885736,5887448,5889204,5890988,5892650,5894401,5896186,5897908,5899615,5901404,5903143,5904761,5906358,5907963,5909333,5910625,5911909,5913315,5914863,5916364,5918015,5919628,5921168,5922826,5924407,5925944,5927607,5929227,5930829,5932679,5934496,5935918,5937348,5938838,5940393,5941849,5943365,5944907,5946320,5947798,5949328,5950951,5952396,5953872,5955539,5957209,5958840,5960582,5962378,5964033,5965752,5967401,5968984,5970543,5972037,5973617,5975252,5976804,5978415,5980032,5981670,5983255,5984788,5986336,5987964,5989594,5991202,5992831,5994425,5995969,5997524,5999137,6000768,6002375,6003831,6004971,6006385,6007880,6009362,6010725,6012166,6013663,6015235,6016834,6018417,6019841,6021255,6022877,6024880,6026115,6027320,6028559,6029812,6031053,6032317,6033545,6034808,6036066,6037358,6038639,6040115,6041468,6042762,6044051,6045337,6046655,6047970,6049278,6050530,6051763,6053041,6054322,6055564,6056813,6058050,6059265,6060531,6061788,6063020,6064229,6065400,6066603,6067841,6069062,6070284,6071518,6072754,6074025,6075283,6076535,6077775,6079065,6080367,6081776,6083192,6084469,6085759,6087078,6088411,6089708,6091013,6092238,6093516,6094809,6096055,6097280,6099336,6101132,6102886,6104687,6106454,6108225,6110039,6111806,6113580,6115358,6117142,6118877,6120626,6122336,6124063,6125712,6127335,6128987,6130607,6132261,6133975,6135631,6137208,6138829,6140562,6142274,6143975,6145728,6147460,6149231,6151001,6152762,6154508,6156261,6158016,6159644,6161286,6162993,6164656,6166345,6167976,6169646,6171326,6173020,6174731,6176429,6178193,6179915,6181673,6183433,6185201,6186933,6188704,6190449,6192222,6193971,6195723,6197511,6198484,6199868,6201619,6203667,6205715,6207763,6209811,6211859,6213907,6215955,6218012,6220060,6222108,6224156,6226204,6228252,6230300,6232348,6234396,6236444,6238492,6240540,6242588,6244636,6246684,6248732,6250780,6252828,6254876,6256924,6258972,6261020,6263068,6265116,6267164,6269212,6271260,6273308,6275356,6277404,6279452,6281500,6283548,6285596,6287644,6289692,6291740,6293788,6295836,6297884,6299932,6301980,6304028,6306076,6308124,6310172,6312220,6314268,6316316,6318364,6320412,6322460,6324508,6326556,6328604,6330652,6332700,6334748,6336796,6338844,6340892,6342940,6344988,6347036,6349084,6351132,6353180,6355228,6357276,6359324,6361372,6363420,6365468,6367516,6369564,6371612,6373660,6375708,6377756,6379804,6381852,6383900,6385948,6387996,6390044,6392092,6394140,6396188,6398236,6400284,6402332,6404380,6406428,6408476,6410524,6412572,6414620,6416668,6418716,6420764,6422812,6424860,6426908,6428956,6431004,6433052,6435100,6437148,6439196,6441244,6443292,6445340,6447388,6449436,6451484,6453532,6455580,6457628,6459676,6461724,6463772,6465820,6467868,6469916,6471964,6474012,6476060,6478108,6480156,6482204,6484252,6486300,6488348,6490396,6492444,6494492,6496540,6498588,6500636,6502684,6504732,6506780,6508828,6510876,6512924,6514972,6517020,6519068,6521116,6523164,6525212,6527260,6529308,6531356,6533404,6535452,6537500,6539548,6541596,6543644,6545692,6547740,6549788,6551836,6553884,6555932,6557980,6560028,6562076,6564124,6566172,6568220,6570268,6572316,6574364,6576412,6578460,6580508,6582556,6584604,6586652,6588700,6590748,6592796,6594844,6596892,6598940,6600988,6603036,6605084,6607132,6609180,6611228,6613276,6615324,6617372,6619420,6621468,6623516,6625564,6627612,6629660,6631708,6633756,6635804,6637852,6639900,6641948,6643996,6646044,6648092,6650140,6652188,6654236,6656284,6658332,6660380,6662428,6664476,6666524,6668572,6670620,6672668,6674716,6676764,6678812,6680860,6682908,6684956,6687004,6689052,6691100,6693148,6695196,6697244,6699292,6701340,6703388,6705436,6707484,6709532,6711580,6713628,6715676,6717724,6719772,6721820,6723868,6725916,6727964,6730012,6732060,6734108,6736156,6738204,6740252,6742300,6744348,6746396,6748444,6750492,6752540,6754588,6756636,6758684,6760732,6762780,6764837,6766885,6768933,6770981,6773029,6775077,6777125,6779173,6781221,6783269,6785317,6787365,6789413,6791461,6793509,6795557,6797605,6799653,6801701,6803749,6805797,6807845,6809893,6811941,6813989,6816037,6818085,6820133,6822181,6824229,6826277,6828325,6830373,6832421,6834469,6836517,6838565,6840613,6842661,6844709,6846757,6848805,6850853,6852901,6854949,6856997,6859045,6861093,6863141,6865189,6867237,6869285,6871333,6873381,6875429,6877477,6879525,6881573,6883621,6885669,6887717,6889765,6891813,6893861,6895909,6897957,6900005,6902053,6904101,6906149,6908197,6910245,6912293,6914341,6916389,6918437,6920485,6922533,6924581,6926629,6928677,6930725,6932773,6934821,6936869,6938917,6940965,6943013,6945061,6947109,6949157,6951205,6953253,6955301,6957349,6959397,6961445,6963493,6965541,6967589,6969637,6971685,6973733,6975781,6977829,6979877,6981925,6983973,6986021,6988069,6990117,6992165,6994213,6996261,6998309,7000357,7002405,7004453,7006501,7008549,7010597,7012645,7014693,7016741,7018789,7020837,7022885,7024933,7026981,7029029,7031077,7033125,7035173,7037221,7039269,7041317,7043365,7045413,7047461,7049509,7051557,7053605,7055653,7057701,7059749,7061797,7063845,7065893,7067941,7069989,7072037,7074085,7076133,7078181,7080229,7082277,7084325,7086373,7088421,7090469,7092517,7094565,7096613,7098661,7100709,7102757,7104805,7106853,7108901,7110949,7112997,7115045,7117093,7119141,7121189,7123237,7125285,7127333,7129381,7131429,7133477,7135525,7136983,7137647,7138215,7138786,7139380,7139998,7140675,7141309,7141904,7142479,7143081,7143745,7145127,7145707,7146249,7146845,7147447,7147928,7148342,7148745,7149300,7151039,7152789,7154122,7155159,7156127,7157279,7158611,7160045,7161612,7162609,7163760,7165109,7166870,7168097,7169120,7170560,7170956,7171384,7171832,7172304,7172823,7173295,7173805,7174238,7174583,7174844,7175123,7175405,7175805,7177484,7179406,7181157,7182862,7184559,7186341,7187365,7188544,7189679,7190594,7191494,7192615,7193718,7194604,7195778,7196371,7197475,7198388,7199358,7200349,7201716,7202332,7203628,7204712,7205769,7206762,7207808,7208728,7209768,7211012,7211978,7212865,7213712,7215032,7215642,7216820,7217840,7219144,7220305,7221332,7222517,7223102,7224231,7225308,7226422,7227174,7228615,7230574,7232021,7233514,7235064,7236629,7238234,7239857,7241486,7243124,7244802,7246427,7248081,7249756,7251345,7253000,7254641,7256237,7257852,7259487,7261226,7262946,7264636,7266391,7268136,7269908,7271603,7273272,7275044,7276851,7278664,7280474,7282337,7284227,7286127,7288016,7289918,7291797,7293558,7295336,7297156,7298970,7300788,7302573,7304364,7306164,7307916,7309674,7311217,7312790,7314425,7316046,7317611,7319082,7320577,7322191,7323765,7325475,7327153,7329201,7330609,7332010,7333512,7335060,7336551,7338048,7339595,7341072,7342536,7344064,7345697,7347283,7348672,7350290,7351941,7353572,7355264,7357034,7358775,7360428,7362134,7363715,7365311,7366833,7368397,7369990,7371591,7373166,7374786,7376420,7378007,7379551,7381106,7382733,7384337,7385955,7387537,7389167,7390731,7392311,7393923,7395578,7397203,7398789,7400057,7401277,7402757,7404251,7405672,7407008,7408492,7410027,7411637,7413253,7414685,7416073,7417555,7419533,7420508,7421085,7421769,7422268,7422884,7423616,7424448,7425153,7426150,7427114,7428240,7429159,7430342,7431589,7432884,7434204,7435542,7436885,7438253,7439644,7441047,7442517,7443883,7445299,7446759,7448321,7449770,7451180,7452635,7453955,7454982,7455963,7456856,7458086,7459339,7460599,7461872,7462901,7464021,7464987,7465921,7466902,7467808,7468726,7469742,7470619,7471388,7472255,7473157,7474006,7474493,7475137,7475951,7476599,7477285,7477939,7478541,7479964,7481380,7482116,7482869,7483768,7484732,7485785,7486912,7487961,7489077,7490209,7491314,7492262,7493078,7493826,7494838,7496178,7497490,7498909,7500347,7501866,7503333,7504855,7506197,7507683,7509230,7510830,7512374,7513883,7515490,7517144,7518849,7520515,7522059,7523562,7525107,7526673,7528151,7529637,7531104,7532380,7533693,7534891,7535975,7536901,7537917,7538996,7540093,7541159,7542317,7543539,7544777,7545869,7546863,7547710,7548447,7549274,7550048,7550847,7551845,7553449,7555450,7557498,7559546,7561594,7563642,7565690,7567738,7569786,7571834,7573882,7575930,7577978,7580026,7582074,7584122,7586170,7588218,7590266,7592314,7594362,7596410,7598458,7600506,7602554,7604602,7606650,7608698,7610746,7612794,7614842,7616890,7618938,7620986,7623041,7625089,7627137,7629185,7631233,7633281,7635329,7637377,7639425,7641473,7643521,7645569,7647617,7649665,7651713,7653761,7655809,7657857,7659905,7661953,7664001,7666049,7668097,7670145,7672193,7674241,7676289,7678337,7680385,7682433,7684481,7686529,7688577,7690625,7692673,7694721,7696769,7698817,7700865,7702913,7704961,7707009,7709057,7711105,7713153,7715201,7717249,7719297,7721345,7723393,7725441,7727498,7729546,7731594,7733642,7735690,7737738,7739786,7741834,7743882,7745930,7747978,7750026,7752074,7754122,7756170,7758218,7760266,7762314,7764362,7766410,7768458,7770506,7772554,7774602,7776650,7778698,7780717,7781901,7783196,7784399,7785261,7785940,7786326,7787595,7788219,7789275,7790326,7791396,7792181,7792672,7794134,7795691,7797088,7798469,7799882,7801215,7802549,7803691,7804830,7805997,7807130,7808300,7809837,7811161,7812516,7813758,7814980,7816136,7817360,7818514,7819830,7821334,7822729,7824091,7825407,7826651,7827900,7829274,7830765,7832352,7834016,7835585,7837135,7838745,7840307,7841859,7843415,7844904,7846444,7847945,7849380,7850756,7852124,7853518,7855422,7857478,7859526,7861574,7863622,7865670,7867725,7869606,7871654,7873702,7875750,7877798,7879846,7881894,7883942,7885990,7888038,7890086,7892134,7894182,7896230,7898278,7900326,7902374,7904422,7906470,7908518,7910566,7912614,7914662,7916719,7918767,7920815,7922870,7924913,7926952,7928969,7930902,7932915,7934963,7937011,7939059,7941107,7943155,7945203,7947251,7949299,7951347,7953395,7955443,7957491,7959539,7961587,7963635,7965683,7967731,7969779,7971827,7973875,7975923,7977971,7980019,7982067,7984115,7986163,7988211,7990259,7992307,7994355,7996403,7998451,8000499,8002547,8004595,8006643,8008691,8010739,8012787,8014835,8016883,8018931,8020979,8023027,8025075,8027123,8029171,8031219,8033267,8035315,8037363,8039411,8041459,8043507,8045555,8047603,8049651,8051699,8053747,8055795,8057843,8059891,8061939,8063987,8066035,8068083,8070131,8072179,8074227,8076275,8078323,8080371,8082419,8084467,8086515,8088563,8090611,8092659,8094707,8096755,8098803,8100685,8102004,8103394,8104823,8106202,8107591,8108977,8110471,8111913,8113536,8115217,8116825,8118254,8119694,8121058,8122446,8124050,8125754,8127504,8129220,8130833,8132368,8133828,8135297,8136934,8138580,8140234,8141869,8143507,8145074,8146613,8148092,8149806,8151857,8153905,8155927,8157695,8159134,8160724,8162298,8163955,8165480,8166876,8167311,8167525,8167745,8167960,8168172,8168699,8168915,8169131,8169374,8169588,8169810,8170177,8171859,8173431,8174649,8175931,8177181,8178444,8179483,8180644,8181856,8183051,8184308,8185540,8186694,8187822,8189093,8191149,8192726,8193354,8194915,8196963,8197924,8198655,8200638,8202301,8203011,8204169,8205140,8206057,8206983,8207913,8208851,8209790,8210736,8211335,8212291,8213082,8213814,8214768,8215741,8216844,8217754,8218728,8219596,8220502,8221419,8222537,8223493,8224515,8225386,8226280,8227210,8228382,8229530,8230599,8231639,8232265,8232867,8233268,8234135,8235388,8236311,8237356,8237847,8238182,8238517,8238853,8239282,8239650,8240350,8241595,8242729,8243629,8244847,8246191,8247729,8249268,8250570,8251941,8252982,8254219,8255735,8257136,8258320,8259494,8260671,8262129,8263567,8265071,8266555,8267679,8268808,8269954,8271195,8272650,8274044,8275603,8277117,8278230,8279454,8280563,8281857,8283347,8284769,8286338,8287833,8288913,8290028,8291123,8292502,8293906,8295389,8296887,8298261,8299298,8300510,8301625,8303017,8304464,8305964,8307455,8308504,8309779,8310970,8312313,8313652,8315052,8315979,8316586,8317142,8317772,8318476,8319136,8319819,8320457,8321089,8322046,8322988,8323831,8324598,8325315,8326233,8327196,8327997,8328576,8329509,8330358,8331223,8331744,8332369,8333122,8333692,8334459,8335254,8335975,8336785,8337456,8338291,8338832,8339514,8340141,8340558,8341286,8341906,8342605,8343395,8343909,8344832,8345386,8345860,8346486,8347253,8347912,8348417,8348911,8349576,8350030,8350482,8350932,8351552,8352169,8352947,8353373,8353814,8354714,8355625,8356690,8357831,8358345,8358813,8359344,8360050,8360784,8361742,8362408,8363040,8363660,8364293,8365235,8366293,8367284,8368338,8368850,8369359,8370241,8371039,8371653,8372250,8372940,8373771,8374507,8374888,8375416,8376180,8376886,8377823,8378522,8379629,8380257,8381113,8381900,8382722,8383618,8384515,8385348,8386214,8387103,8387968,8388830,8389680,8390626,8391351,8392146,8393018,8393847,8394744,8395570,8396600,8397254,8398245,8399220,8400179,8401145,8402108,8403063,8404016,8404967,8405945,8406895,8407848,8408805,8409761,8410690,8411587,8412455,8413607,8414399,8415228,8415772,8416602,8417557,8418390,8419191,8420012,8420839,8421511,8422311,8423155,8424024,8424710,8425508,8426227,8426984,8427799,8428482,8429097,8429890,8431149,8431857,8432640,8434291,8436036,8437870,8439645,8441654,8443537,8445585,8447633,8449681,8451406,8452777,8454499,8456275,8458323,8460367,8462240,8464050,8466098,8467976,8469742,8471794,8473842,8475890,8477842,8479666,8481632,8483519,8485288,8487341,8489344,8491147,8493046,8494326,8495460,8496034,8496701,8497221,8499093,8501141,8503098,8504628,8506026,8507232,8508378,8509750,8511760,8513557,8514790,8516065,8517103,8518276,8519927,8521422,8522802,8523794,8524281,8524424,8524920,8526968,8529016,8531064,8533112,8535160,8537208,8539256,8541313,8543370,8545418,8547466,8549523,8551580,8553572,8555487,8556924,8558972,8561020,8563068,8565123,8567171,8569219,8571267,8573315,8573836,8574041,8576067,8578102,8580158,8582206,8584173,8585558,8587475,8589476,8591508,8593423,8595427,8597475,8599523,8601571,8603619,8605643,8607521,8609569,8611553,8613508,8615564,8617587,8619635,8621683,8623723,8625771,8627822,8629862,8631630,8633107,8634863,8636749,8638797,8640845,8642893,8644941,8646989,8649037,8651085,8653133,8654235,8655218,8656410,8657624,8658934,8660149,8661825,8663308,8664335,8665873,8667039,8668367,8669420,8670525,8671599,8672566,8673767,8675098,8676770,8678622,8680527,8682429,8684322,8686235,8687708,8688860,8689833,8690951,8692142,8693815,8694982,8696004,8697027,8698212,8699484,8700487,8701566,8702876,8704066,8705407,8706456,8708349,8710383,8712431,8714407,8716463,8718435,8720483,8722446,8724494,8726521,8728493,8730550,8732509,8734557,8736605,8738578,8740634,8742663,8744632,8746663,8748711,8750729,8752763,8754733,8756781,8758829,8760802,8762850,8764907,8766884,8768932,8770980,8772959,8775016,8777064,8779035,8781083,8783131,8785112,8787148,8789195,8791208,8793239,8795211,8797259,8799263,8801270,8803315,8805363,8807420,8809383,8811439,8813496,8815553,8817601,8819649,8821697,8823745,8825793,8827800,8829819,8831867,8833915,8835972,8838020,8840068,8842116,8844164,8846212,8848260,8850158,8852206,8854254,8856302,8858350,8860398,8862446,8864494,8866542,8868438,8870486,8872534,8874582,8876630,8878678,8880726,8882774,8884665,8886713,8888761,8890809,8892857,8894905,8896953,8898851,8900899,8902947,8904995,8907043,8909091,8911139,8913158,8915111,8917159,8919207,8921264,8923312,8925360,8927408,8929456,8931352,8933400,8935448,8937496,8939544,8941592,8943640,8945688,8947736,8949784,8951432,8953254,8954912,8956567,8958404,8959608,8960596,8962514,8964529,8966573,8968625,8970607,8972591,8974641,8976474,8978437,8980430,8982448,8984412,8986433,8988464,8989805,8991196,8992641,8994175,8995502,8997435,8998629,8999791,9000930,9001786,9003323,9004831,9006326,9007813,9009240,9009885,9010590,9011280,9012012,9012736,9013416,9014077,9014661,9015157,9015734,9016266,9017602,9019447,9021127,9022829,9024528,9026227,9028140,9029865,9031608,9033373,9034559,9035531,9037364,9039025,9040563,9042042,9043532,9044350,9044863,9045129,9045556,9045982,9046454,9046725,9047335,9049078,9050771,9052457,9054154,9055977,9057760,9059559,9061069,9062542,9064160,9065633,9067111,9068628,9069177,9069672,9070167,9070674,9071082,9071464,9071975,9072486,9072973,9074064,9075897,9077574,9079244,9080913,9082661,9084503,9086297,9088027,9089251,9090892,9092557,9094035,9095506,9096994,9098482,9099324,9099954,9100600,9101175,9101723,9102247,9102837,9103314,9103937,9104436,9104987,9105414,9105796,9106788,9108743,9110442,9112113,9113802,9115476,9117172,9119029,9120883,9122598,9124280,9126050,9127180,9128588,9130260,9131974,9133462,9134942,9136423,9137558,9138138,9138723,9139332,9139899,9140462,9141082,9141656,9142192,9142762,9143311,9143867,9145290,9147171,9148845,9150516,9152178,9153866,9155606,9157505,9159217,9160917,9162613,9163754,9164804,9166563,9168219,9169733,9171228,9172714,9174034,9174610,9175196,9175748,9176227,9176661,9177241,9177802,9178396,9178877,9179240,9179727,9180984,9182779,9184466,9186147,9187822,9189475,9191346,9193061,9194802,9196491,9197927,9198760,9200638,9202307,9203820,9205300,9206465,9206831,9207350,9207770,9208170,9208685,9209203,9209671,9210377,9212203,9213850,9215546,9217208,9219069,9220742,9222431,9223917,9225257,9226828,9228336,9229815,9231269,9232759,9234247,9235616,9236285,9236911,9237412,9237997,9238705,9239195,9239843,9240503,9241068,9241651,9242382,9243090,9243693,9244433,9245117,9245709,9246360,9246973,9247589,9248079,9248997,9250986,9252713,9254375,9256093,9257772,9259431,9261128,9262840,9264552,9266245,9268142,9269957,9271711,9273437,9275112,9276931,9278753,9280535,9281432,9282131,9283059,9284880,9286723,9288380,9290198,9291765,9293242,9294711,9296177,9297639,9298474,9298916,9299356,9299889,9300491,9301122,9301729,9302333,9302811,9303272,9303874,9304388,9304930,9305516,9306417,9308420,9310113,9311807,9313488,9315176,9316863,9318538,9320458,9322177,9323948,9325740,9327516,9328914,9329579,9330862,9332830,9334526,9336230,9337767,9339250,9340745,9342211,9343671,9344294,9344936,9345601,9346224,9346848,9347388,9347855,9348430,9349095,9349700,9350125,9350652,9351130,9351627,9352116,9353985,9355783,9357469,9359155,9360851,9362557,9364263,9366013,9367957,9369650,9371353,9373142,9374957,9376472,9377241,9378765,9380629,9382399,9383963,9385451,9386948,9388427,9389830,9390399,9390945,9391579,9392210,9392847,9393409,9393908,9394155,9394395,9394574,9394800,9395036,9395256,9396838,9398803,9400531,9402213,9403919,9405637,9407365,9409072,9411102,9412881,9414619,9416413,9418202,9419955,9420960,9422644,9424268,9425842,9427300,9428341,9429034,9429645,9430338,9430987,9432653,9434341,9436107,9437841,9439087,9440675,9442133,9443602,9444784,9445328,9445901,9446465,9446971,9447420,9447915,9448345,9448856,9450004,9451801,9453461,9455136,9456795,9458660,9460347,9462033,9462918,9464566,9466250,9467713,9469183,9470648,9471961,9472539,9473143,9473761,9474295,9474864,9475443,9476012,9476350,9476945,9477533,9478100,9479896,9481585,9483257,9484936,9486620,9488302,9490180,9491872,9493627,9495347,9496069,9497627,9499454,9501018,9502485,9503943,9505151,9505718,9506299,9506639,9507126,9507671,9508114,9508414,9508710,9509128,9509666,9511497,9513191,9514886,9516555,9518184,9519876,9521704,9523432,9525097,9526575,9527396,9529249,9530934,9532400,9533845,9535273,9536173,9536430,9536794,9537111,9537497,9537942,9538419,9538735,9539044,9539489,9539899,9540302,9542053,9543702,9545335,9546980,9548653,9550297,9552136,9553871,9555500,9557094,9558263,9559948,9561490,9562976,9564476,9565040,9565507,9566007,9566572,9567161,9567790,9568394,9569034,9569510,9570898,9572636,9574309,9575962,9577648,9579520,9581192,9582886,9584615,9585398,9587235,9588860,9590323,9591802,9593289,9594680,9595238,9595735,9596307,9596846,9597461,9598041,9598656,9599068,9599522,9600069,9600507,9600989,9601463,9603398,9605120,9606792,9608470,9610141,9611820,9613495,9615448,9617112,9618754,9620486,9622135,9622908,9624456,9626223,9627947,9629369,9630851,9632342,9633808,9635293,9636790,9638283,9639773,9641253,9642136,9642794,9643547,9644217,9644763,9645409,9645963,9646695,9647228,9647851,9648325,9648977,9649671,9650291,9650917,9651534,9652138,9652777,9653125,9653817,9654477,9655169,9655683,9656101,9656652,9657214,9657474,9657749,9658495,9660518,9662553,9664293,9666019,9667733,9669422,9671127,9672793,9674487,9676179,9677852,9679518,9681223,9682915,9684937,9686854,9688532,9690259,9691918,9693578,9695290,9696991,9698679,9700357,9701869,9702620,9703454,9704940,9706829,9708653,9709204,9709934,9710876,9711219,9712896,9714555,9716227,9717713,9719223,9720721,9722232,9723737,9725245,9726730,9728208,9729700,9731175,9732172,9732854,9733669,9734349,9734978,9735730,9736381,9737093,9737862,9738523,9739112,9739817,9740506,9741093,9741763,9742425,9743208,9743861,9744520,9745118,9745581,9746129,9746655,9746993,9747270,9747635,9748148,9748703,9749117,9749460,9749707,9749849,9751090,9753135,9755085,9756881,9758570,9760264,9761974,9763644,9765331,9767028,9768742,9770389,9772070,9773735,9775403,9777098,9778798,9780690,9782738,9784531,9786274,9787995,9789709,9791437,9793084,9794768,9796417,9798055,9799774,9801512,9802854,9803765,9804800,9806621,9808521,9810177,9811952,9813739,9815327,9816817,9818295,9819775,9821265,9821752,9822300,9822840,9823385,9823858,9824391,9824827,9825304,9825722,9826270,9826343,9826950,9827538,9828659,9830584,9832247,9833934,9835602,9837291,9838986,9840863,9842568,9844302,9845983,9847701,9848930,9850122,9851895,9853632,9855071,9856523,9857984,9859462,9860970,9862472,9863951,9865418,9866811,9867396,9868017,9868664,9869275,9869810,9870441,9871116,9871800,9872504,9873111,9873601,9874306,9874928,9875598,9876168,9876861,9877442,9877912,9878492,9879102,9879679,9880105,9880599,9881184,9882554,9884578,9886404,9888101,9889767,9891447,9893146,9894843,9896550,9898244,9899900,9901598,9903403,9905432,9907143,9908796,9910457,9912155,9913881,9915607,9917350,9918945,9919798,9920942,9922761,9924398,9925913,9927556,9929194,9930714,9932183,9933655,9935135,9936623,9938119,9938752,9939269,9939741,9940304,9941019,9941615,9942317,9942898,9943589,9944266,9944831,9945294,9945902,9946626,9947315,9947731,9948135,9949694,9951651,9953327,9954989,9956647,9958327,9960042,9961729,9963405,9965331,9967118,9968815,9970517,9972334,9974090,9975832,9976903,9978447,9980194,9982034,9983602,9985082,9986583,9988063,9989570,9991056,9992541,9994024,9995521,9997023,9998536,10000040,10001535,10002271,10002935,10003630,10004191,10004856,10005479,10005968,10006600,10007248,10007885,10008477,10009062,10009667,10010259,10010811,10011381,10011974,10012471,10012978,10013580,10014189,10014549,10015167,10015779,10016412,10016964,10017503,10017985,10018623,10019181,10019719,10020298,10020884,10021371,10021948,10022344,10022836,10023393,10023860,10024462,10025819,10027861,10029901,10031864,10033576,10035295,10037007,10038712,10040433,10042120,10043832,10045537,10047259,10048971,10050698,10052396,10054111,10055801,10057518,10059231,10060933,10062880,10064928,10066746,10068419,10070159,10071875,10073580,10075280,10077019,10078741,10080409,10082156,10083888,10085669,10087148,10088061,10088972,10089823,10090814,10092514,10094191,10095829,10097402,10098974,10100523,10101928,10103025,10103666,10105408,10107180,10108953,10110604,10112084,10113562,10115046,10116531,10117796,10118490,10119151,10119747,10120268,10120719,10121078,10121457,10121953,10122185,10122662,10123177,10123557,10124394,10126365,10128056,10129744,10131417,10133106,10134773,10136457,10138422,10140153,10141901,10143619,10145326,10146255,10147944,10149707,10151232,10152691,10154173,10155032,10155470,10155995,10156379,10156772,10157053,10157480,10157804,10158628,10160466,10162141,10163815,10165484,10167365,10169098,10170829,10172340,10173774,10175404,10176863,10178340,10179802,10181268,10182259,10182835,10183433,10184031,10184663,10185197,10185740,10186338,10186955,10187288,10187779,10188199,10188722,10189032,10190538,10192371,10194021,10195677,10197352,10199007,10200690,10202382,10204272,10205967,10207669,10209368,10210613,10211066,10212181,10213539,10214915,10216528,10218040,10219526,10220858,10221246,10221426,10221873,10222214,10222545,10222803,10223048,10223471,10225296,10226945,10228593,10230245,10232042,10233686,10235226,10236201,10237746,10239236,10240685,10242128,10242698,10243291,10243683,10244163,10244681,10245146,10246048,10247824,10249486,10251149,10252977,10254722,10255809,10257455,10258952,10260442,10261907,10263387,10264842,10266317,10267798,10268637,10269256,10269904,10270573,10271162,10271651,10272173,10272742,10273373,10273686,10274245,10274720,10275281,10275713,10276194,10276580,10276924,10277432,10277678,10278674,10280595,10282393,10284050,10285743,10287434,10289127,10290812,10292472,10294143,10295811,10297851,10299553,10301282,10303049,10304778,10306439,10308098,10309139,10309997,10311508,10313090,10314580,10316246,10317913,10319415,10320899,10322383,10323866,10324570,10325032,10325382,10325911,10326350,10326787,10327078,10327558,10328053,10328528,10328947,10329296,10329642,10330217,10332138,10333817,10335476,10337132,10338800,10340452,10342121,10344077,10345717,10347423,10349098,10350665,10351297,10352397,10353951,10355642,10357170,10358652,10359898,10360418,10360927,10361259,10361426,10362021,10362340,10363023,10364785,10366494,10368186,10370034,10371826,10373571,10374630,10376318,10378351,10380403,10382452,10384503,10386555,10388189,10389801,10391322,10392692,10393668,10394485,10395329,10396086,10396937,10397802,10399278,10401289,10403306,10405212,10407153,10408711,10409835,10411161,10412422,10413863,10415119,10416000,10417352,10418079,10418941,10420071,10421243,10422257,10423338,10424309,10425410,10426454,10427442,10428341,10429442,10430574,10431668,10432680,10433479,10434456,10435449,10436340,10437230,10438137,10438994,10439989,10440891,10441847,10442870,10443887,10444824,10445916,10446945,10447899,10448785,10449635,10450550,10451560,10452416,10453426,10454368,10455301,10456244,10457120,10458136,10459184,10460167,10461228,10462085,10463084,10464141,10465185,10466221,10467220,10468223,10469323,10470430,10471526,10472721,10473813,10474927,10476058,10477186,10478277,10479424,10480557,10481757,10482795,10483893,10484871,10485519,10486590,10487775,10488850,10489824,10490923,10492112,10493236,10494253,10495379,10496408,10497440,10498503,10499540,10500812,10501932,10503019,10504058,10505149,10506301,10507379,10508557,10509655,10510854,10511963,10513024,10514162,10515332,10516487,10517636,10518748,10519932,10521164,10522282,10523342,10524555,10525679,10527093,10529141,10530604,10531684,10532745,10533707,10534665,10535643,10536747,10537778,10538777,10539666,10540862,10542006,10542832,10543904,10544906,10545909,10546950,10547642,10548475,10549222,10550063,10551080,10552501,10553960,10555450,10556919,10558891,10560939,10562987,10564910,10566294,10568339,10570378,10572426,10574474,10576498,10578271,10580319,10581997,10583909,10585962,10588010,10590058,10592106,10594154,10596202,10598250,10600305,10602332,10604374,10606395,10608443,10610479,10612484,10614439,10616288,10617979,10619902,10621950,10623998,10626046,10628094,10630142,10632190,10634238,10636286,10638334,10640382,10642438,10644452,10646408,10648240,10650057,10651519,10653127,10655068,10656974,10658789,10660673,10662711,10664764,10666820,10668868,10670916,10672964,10675012,10677060,10679108,10681156,10683204,10685252,10687300,10689357,10691351,10692918,10693917,10695922,10697970,10700018,10702066,10704114,10706162,10708210,10710258,10712306,10714354,10716402,10718459,10720507,10722555,10724603,10726651,10728699,10730747,10732801,10734847,10736567,10738454,10740502,10742550,10744598,10746529,10748134,10749512,10750733,10751772,10752503,10753031,10754791,10756839,10758887,10760935,10762991,10765048,10767102,10769159,10771216,10773264,10775173,10776653,10777493,10779416,10781464,10783484,10785459,10787323,10789046,10790577,10791822,10792729,10793347,10793639,10793772,10795652,10797700,10799748,10801801,10803850,10805898,10807946,10809994,10812051,10814099,10816154,10818202,10820255,10822265,10824100,10825733,10827245,10828490,10830513,10832561,10834609,10836657,10838705,10840753,10842801,10844858,10846906,10848954,10851002,10853045,10855066,10857009,10858780,10860286,10861347,10862404,10864205,10866078,10868078,10870126,10872182,10874239,10876212,10877935,10879280,10880107,10882161,10884208,10886256,10888283,10890173,10892221,10894278,10896113,10896847,10896897,10897117,10897150,10897698,10899746,10901794,10903842,10905890,10907938,10909986,10912034,10914078,10916008,10918037,10920085,10922133,10924181,10926188,10928236,10930284,10932332,10934380,10936428,10938476,10940532,10942580,10944628,10946593,10948111,10950089,10952083,10953618,10955216,10957273,10959287,10960917,10962247,10963733,10965586,10967610,10969667,10971724,10973772,10975818,10977873,10979787,10981270,10981750,10982583,10984631,10986679,10988735,10990783,10992834,10994890,10996938,10998986,11001034,11003083,11005095,11006952,11008791,11010768,11012354,11014290,11016347,11018395,11020443,11022491,11024548,11026596,11028653,11030703,11032613,11034670,11036727,11038775,11040823,11042880,11044928,11046976,11048990,11050626,11052632,11054591,11056526,11057549,11059595,11061643,11063692,11065603,11067254,11069302,11071350,11073398,11075446,11077500,11079548,11081596,11083644,11085692,11087561,11088936,11090497,11092429,11094404,11096423,11098458,11100512,11102559,11104591,11106633,11108683,11110734,11112772,11114787,11116808,11118791,11120780,11122750,11124807,11126852,11128907,11130942,11132980,11135005,11137051,11139097,11141134,11143181,11145222,11147244,11149141,11150964,11152582,11154009,11155331,11156498,11157684,11158889,11159970,11160993,11162133,11163140,11164155,11165097,11165986,11166888,11167698,11168356,11168981,11169444,11169633,11169818,11169959,11170018,11170081,11171767,11173793,11175840,11177888,11179944,11181884,11183633,11185304,11186583,11187331,11189379,11191427,11193475,11195523,11197424,11199472,11201520,11203568,11205545,11207593,11209641,11211689,11213744,11215746,11217794,11219849,11221902,11223955,11225993,11228049,11230097,11232154,11234190,11236243,11238299,11240269,11242204,11244045,11245750,11247515,11249180,11251040,11253094,11255142,11257187,11259235,11261292,11263345,11265247,11267143,11269194,11271242,11273299,11275356,11277404,11279457,11281513,11283422,11285470,11287518,11289468,11291095,11292889,11294945,11297000,11298613,11300358,11302406,11304462,11306510,11308558,11310606,11312654,11314711,11316759,11318791,11320749,11322469,11323956,11325440,11326696,11327912,11329300,11331357,11333405,11335460,11337517,11339558,11341491,11343246,11344402,11344705,11345643,11347103,11348781,11350664,11352604,11354511,11356446,11358442,11360385,11362151,11363730,11365087,11366251,11366903,11367299,11368748,11370755,11372798,11374355,11375373,11376941,11378989,11381037,11383085,11385133,11387181,11389229,11391277,11393325,11395258,11397299,11399350,11401217,11402765,11403832,11405177,11407225,11409124,11410591,11412197,11414245,11416293,11418346,11420401,11422449,11424498,11426554,11428607,11430537,11432446,11434051,11436086,11437832,11439034,11440076,11442123,11444171,11446219,11448267,11450315,11452363,11454411,11456322,11458169,11460226,11462274,11464322,11466370,11468418,11470466,11472450,11473548,11474920,11476759,11478782,11480839,11482887,11484942,11486348,11487883,11489805,11491753,11493801,11495849,11497897,11499950,11501990,11503879,11505217,11506297,11507090,11507603,11508026,11508270,11508382,11510050,11512098,11514146,11516194,11518242,11520290,11522338,11524386,11526434,11528482,11530530,11532578,11534626,11536674,11538722,11540770,11542818,11544866,11546196,11548246,11550294,11552342,11554390,11556438,11558486,11560534,11562582,11563809,11564046,11565288,11566968,11568913,11570970,11573018,11575066,11577123,11579171,11581219,11583267,11585315,11587363,11589411,11591323,11592959,11594466,11595874,11597068,11598165,11599128,11600065,11600784,11601581,11602531,11603470,11604244,11605802,11607843,11609891,11611939,11613987,11616035,11618083,11620131,11622179,11624227,11626275,11628323,11630371,11632419,11634372,11635678,11636459,11637134,11638547,11640595,11642643,11644700,11646752,11648293,11649977,11652025,11653802,11655135,11656142,11656720,11657512,11658445,11660493,11662413,11663682,11664143,11665926,11667860,11669862,11671916,11673973,11676021,11678072,11680119,11682162,11683677,11685481,11687274,11689225,11691199,11693251,11695307,11697355,11699403,11701460,11703516,11705573,11707617,11709636,11711407,11712919,11713846,11714515,11716025,11718070,11720118,11722166,11724214,11726262,11728310,11730358,11732415,11734470,11736459,11738223,11739704,11740825,11741814,11742037,11742363,11744394,11746446,11748417,11750347,11752149,11753852,11755576,11757633,11759690,11761482,11763054,11764330,11766097,11767861,11769858,11771906,11773831,11775879,11776873,11778921,11780625,11782479,11784351,11786399,11788077,11789992,11791404,11792840,11793950,11795516,11797512,11799566,11801616,11803551,11805514,11807511,11809425,11811473,11813530,11815560,11817328,11818381,11819582,11821630,11823678,11825726,11827774,11829822,11831127,11832128,11834176,11836224,11838280,11840328,11841882,11842270,11844049,11846097,11848150,11850198,11852246,11854294,11856350,11858306,11860356,11862404,11863895,11865930,11867978,11869714,11871771,11873828,11875445,11877467,11879515,11880981,11882274,11884155,11885734,11886428,11888468,11890516,11892564,11894615,11896032,11896154,11896278,11897566,11899602,11901659,11903707,11905763,11907819,11909867,11911922,11913831,11915879,11917927,11919874,11921919,11923975,11925923,11927971,11930013,11932061,11934109,11936150,11938174,11940086,11941903,11943672,11945492,11947048,11948819,11950027,11951684,11953378,11954950,11956254,11957551,11959576,11961493,11963369,11965297,11967345,11969393,11971441,11973468,11974954,11975974,11976693,11978055,11979988,11981290,11982862,11984671,11986719,11988767,11990815,11992863,11994911,11996959,11999007,12001064,12003118,12005166,12007150,12008940,12010532,12011944,12013125,12014052,12015323,12017371,12019419,12021467,12023515,12025563,12027171,12027823,12029807,12031854,12033910,12035923,12037802,12039823,12041871,12043927,12045975,12048032,12050089,12052137,12054181,12056160,12057967,12059402,12060186,12061072,12063120,12065168,12067216,12069264,12070713,12070924,12071857,12073895,12075943,12077991,12080039,12082087,12084144,12086192,12088240,12090179,12091763,12092024,12092546,12093917,12095866,12097922,12099970,12102018,12104066,12106114,12108171,12110219,12112276,12114332,12116380,12118386,12120293,12122066,12123840,12125570,12127136,12128547,12129784,12131031,12132254,12133302,12134119,12134659,12135206,12135718,12136205,12136666,12137080,12137471,12137902,12138396,12138814,12139370,12139891,12140114,12140504,12141341,12142516,12143715,12144921,12146067,12147162,12148085,12148936,12149689,12150182,12150455,12150603,12150767,12151763,12153422,12155277,12157330,12159378,12161426,12163439,12165397,12167406,12169223,12171216,12172977,12174999,12176955,12178666,12180205,12182254,12184302,12186349,12188371,12190404,12192445,12194475,12196528,12198540,12200538,12202538,12204587,12206472,12208457,12210509,12212557,12214600,12216304,12218132,12220153,12221922,12223791,12225838,12227627,12228891,12230529,12232566,12234618,12236636,12238525,12240440,12242356,12244231,12246158,12248163,12250211,12252267,12254323,12256163,12258211,12260258,12261892,12263405,12265000,12266384,12267523,12267965,12268580,12268976,12269429,12270168,12270831,12271899,12273518,12274900,12276330,12277689,12278971,12280396,12282074,12283789,12285578,12287368,12289302,12291292,12293312,12295356,12297404,12299458,12301506,12303561,12305609,12307664,12309720,12311759,12313749,12315718,12317721,12319703,12321612,12323389,12325120,12326844,12328530,12330205,12331727,12333171,12334635,12336052,12337487,12338836,12340081,12341292,12342494,12343671,12344814,12345860,12346809,12347763,12348685,12350192,12351645,12353144,12354648,12356097,12357527,12359082,12360627,12362125,12363672,12365142,12366708,12368320,12370028,12371590,12373211,12374739,12376248,12377839,12379534,12381275,12383078,12384846,12386559,12388362,12390235,12392140,12393996,12395981,12397930,12399877,12401929,12403974,12406031,12408079,12410136,12412190,12414245,12416261,12418203,12419954,12421582,12422681,12423962,12425763,12427738,12429795,12431850,12433906,12435391,12435603,12436500,12438548,12440596,12442644,12444032,12446085,12447256,12449182,12451230,12452903,12454363,12456420,12458468,12460516,12462564,12464162,12466210,12468217,12469826,12471043,12473091,12475148,12477196,12479253,12481301,12483357,12485371,12487389,12489437,12491485,12493533,12495581,12497629,12499677,12501725,12503773,12505821,12507869,12509925,12511946,12514002,12516057,12518114,12520162,12522210,12524243,12526212,12528215,12530263,12532311,12534359,12536392,12538440,12540497,12542545,12544593,12546641,12548689,12550491,12551736,12553790,12555841,12557894,12559951,12562008,12564056,12566113,12568034,12569950,12571803,12573344,12574974,12576449,12578147,12579982,12581624,12583085,12584456,12585595,12586544,12586972,12588356,12590404,12592452,12594500,12596548,12598545,12600235,12601451,12601677,12602492,12604508,12606556,12608535,12610191,12611606,12613340,12615191,12616383,12616583,12617222,12618183,12618558,12618949,12619293,12619684,12620130,12620527,12620911,12621199,12622020,12622917,12623769,12624546,12625080,12625607,12626104,12626552,12627246,12627722,12628409,12629210,12629720,12630248,12630931,12631754,12632758,12632984,12633446,12634040,12634371,12634825,12635848,12636509,12637214,12637702,12638098,12638966,12639701,12640578,12641261,12642140,12643148,12643970,12645044,12646067,12647367,12648580,12648969,12649394,12649872,12650066,12650386,12650769,12651049,12651576,12652186,12652817,12653025,12653315,12653571,12653904,12654039,12654250,12654583,12654773,12655059,12655369,12655646,12656008,12656304,12656512,12656632,12656813,12657052,12657174,12657431,12658250,12658907,12659350,12659785,12660487,12661270,12662187,12662863,12663785,12664877,12665714,12666465,12667267,12667627,12668063,12668378,12668718,12669079,12669309,12669718,12670307,12670680,12670987,12671509,12672523,12673112,12674334,12674985,12675642,12676427,12677343,12677785,12678246,12678868,12679248,12679989,12681730,12683386,12684381,12685573,12686964,12688378,12689857,12690698,12691751,12692720,12693522,12694409,12695676,12696140,12697312,12698141,12699196,12699802,12700836,12701127,12701654,12702240,12702537,12703340,12703705,12704219,12705032,12705787,12706292,12706916,12707450,12707879,12708485,12709690,12710999,12711930,12712797,12713728,12715051,12715977,12716792,12718064,12719638,12720665,12721767,12722547,12723816,12724846,12726306,12727227,12728395,12729209,12730473,12731297,12732236,12733136,12734130,12735173,12736246,12737245,12737652,12738081,12738340,12738700,12739122,12739325,12739602,12739688,12740006,12740309,12740869,12741319,12741838,12742148,12742725,12743327,12744214,12745005,12745801,12746579,12747199,12748261,12749637,12750724,12751981,12753387,12754504,12755435,12756331,12756828,12757274,12758040,12759023,12760097,12760718,12761664,12762069,12762400,12762943,12763566,12764057,12765127,12766335,12767459,12767820,12768390,12768843,12769359,12769902,12770452,12770834,12771368,12771692,12772238,12772681,12773156,12773485,12774074,12774329,12774722,12775445,12776024,12776850,12777141,12778570,12779087,12779630,12780199,12780754,12781203,12781905,12782324,12782677,12783223,12783390,12783834,12784368,12784870,12785710,12786469,12787602,12788496,12789467,12790018,12790488,12790917,12791118,12791365,12791856,12792516,12793155,12793633,12794264,12794793,12795175,12795552,12796033,12796419,12796828,12797218,12797929,12798148,12798477,12798711,12799045,12799309,12799673,12799809,12800026,12800283,12800644,12800750,12800860,12800970,12801154,12801263,12801360,12801500,12801609,12801706,12801955,12802273,12802738,12803012,12803185,12804024,12804856,12805664,12806295,12807309,12808123,12808693,12809312,12809815,12810313,12810555,12811953,12813282,12814386,12815473,12816612,12817829,12819252,12820855,12822557,12823901,12825090,12825963,12826908,12827862,12829220,12830929,12832596,12833830,12835361,12836787,12837937,12838928,12839539,12840108,12840824,12841103,12841792,12842409,12843241,12844053,12844489,12844915,12845313,12845650,12846012,12846369,12846694,12847308,12847513,12847927,12848132,12848633,12849065,12849403,12849626,12849883,12850064,12850220,12850399,12850886,12851539,12852749,12853644,12854404,12854729,12854884,12855375,12855916,12856570,12856963,12857555,12858173,12858402,12858875,12859565,12860628,12861523,12862209,12862822,12863288,12863772,12864532,12865014,12865490,12865916,12866676,12867210,12867777,12868426,12869132,12869623,12869889,12870317,12870718,12871106,12871460,12871606,12871643,12871679,12871814,12872000,12872187,12872409,12872691,12872844,12873080,12873261,12873425,12873561,12873988,12874301,12874606,12875000,12875210,12875257,12876155,12877309,12878485,12879620,12880685,12881870,12882642,12883918,12884711,12885062,12885454,12886671,12887896,12888462,12889498,12891309,12892771,12894199,12895688,12897222,12898647,12900194,12901576,12903054,12904501,12906055,12907472,12908914,12910381,12911966,12913438,12914971,12916373,12917876,12919276,12920638,12922006,12923546,12925057,12926675,12928077,12929638,12931264,12932798,12934502,12936145,12937826,12939540,12941122,12942150,12943078,12944191,12945301,12946573,12948446,12950165,12951928,12953667,12955338,12957048,12958778,12960490,12962208,12963936,12965635,12967362,12969114,12970885,12972655,12974357,12976010,12977698,12979384,12981033,12982723,12984441,12986146,12987885,12989568,12991270,12992920,12994559,12996232,12997881,12999465,13001042,13002679,13004585,13006115,13007845,13009523,13011125,13012781,13014427,13016157,13017893,13019716,13021563,13023390,13025207,13027017,13028815,13030522,13032309,13033972,13035739,13037561,13039410,13041156,13042800,13044554,13046388,13048092,13049880,13051648,13053407,13055126,13056800,13058447,13060070,13061718,13063452,13065097,13066727,13068308,13069890,13071550,13073208,13074858,13076561,13078261,13079978,13081641,13083362,13085050,13086806,13088535,13090156,13091902,13093620,13095320,13097050,13098726,13100375,13102065,13103748,13105362,13107022,13108614,13110218,13111761,13113270,13114795,13116295,13117958,13119082,13120154,13121002,13121653,13122561,13123885,13125324,13126796,13128084,13129215,13130381,13131587,13132725,13134115,13135484,13136721,13138017,13139288,13140564,13141746,13142724,13143606,13144363,13145252,13146159,13146901,13147524,13148362,13149414,13150504,13151564,13152735,13154328,13155886,13157288,13158727,13160105,13161726,13163162,13164652,13166191,13167767,13169122,13170415,13171683,13172938,13173622,13173862,13174070,13174319,13174542,13174762,13175649,13177038,13178452,13179636,13181214,13182859,13184258,13185530,13187056,13188171,13188909,13190284,13191590,13192388,13193823,13195386,13196831,13198470,13200043,13201666,13203139,13204494,13205810,13207440,13208710,13210157,13211703,13213424,13214832,13216232,13217629,13219111,13220477,13222112,13223267,13224832,13226534,13228101,13229831,13231322,13232869,13234584,13235769,13237490,13238764,13240416,13241857,13242991,13244534,13246047,13247726,13249233,13250620,13252089,13253574,13254931,13256487,13258132,13259719,13261150,13262371,13263958,13265432,13266971,13268566,13269921,13271294,13272774,13274465,13275727,13277377,13278574,13280028,13281528,13283190,13284423,13285783,13287287,13288942,13290525,13292194,13293307,13294868,13296204,13297825,13298865,13300431,13301848,13303552,13304505,13305991,13307437,13308906,13310240,13311724,13313286,13314909,13316511,13318125,13319659,13321000,13322363,13324074,13325553,13327204,13328936,13330352,13331864,13333450,13334960,13336600,13337695,13339378,13341039,13342422,13344210,13345506,13347174,13348911,13350459,13352102,13353329,13354984,13356726,13357961,13359694,13361469,13362804,13364275,13365890,13367250,13368829,13370463,13371934,13373510,13375100,13376611,13378155,13379747,13381430,13383054,13384679,13386211,13387487,13389066,13390869,13392323,13393911,13395778,13397665,13399564,13401507,13403554,13405551,13407606,13409625,13411647,13413659,13415695,13417720,13419757,13421780,13423824,13425877,13427924,13429970,13431960,13433974,13435976,13438010,13440036,13442074,13444123,13446171,13448199,13450244,13452294,13454307,13456328,13458358,13460410,13462460,13464493,13466539,13468587,13470624,13472639,13474662,13476533,13478523,13480559,13482597,13484648,13486681,13488710,13490733,13492773,13494788,13496775,13498764,13500748,13502733,13504742,13506737,13508767,13510809,13512831,13514879,13516910,13518900,13520871,13522862,13524863,13526869,13528857,13530902,13532920,13534949,13536995,13539026,13541014,13542982,13544978,13546996,13548972,13550980,13553025,13555074,13557122,13559150,13561164,13563139,13565129,13567164,13569181,13571214,13573246,13575293,13577345,13579398,13581437,13583464,13585515,13587533,13589577,13591580,13593632,13595625,13597661,13599702,13601630,13603609,13605577,13607562,13609532,13611545,13613482,13615435,13617420,13619412,13621389,13623329,13625338,13627330,13629324,13631240,13633207,13635165,13637145,13639123,13641118,13643049,13645037,13647048,13649011,13650950,13652960,13654934,13656924,13658870,13660843,13662840,13664832,13666811,13668789,13670756,13672740,13674769,13676755,13678762,13680755,13682729,13684738,13686698,13688717,13690623,13692625,13694590,13696575,13698573,13700551,13702529,13704475,13706456,13708433,13710446,13712398,13714403,13716405,13718402,13720405,13722426,13724420,13726419,13728415,13730387,13732379,13734349,13736321,13738338,13740332,13742284,13744236,13746232,13748256,13750222,13752198,13754238,13756262,13758262,13760239,13762283,13764322,13766268,13768325,13770329,13772351,13774375,13776423,13778423,13780436,13782470,13784504,13786498,13788473,13790452,13792461,13794482,13796475,13798451,13800282,13802259,13804315,13806363,13808396,13810332,13812304,13814214,13816122,13817867,13819775,13821662,13823581,13825343,13827274,13829097,13831067,13833062,13835035,13836884,13838813,13840753,13842590,13844454,13846304,13848291,13850241,13852200,13854112,13856053,13857944,13859871,13861756,13863615,13865616,13867572,13869523,13871500,13873300,13875283,13877121,13878997,13880833,13882723,13884684,13886665,13888559,13890590,13892564,13894467,13896327,13898172,13900089,13901951,13903911,13905872,13907784,13909715,13911724,13913680,13915671,13917409,13919363,13921090,13923082,13925030,13926983,13928915,13930775,13932744,13934683,13936637,13938453,13940470,13942428,13944428,13946208,13947915,13949773,13951502,13953407,13955273,13957151,13958973,13960795,13962657,13964494,13966458,13968389,13970294,13972230,13974150,13976027,13977971,13979883,13981788,13983706,13985601,13987493,13989443,13991346,13993333,13995241,13997183,13999065,14000943,14002866,14004700,14006597,14008393,14010312,14012231,14014030,14015969,14017502,14019274,14020624,14022353,14024177,14025921,14027783,14029743,14031677,14033653,14035632,14037622,14039619,14041541,14043516,14045525,14047480,14049448,14051426,14053216,14054632,14056059,14057474,14058912,14060376,14061901,14063295,14064896,14066374,14067810,14069343,14071027,14072795,14074432,14076061,14077969,14079988,14081968,14083899,14085938,14087905,14089715,14091672,14093589,14095588,14097573,14099503,14101479,14103401,14105366,14107192,14109057,14111024,14113034,14115043,14116950,14118969,14120873,14122831,14124728,14126594,14128582,14130548,14132566,14134458,14136476,14138409,14140325,14142213,14144062,14146084,14148003,14150025,14151913,14153886,14155737,14157643,14159541,14161400,14163362,14165338,14167364,14169269,14171238,14173177,14175045,14176944,14178822,14180820,14182836,14184823,14186758,14188756,14190678,14192523,14194444,14196373,14198337,14200289,14202208,14204154,14206094,14208006,14209967,14211889,14213781,14215520,14217265,14218902,14220560,14222229,14223916,14225689,14227393,14229074,14230752,14232453,14234175,14235877,14237603,14239305,14240958,14242651,14244341,14246035,14247751,14249466,14251187,14252832,14254469,14256126,14257834,14259571,14261349,14263038,14264641,14266235,14267886,14269668,14271387,14273045,14274687,14276312,14277979,14279633,14281383,14283118,14284842,14286512,14288146,14289789,14291548,14293341,14295103,14296758,14298358,14300000,14301761,14303645,14305520,14307293,14309010,14310786,14312577,14314430,14316280,14318127,14319923,14321709,14323543,14325282,14327065,14328784,14330488,14332163,14333883,14335615,14337266,14338847,14340610,14342347,14344056,14345679,14347524,14349155,14350788,14352570,14354275,14355799,14357513,14359238,14360966,14362608,14364373,14366120,14367895,14369568,14371342,14373125,14374948,14376605,14378347,14380104,14381804,14383550,14385286,14387061,14389028,14390933,14392922,14394921,14396908,14398871,14400780,14402726,14404656,14406669,14408638,14410622,14412631,14414622,14416599,14418601,14420572,14422563,14424544,14426525,14428489,14430484,14432485,14434479,14436461,14438422,14440419,14442383,14444333,14446303,14448316,14450313,14452301,14454262,14456248,14458219,14460203,14462174,14464156,14466125,14468090,14470070,14472033,14474002,14475961,14477947,14479907,14481882,14483835,14485818,14487766,14489742,14491689,14493638,14495602,14497558,14499527,14501485,14503460,14505438,14507394,14509354,14511312,14513277,14515240,14517199,14519162,14521118,14523090,14525042,14527015,14528967,14530933,14532887,14534852,14536819,14538709,14540637,14542541,14544438,14546356,14548276,14550164,14552086,14553985,14555887,14557813,14559718,14561622,14563532,14565446,14567345,14569280,14571145,14573048,14574964,14576798,14578687,14580614,14582451,14584331,14586282,14588125,14589992,14591945,14593786,14595638,14597593,14599434,14601267,14603225,14605074,14606883,14608848,14610685,14612505,14614476,14616308,14618142,14620028,14621832,14623662,14625558,14627337,14629183,14631076,14632832,14634706,14636604,14638349,14640225,14642117,14643877,14645757,14647621,14649409,14651294,14653130,14654929,14656824,14658635,14660500,14662409,14664230,14666099,14668015,14669820,14671712,14673568,14675415,14677327,14679164,14681016,14682927,14684736,14686622,14688494,14690332,14692244,14694093,14695932,14697850,14699701,14701617,14703496,14705342,14707246,14709133,14710992,14712894,14714778,14716633,14718536,14720420,14722275,14724173,14726057,14727908,14729801,14731684,14733533,14735426,14737312,14739157,14741051,14742937,14744784,14746690,14748600,14750432,14752348,14754253,14756089,14758005,14759909,14761755,14763690,14765576,14767422,14769355,14771214,14773069,14774995,14776853,14778720,14780639,14782503,14784375,14786279,14788138,14789992,14791917,14793826,14795739,14797670,14799578,14801503,14803412,14805332,14807258,14809175,14811092,14813018,14814941,14816846,14818761,14820676,14822600,14824521,14826499,14828475,14830458,14832440,14834420,14836412,14838406,14840392,14842367,14844343,14846348,14848256,14850215,14852104,14854028,14855913,14857832,14859721,14861649,14863494,14865416,14867320,14869195,14871135,14873106,14875073,14877033,14879002,14880959,14882916,14884898,14886822,14888810,14890737,14892718,14894658,14896626,14898565,14900546,14902436,14904391,14906222,14908202,14910038,14911988,14913859,14915767,14917656,14919550,14921485,14923338,14925310,14927137,14929113,14930957,14932893,14934752,14936610,14938480,14940298,14942200,14944005,14945945,14947757,14949634,14951489,14953332,14955212,14957034,14958963,14960745,14962656,14964485,14966363,14968222,14970261,14972318,14974348,14976353,14978370,14980365,14982390,14984407,14986453,14988494,14990521,14992566,14994600,14996631,14998653,15000654,15002489,15004505,15006509,15008556,15010613,15012664,15014690,15016724,15018745,15020759,15022763,15024775,15026816,15028845,15030870,15032922,15034960,15036999,15039024,15041041,15043013,15044950,15046981,15048983,15050999,15053051,15055099,15057118,15059134,15061123,15063118,15065107,15067079,15069076,15071095,15073141,15075161,15077182,15079196,15081208,15083184,15085191,15087188,15089161,15091141,15093158,15095202,15097218,15099230,15101247,15103255,15105233,15107233,15109223,15111197,15113169,15115181,15117221,15119246,15121297,15123344,15125376,15127382,15129416,15131431,15133445,15135404,15137454,15139489,15141537,15143578,15145633,15147678,15149728,15151745,15153773,15155800,15157832,15159877,15161925,15163925,15165941,15167901,15169898,15171872,15173877,15175878,15177850,15179866,15181861,15183822,15185827,15187805,15189750,15191691,15193663,15195653,15197672,15199641,15201646,15203644,15205573,15207516,15209474,15211404,15213197,15215102,15217103,15219102,15221055,15223065,15225045,15227053,15229029,15231010,15232998,15234961,15236864,15238758,15240674,15242649,15244617,15246538,15248443,15250390,15252389,15254334,15256269,15258105,15259996,15261982,15263985,15265893,15267745,15269663,15271633,15273588,15275455,15277335,15279213,15281061,15282961,15284917,15286844,15288782,15290727,15292575,15294467,15296327,15298220,15300200,15302109,15304076,15306035,15307921,15309797,15311688,15313584,15315537,15317540,15319485,15321376,15323194,15325031,15326913,15328843,15330815,15332680,15334556,15336380,15338010,15339940,15341867,15343766,15345686,15347598,15349439,15351319,15353250,15355092,15356968,15358845,15360743,15362597,15364462,15366284,15368133,15370105,15372064,15373983,15375896,15377790,15379632,15381476,15383356,15385180,15387021,15388945,15390913,15392876,15394782,15396741,15398559,15400455,15402413,15404347,15406378,15408403,15410410,15412363,15414292,15416295,15418267,15420276,15422229,15424181,15426115,15428164,15430177,15432164,15433999,15435969,15437971,15439985,15441972,15443933,15445916,15447931,15449939,15451928,15453895,15455878,15457879,15459897,15461913,15463895,15465814,15467784,15469759,15471738,15473775,15475728,15477741,15479781,15481796,15483787,15485795,15487722,15489742,15491744,15493726,15495706,15497731,15499759,15501763,15503693,15505443,15507235,15509121,15511137,15513150,15515125,15517149,15519151,15521124,15523087,15525041,15526998,15528954,15530844,15532798,15534754,15536726,15538661,15540663,15542635,15544661,15546657,15548650,15550605,15552552,15554545,15556522,15558491,15560345,15562293,15564234,15566212,15568092,15569989,15571938,15573879,15575752,15577667,15579657,15581642,15583634,15585615,15587623,15589635,15591632,15593659,15595561,15597468,15599452,15601374,15603078,15604990,15606935,15608882,15610834,15612770,15614713,15616728,15618713,15620716,15622710,15624684,15626640,15628668,15630658,15632621,15634615,15636564,15638492,15640453,15642398,15644372,15646307,15648277,15650257,15652251,15654263,15656279,15658270,15660243,15662216,15664239,15666206,15668178,15670141,15672124,15674073,15676065,15678013,15679956,15681953,15683920,15685929,15687911,15689834,15691829,15693851,15695835,15697798,15699754,15701691,15703732,15705681,15707676,15709673,15711652,15713666,15715643,15717622,15719654,15721634,15723594,15725616,15727541,15729588,15731536,15733478,15735468,15737435,15739419,15741407,15743409,15745366,15747266,15749227,15751224,15753163,15755112,15757114,15759070,15760982,15762960,15764944,15766955,15768939,15770877,15772832,15774791,15776729,15778717,15780629,15782582,15784538,15786374,15788240,15790195,15792168,15794061,15795963,15797892,15799802,15801776,15803719,15805625,15807620,15809596,15811542,15813538,15815510,15817447,15819475,15821304,15823319,15825284,15827276,15829288,15831285,15833299,15835350,15837386,15839250,15841270,15843238,15845278,15847301,15849330,15851384,15853419,15855446,15857406,15859413,15861412,15863411,15865442,15867466,15869491,15871485,15873526,15875510,15877565,15879566,15881589,15883634,15885667,15887723,15889753,15891798,15893770,15895787,15897782,15899796,15901835,15903858,15905908,15907964,15910012,15911996,15914002,15915971,15918019,15920060,15922093,15924140,15926180,15928228,15930168,15932117,15934065,15935992,15937878,15939879,15941841,15943823,15945824,15947817,15949851,15951877,15953811,15955808,15957770,15959799,15961756,15963756,15965690,15967577,15969577,15971558,15973563,15975544,15977554,15979491,15981293,15983279,15985247,15986871,15988738,15990538,15992191,15993809,15995451,15996984,15998781,16000146,16001663,16003201,16004582,16006173,16007443,16008945,16010422,16011566,16013082,16014238,16015655,16016960,16018188,16019600,16020749,16022175,16023328,16024268,16025862,16027260,16028442,16029680,16031004,16032360,16033309,16034582,16035969,16037095,16038705,16039803,16041171,16042340,16043851,16045125,16046396,16047841,16049373,16050554,16052181,16053609,16055074,16056661,16057997,16059619,16060933,16062427,16063968,16065146,16066784,16067946,16069383,16070541,16072092,16073333,16074698,16076068,16077115,16078289,16079808,16081279,16082400,16083657,16084995,16086341,16087302,16088605,16090044,16091214,16092755,16093836,16095203,16096289,16097953,16099169,16100624,16102085,16103486,16104958,16106423,16108001,16109446,16111044,16112523,16113813,16115260,16116780,16118158,16119374,16120967,16122229,16123570,16124717,16126332,16127541,16128963,16130266,16131211,16132542,16133984,16135414,16136507,16137847,16139301,16140434,16141416,16142692,16144087,16145252,16146757,16147880,16149275,16150411,16152013,16153270,16154772,16156245,16157603,16159101,16160533,16162073,16163559,16165082,16166644,16167859,16169357,16170836,16172029,16173407,16174901,16176213,16177593,16178740,16180304,16181455,16182856,16184181,16185043,16186607,16187934,16189223,16190398,16191615,16193217,16194084,16195296,16196696,16197865,16199374,16200407,16201781,16203072,16204393,16205776,16206983,16208415,16209940,16211181,16212796,16214266,16215760,16217324,16218648,16220303,16221589,16223118,16224647,16225921,16227561,16228719,16230103,16231374,16232734,16234150,16235431,16236887,16237982,16238944,16240575,16241991,16243156,16244400,16245749,16247259,16248160,16249411,16250862,16252054,16253683,16254726,16256095,16257209,16258833,16260072,16261466,16262918,16264336,16265674,16267150,16268728,16270161,16271727,16273190,16274602,16275971,16277446,16278950,16280151,16281800,16282972,16284394,16285559,16287168,16288332,16289745,16291019,16291925,16293236,16294642,16296074,16297163,16298469,16299969,16301029,16302074,16303396,16304685,16305889,16307434,16308602,16309974,16311148,16312760,16314019,16315481,16316976,16318356,16319766,16321226,16322836,16324350,16325949,16327501,16328760,16330272,16331828,16333171,16334224,16335915,16337082,16338431,16339573,16341149,16342345,16343642,16345007,16346013,16347184,16348679,16350117,16351201,16352494,16354010,16355041,16356075,16357431,16358676,16359756,16361273,16362415,16363813,16364940,16366575,16367686,16369068,16370577,16372027,16373447,16374986,16376564,16378061,16379617,16381216,16382550,16383993,16385549,16386938,16388046,16389747,16390945,16392308,16393456,16395045,16396250,16397508,16398900,16399996,16400926,16402530,16403985,16405163,16406402,16407739,16409126,16410058,16411337,16412739,16413878,16415449,16416514,16417862,16419150,16420738,16421995,16423204,16424742,16426296,16427681,16429341,16430764,16432279,16433843,16435257,16436973,16438215,16439722,16441246,16442467,16444058,16445326,16446705,16448062,16449308,16450818,16452043,16453520,16454728,16455604,16457284,16458584,16459817,16461036,16462231,16463888,16464711,16465973,16467423,16468687,16470315,16471369,16472699,16473920,16475318,16476802,16478118,16479559,16481083,16482329,16484020,16485499,16487041,16488655,16490063,16491758,16493056,16494604,16496125,16497309,16498959,16500197,16501624,16502994,16504210,16505734,16506974,16508478,16509707,16510557,16512220,16513513,16514792,16516031,16517249,16518870,16519783,16520961,16522380,16523817,16525244,16526571,16527835,16529207,16530488,16532129,16533349,16534868,16536435,16537719,16539367,16540902,16542558,16544115,16545676,16547259,16548667,16549883,16551125,16552421,16553858,16555442,16557036,16558487,16559818,16561039,16562600,16564117,16565498,16567241,16568805,16570119,16571360,16572784,16574248,16575661,16577372,16578915,16580381,16581739,16582995,16584491,16585874,16587244,16588873,16590478,16592059,16593503,16594704,16596078,16597454,16598685,16600154,16601868,16603120,16604219,16605527,16606816,16608543,16609928,16611201,16612672,16614341,16615483,16617181,16618858,16620745,16622691,16624586,16626432,16628360,16630158,16631915,16633744,16635650,16637425,16639259,16640857,16642115,16643845,16645540,16647299,16649025,16650730,16652443,16653904,16654667,16655978,16657975,16659961,16661773,16663319,16664455,16665763,16667567,16669131,16670874,16672609,16674525,16676234,16677988,16679691,16681580,16683283,16685056,16686945,16688838,16690702,16692358,16694052,16696002,16697656,16699635,16701456,16703396,16705369,16707328,16709260,16711104,16712877,16714442,16716333,16718145,16720041,16721968,16723782,16725426,16727150,16728667,16730354,16732122,16733785,16735374,16737064,16738634,16740053,16741732,16743517,16745538,16747549,16749529,16751431,16753426,16755456,16757469,16759412,16761425,16763457,16765462,16767415,16769415,16771461,16773436,16775419,16777346,16779299,16781208,16783203,16785148,16787118,16789070,16791113,16793114,16795121,16797128,16799142,16801178,16803181,16805163,16806999,16809006,16811054,16813111,16815149,16817127,16819058,16820893,16822492,16824456,16826312,16828262,16830146,16832053,16833966,16835885,16837775,16839662,16841557,16843501,16845362,16847264,16849266,16851154,16853065,16854999,16856876,16858763,16860059,16861794,16863741,16865438,16866946,16868439,16869682,16871243,16872984,16874610,16876230,16878081,16879631,16881206,16882800,16884383,16885897,16887472,16889116,16890762,16892331,16893590,16894895,16896561,16898188,16899467,16900839,16902809,16904657,16906420,16908185,16909970,16911669,16913450,16915318,16917048,16918720,16920375,16922112,16923743,16925359,16927197,16928939,16930204,16931702,16933393,16934860,16936315,16937550,16938892,16940657,16942160,16943396,16944593,16946013,16947662,16948926,16950463,16952440,16954440,16956412,16958384,16960358,16962270,16964093,16965643,16967565,16969432,16971314,16972911,16974720,16976720,16978602,16980480,16982370,16984162,16985947,16987815,16989489,16991404,16992932,16994361,16996071,16997537,16998942,17000507,17002133,17003547,17005283,17006657,17008390,17009841,17011553,17013169,17015025,17016521,17018252,17019796,17021545,17023037,17024482,17026095,17027597,17029484,17030747,17031991,17033336,17035100,17036931,17038756,17040472,17041879,17043332,17044989,17046757,17048303,17049747,17051402,17053029,17054672,17056337,17057887,17059449,17061107,17062704,17064072,17065648,17067072,17068771,17070391,17071842,17073444,17074987,17076620,17078275,17079771,17081011,17082613,17084124,17085379,17086688,17088048,17089263,17090577,17091941,17093495,17094710,17095948,17097375,17098711,17100020,17101431,17102803,17104088,17105686,17107271,17108844,17110739,17112221,17113704,17115567,17117395,17119254,17121188,17122732,17124696,17126461,17128100,17130020,17131648,17133582,17134812,17136679,17138595,17140075,17141774,17143500,17145195,17146863,17148452,17149916,17151535,17153000,17154574,17156080,17157635,17159225,17160773,17162288,17163715,17165322,17166871,17168383,17169799,17171392,17172862,17174673,17176549,17178448,17180311,17182153,17183929,17185395,17186894,17188480,17189980,17191872,17193812,17195743,17197595,17199496,17201400,17203296,17205273,17206302,17206813,17207403,17207881,17208615,17209233,17209796,17210352,17211012,17212781,17214751,17216732,17218682,17220609,17222564,17224537,17226484,17228433,17230060,17231724,17233329,17234974,17236754,17238307,17240036,17241621,17243306,17244848,17246394,17248044,17249536,17251053,17252536,17253913,17255418,17256768,17258385,17259904,17261162,17262314,17263738,17265091,17266665,17268115,17269533,17270883,17272463,17273932,17275529,17276976,17278367,17279755,17281188,17282648,17284070,17285448,17286876,17288731,17290503,17292315,17294192,17296079,17297976,17299774,17301513,17303328,17305001,17306702,17308487,17310321,17312145,17313896,17315603,17317259,17318346,17319145,17319962,17320811,17322292,17323997,17325666,17327292,17328939,17330593,17332186,17333785,17335450,17337222,17338888,17340571,17342215,17343888,17345711,17347513,17349384,17350777,17352572,17354069,17355794,17357401,17359179,17360683,17362306,17364240,17365900,17367745,17369587,17371448,17372981,17374821,17376650,17378415,17379472,17380534,17381504,17382584,17383653,17384731,17385700,17386780,17388439,17389995,17391596,17393115,17394697,17396265,17397837,17399343,17401021,17402449,17403988,17405604,17407266,17408525,17409604,17410643,17411637,17412980,17414396,17415977,17417745,17419358,17420806,17421908,17423337,17424895,17426034,17427295,17428811,17430335,17431782,17433386,17434997,17436531,17438093,17439728,17441246,17442527,17443435,17444273,17445305,17445833,17446815,17447537,17448558,17449952,17451437,17452217,17452749,17453606,17454169,17454974,17455512,17456176,17456929,17457625,17458496,17458978,17459790,17460504,17461449,17461967,17462491,17463373,17464063,17464933,17465434,17466313,17467009,17467866,17468324,17468773,17469674,17470256,17471017,17471314,17471892,17472094,17472311,17472889,17473072,17473682,17473892,17474491,17474661,17475132,17475320,17475464,17475939,17475979,17476534,17476700,17477282,17477535,17477708,17479238,17480664,17482098,17483297,17484501,17485673,17487081,17488048,17489054,17490047,17491025,17492010,17492978,17493970,17494968,17496485,17497875,17499286,17500722,17502227,17503700,17505098,17506454,17508039,17509483,17510978,17512497,17514088,17515668,17517173,17518704,17520198,17521769,17523168,17524601,17525972,17527387,17528839,17530266,17531666,17533192,17534581,17535975,17537373,17538752,17539876,17540820,17541768,17542734,17543831,17544768,17545736,17546641,17547735,17548636,17549588,17550508,17551460,17552894,17554269,17555678,17557094,17558225,17559158,17560086,17561037,17562487,17564105,17565684,17567250,17568765,17570285,17571833,17573437,17575054,17576607,17577939,17579277,17580602,17581866,17583171,17584505,17585836,17587377,17588928,17590451,17591769,17593295,17594602,17595853,17597111,17598665,17600315,17602007,17603574,17605168,17606683,17608496,17610206,17612016,17613624,17614835,17616007,17617510,17618937,17620428,17621644,17622925,17624322,17625751,17627391,17628821,17630384,17631829,17633269,17634954,17636654,17638294,17639964,17641503,17643168,17644818,17646452,17648217,17649835,17651548,17653201,17654799,17656400,17658047,17659688,17661210,17662924,17664586,17666181,17667876,17669352,17670999,17672613,17674245,17675912,17677510,17679208,17680886,17682549,17684155,17685820,17687478,17689034,17690824,17692463,17694089,17695718,17697499,17699207,17700825,17702459,17704089,17705914,17707587,17709264,17710942,17712706,17714409,17716069,17717755,17719409,17720649,17721598,17722563,17723516,17724876,17726378,17727926,17729414,17731006,17732334,17733650,17735026,17736317,17737610,17738770,17740013,17741270,17742591,17743784,17744724,17745664,17747103,17748312,17749462,17750568,17751797,17752917,17753844,17754829,17755792,17757379,17758900,17760413,17761966,17763464,17764976,17766505,17768045,17769731,17771131,17772514,17773888,17775277,17776640,17778043,17779415,17780801,17782509,17784038,17785601,17787164,17788724,17790254,17791787,17793319,17794945,17796639,17798251,17799861,17801512,17803133,17804734,17806329,17807989,17809760,17811216,17812649,17814058,17815497,17816965,17818379,17819762,17821191,17823080,17824841,17826550,17828231,17829984,17831723,17833422,17835114,17837015,17838769,17840474,17842163,17843864,17845592,17847260,17848935,17850624,17851976,17852998,17854218,17855236,17856341,17857402,17858636,17859793,17860906,17861978,17862908,17863714,17864349,17865067,17865723,17867327,17868975,17870700,17872400,17874116,17875804,17877524,17879218,17880979,17882808,17884541,17886237,17887841,17889554,17891233,17892970,17894664,17896546,17898296,17900070,17901827,17903579,17905374,17907142,17908915,17910652,17912509,17914227,17915911,17917529,17919213,17920864,17922584,17924259,17925968,17927418,17928926,17930294,17931904,17932914,17933941,17934961,17935987,17937831,17939630,17941444,17943280,17944946,17946789,17948578,17950419,17952230,17953658,17954827,17956049,17957588,17959094,17960101,17961153,17962457,17964210,17965816,17967435,17969021,17970557,17972190,17973806,17975382,17977115,17978648,17980096,17981520,17983011,17984418,17985894,17987319,17988794,17990230,17992028,17993387,17995147,17996466,17997955,17999396,18000872,18002291,18003991,18005629,18007248,18008854,18010381,18011969,18013558,18015144,18016819,18018335,18019813,18021243,18022620,18024147,18025598,18027045,18028466,18030254,18032076,18033910,18035745,18037426,18039249,18041048,18042874,18044657,18046338,18047978,18049596,18051286,18052871,18054527,18056127,18057825,18059418,18060881,18062328,18063818,18065181,18066688,18068128,18069558,18071126,18072967,18074768,18076620,18078516,18080199,18082042,18083846,18085726,18087398,18089015,18090654,18092275,18093818,18095486,18097126,18098725,18100390,18102008,18103460,18104876,18106355,18107754,18109245,18110707,18112142,18113715,18115550,18117371,18119209,18120944,18122815,18124607,18126470,18128305,18129612,18130651,18132357,18133024,18133706,18134878,18135573,18136607,18137398,18138077,18139544,18140622,18141267,18141989,18143152,18144409,18145395,18146621,18148013,18149289,18149883,18151057,18152352,18153515,18154857,18156117,18157861,18159028,18160017,18160975,18162594,18164174,18165754,18167498,18169131,18170855,18172406,18174173,18175672,18177161,18178426,18179248,18180484,18182052,18183565,18184583,18185577,18186594,18187607,18188944,18190023,18191062,18192153,18193499,18195371,18197404,18199451,18201462,18203490,18205507,18207525,18209502,18211530,18213570,18215600,18217621,18219604,18221613,18223625,18225623,18227604,18229633,18231662,18233689,18235697,18237723,18239732,18241743,18243690,18245715,18247754,18249785,18251779,18253775,18255782,18257784,18259782,18261757,18263801,18265726,18267633,18269546,18271416,18273314,18275237,18277097,18278965,18280850,18282764,18284635,18286528,18288353,18290221,18292048,18293929,18295870,18297544,18299214,18300869,18302541,18304207,18305865,18307528,18309154,18310949,18312602,18314261,18315907,18317534,18319204,18320847,18322456,18324122,18325691,18327118,18328579,18329987,18331411,18332862,18334263,18335650,18337218,18338734,18340226,18341738,18343240,18344582,18346118,18347646,18349266,18350685,18352203,18353676,18355366,18356809,18358269,18359819,18361447,18362855,18364203,18365685,18367152,18369111,18370789,18372282,18373963,18375569,18377156,18378667,18380261,18381967,18383514,18385090,18386723,18388400,18390134,18391760,18393346,18394879,18396543,18398092,18399641,18401200,18402757,18404296,18405882,18407403,18408828,18410430,18411891,18413618,18415162,18416809,18418375,18420052,18421719,18423362,18425141,18426885,18428373,18430067,18432005,18433852,18435562,18437291,18439180,18441124,18443059,18444997,18446975,18448918,18450856,18452766,18454694,18456513,18458364,18460232,18462212,18464086,18465978,18467848,18469679,18471480,18473258,18475042,18476821,18478825,18480780,18482750,18484752,18486707,18488622,18490523,18492412,18494416,18496355,18498243,18500135,18501990,18503798,18505631,18507454,18509237,18511236,18513223,18515214,18517183,18519129,18521077,18523003,18524906,18526873,18528795,18530616,18532428,18534169,18535947,18537713,18539485,18541249,18543166,18545009,18546858,18548623,18550427,18552249,18554058,18555863,18557634,18559336,18560754,18562196,18563661,18565069,18566501,18567907,18569305,18570901,18572864,18574798,18576746,18578717,18580658,18582566,18584472,18586388,18588289,18590151,18592062,18594062,18595998,18597937,18599836,18601734,18603622,18605549,18607430,18609350,18611067,18612564,18614100,18615716,18617302,18618917,18620486,18621986,18623813,18625606,18627423,18629225,18630974,18632737,18634461,18636177,18637899,18639483,18640820,18642122,18643441,18644841,18646109,18647466,18648806,18650363,18651870,18653337,18654828,18656386,18657966,18659455,18660932,18662397,18664046,18665750,18667209,18668877,18670521,18672106,18673687,18675175,18676545,18677884,18679201,18680436,18681723,18682887,18684151,18685864,18687750,18689616,18691490,18693394,18695281,18697158,18699026,18700895,18702854,18704751,18706625,18708494,18710389,18712266,18714153,18716027,18717947,18719379,18720793,18722172,18723571,18725038,18726518,18727989,18729456,18731219,18732882,18734587,18736322,18738014,18739615,18741205,18742744,18744453,18745982,18747520,18749092,18750704,18752432,18754152,18755854,18757489,18759199,18760656,18762131,18763594,18765053,18766426,18767820,18769238,18770751,18772297,18773783,18775284,18776842,18778042,18779569,18781088,18782520,18784193,18785687,18787221,18788708,18790027,18791534,18793035,18794554,18796066,18798064,18800022,18801950,18803658,18805071,18806492,18807913,18808736,18810145,18811547,18812958,18814564,18815756,18816877,18818005,18819126,18820181,18821255,18822394,18823576,18825075,18826523,18827954,18829841,18831747,18833638,18835547,18837437,18839346,18841245,18843172,18844869,18846463,18847987,18849489,18850978,18852372,18853237,18854212,18855002,18855914,18856700,18857678,18858362,18859267,18860153,18861170,18861921,18862809,18863720,18864720,18865697,18866603,18867979,18869207,18870543,18871832,18872695,18873056,18873637,18874107,18874556,18874816,18875306,18875932,18877284,18878242,18879068,18879857,18880965,18882296,18883040,18884372,18885183,18885367,18885827,18886091,18886421,18887756,18889132,18890638,18892299,18894148,18895876,18897690,18899518,18901319,18903088,18904843,18906629,18908396,18910038,18911673,18913246,18914864,18916453,18918102,18919700,18921337,18922738,18924051,18925371,18926695,18928289,18929966,18931630,18933299,18934947,18936635,18938276,18939952,18941635,18943309,18944982,18946651,18947618,18949172,18950996,18952862,18954632,18956425,18958222,18960105,18961936,18963709,18965351,18966804,18968274,18969721,18971354,18973214,18975055,18976918,18978773,18980633,18982505,18984353,18986214,18988064,18989138,18990891,18992138,18993242,18994501,18995566,18996736,18998784,19000791,19002769,19004688,19006646,19008600,19010499,19012403,19014292,19016255,19018204,19020153,19022056,19023980,19025868,19027792,19029801,19031593,19033258,19035024,19036829,19038645,19040442,19042131,19043740,19045596,19047650,19049700,19051752,19053793,19055831,19057874,19059917,19061971,19064028,19066079,19068121,19070164,19072218,19074260,19076299,19078338,19080393,19082261,19084177,19086033,19087883,19089705,19091563,19093413,19095282,19097233,19099131,19100998,19102845,19104705,19106533,19108401,19110238,19112181,19113497,19114983,19115775,19116625,19117409,19118136,19118850,19119371,19120184,19121083,19121875,19122264,19122942,19123715,19124588,19125235,19125642,19126395,19127233,19128131,19128626,19129125,19129913,19130743,19131647,19132211,19132690,19133928,19134975,19136095,19136612,19137256,19138424,19139517,19140583,19140963,19141839,19142977,19144014,19144942,19145333,19146403,19147549,19148646,19149365,19150754,19152042,19153641,19154945,19156702,19158113,19159106,19160243,19161379,19162516,19163673,19164768,19165868,19166994,19168184,19169303,19170476,19171652,19172741,19173805,19174840,19176017,19177447,19178573,19179687,19180905,19181970,19183047,19184165,19185204,19186189,19187202,19188115,19189129,19190168,19191014,19191871,19192661,19193513,19194855,19195275,19195823,19196336,19196895,19197444,19197911,19198480,19199040,19199498,19200017,19200490,19200995,19201494,19202024,19202583,19203095,19204530,19205987,19207497,19208979,19210529,19212036,19213546,19215081,19216597,19217738,19218703,19219692,19221155,19222721,19224103,19225499,19226828,19228187,19229661,19231396,19233045,19234713,19236367,19237974,19239593,19241251,19242891,19244554,19246249,19247742,19249194,19250741,19252209,19253734,19255239,19256696,19258282,19259307,19260472,19261710,19263050,19264382,19265694,19267014,19268141,19269522,19270952,19272337,19273783,19275336,19276858,19278397,19279958,19281655,19283009,19284024,19285154,19286322,19287459,19288589,19289673,19290785,19291878,19293029,19294145,19295365,19296556,19297647,19298686,19299737,19300996,19302352,19303467,19304557,19305773,19306828,19307877,19308979,19309997,19311007,19312038,19312919,19313953,19314973,19315819,19316642,19317445,19318311,19319606,19320031,19320585,19321084,19321647,19322186,19322669,19323241,19323786,19324254,19324760,19325238,19325734,19326233,19326756,19327326,19327845,19329580,19331388,19333179,19334989,19336786,19338564,19340295,19342061,19343460,19344887,19346268,19347660,19349295,19350541,19351762,19352977,19354504,19355961,19357295,19358585,19360114,19361431,19362442,19363455,19364451,19365911,19367592,19369051,19370734,19372413,19373778,19374939,19376109,19377314,19378768,19380111,19381828,19383488,19385089,19386780,19388481,19390066,19391741,19393373,19395067,19396242,19397659,19399085,19400607,19402555,19404238,19406209,19407993,19409692,19411339,19413051,19414775,19416397,19418148,19419906,19421606,19423190,19424680,19426214,19427764,19429332,19430843,19432426,19433694,19435433,19437060,19438673,19440264,19441833,19443398,19444973,19446580,19448363,19449843,19451590,19453387,19454880,19456283,19458020,19459813,19461397,19463106,19464187,19465270,19466388,19467557,19468707,19469858,19470924,19472084,19473192,19474347,19475468,19476674,19477835,19478920,19479992,19481089,19482399,19483433,19484699,19485814,19486680,19487372,19488466,19489666,19490744,19491717,19492659,19493884,19495013,19495966,19496515,19497668,19498884,19500052,19501046,19501958,19503201,19504321,19505301,19505783,19506935,19508176,19509379,19510319,19511146,19512302,19513413,19514448,19514873,19516096,19517290,19518442,19519401,19520130,19521244,19522417,19523502,19523913,19525051,19526227,19527369,19528280,19529634,19530790,19531868,19533031,19534085,19535132,19536259,19537278,19538275,19539299,19540194,19541234,19542258,19543105,19543935,19544758,19545646,19546630,19547810,19549017,19550218,19550563,19551554,19552801,19553890,19554822,19556088,19557224,19558452,19559613,19560838,19562019,19563127,19564364,19565557,19566886,19568002,19569136,19570322,19571515,19572776,19573896,19575050,19576286,19577384,19578723,19579914,19580926,19581947,19583086,19584407,19585513,19586531,19587540,19588682,19590034,19591118,19592098,19593156,19594447,19595664,19596735,19597714,19598810,19600287,19600996,19601482,19602046,19603291,19604848,19606587,19608458,19610338,19612154,19613768,19615172,19615724,19616234,19616749,19617266,19617826,19618726,19620054,19621105,19622378,19623889,19625076,19626150,19627594,19628963,19630032,19631284,19632780,19633988,19635066,19636474,19638272,19640143,19641877,19643608,19645506,19647184,19648992,19650883,19652584,19654463,19656266,19658108,19659813,19661664,19663413,19665190,19667080,19668831,19670558,19672441,19674176,19675991,19677784,19679537,19681465,19683207,19685039,19686775,19688673,19690407,19692271,19694025,19695763,19697677,19699345,19701168,19703060,19704811,19706555,19708364,19710196,19711910,19713768,19715621,19717349,19719251,19720972,19722723,19724620,19726368,19728121,19729925,19731685,19733599,19735423,19737257,19738932,19740842,19742584,19744422,19746204,19747953,19749835,19751576,19753407,19755234,19757032,19758780,19760604,19762475,19764177,19765929,19767812,19769519,19771429,19773194,19774953,19776357,19777546,19778790,19779980,19781259,19782418,19783630,19784762,19785812,19786374,19787169,19788043,19788838,19789228,19789924,19790719,19791570,19792200,19792608,19793358,19794209,19795104,19795561,19796086,19796879,19797707,19798643,19799248,19800720,19801700,19802872,19804021,19805149,19806305,19807404,19808484,19809589,19810747,19811881,19813058,19814224,19815358,19816455,19817521,19818624,19820152,19821635,19823244,19824318,19825415,19826610,19827694,19828790,19829897,19830958,19831971,19832985,19833849,19834870,19835917,19836827,19837714,19838497,19839378,19840814,19842245,19843730,19844973,19845409,19845973,19846460,19847016,19847564,19848044,19848595,19849130,19849604,19850119,19850611,19851104,19851618,19852143,19852727,19853255,19854899,19856552,19858236,19859786,19861498,19863131,19864796,19866465,19868173,19869862,19871629,19873273,19874905,19876510,19878183,19879755,19880762,19881249,19882238,19882868,19883295,19883608,19884453,19885471,19887510,19889545,19891554,19893575,19895590,19897597,19899574,19901551,19903572,19905596,19907611,19909646,19911655,19913682,19915703,19917672,19919694,19921092,19922436,19924001,19925529,19926933,19928231,19929538,19930659,19931779,19932904,19934028,19935155,19936277,19937126,19937196,19938020,19940010,19942058,19943920,19945795,19947708,19949564,19951399,19953296,19955200,19957060,19959021,19960933,19962870,19964812,19966676,19968592,19970512,19972436,19974311,19976097,19978099,19979978,19981867,19983789,19985686,19987550,19989311,19991124,19992886,19994790,19996691,19998587,20000464,20002327,20004206,20006113,20008030,20009872,20011882,20013653,20015537,20017398,20019314,20021160,20022828,20024238,20024491,20025066,20025695,20026361,20026983,20027562,20028160,20028894,20029642,20030291,20031073,20031906,20032882,20033501,20034363,20034586,20035699,20036028,20036426,20037974,20038669,20039665,20039907,20040251,20040588,20041502,20043084,20044541,20046133,20047772,20049368,20050930,20052370,20053874,20055489,20057096,20058730,20060331,20061804,20063392,20064954,20066478,20068210,20069732,20071428,20073007,20074504,20076361,20078212,20080004,20081768,20083596,20085464,20087300,20089140,20090994,20092728,20094066,20095344,20096699,20098063,20099396,20100716,20102030,20103471,20104991,20106465,20107931,20109396,20110886,20112328,20113791,20115219,20116828,20118287,20119731,20121161,20122626,20124131,20125618,20127051,20128523,20130136,20131604,20133058,20134531,20136024,20137493,20138957,20140390,20141984,20143452,20144864,20146286,20147724,20149209,20150658,20152078,20153488,20155093,20156462,20157868,20159283,20160774,20162232,20163645,20165075,20166689,20168116,20169508,20170874,20172341,20173818,20175246,20176659,20178066,20179672,20181057,20182421,20183849,20185309,20186786,20188193,20189572,20191161,20192622,20194012,20195462,20196951,20198422,20199894,20201338,20202760,20204403,20205854,20207271,20208734,20210220,20211704,20213145,20214600,20216079,20217570,20218907,20220219,20221599,20222969,20224351,20225660,20226926,20228489,20229840,20231160,20232524,20233915,20235277,20236625,20237948,20239233,20240769,20242083,20243375,20244712,20246035,20247369,20248687,20249943,20251518,20252971,20254410,20255865,20257351,20258843,20260310,20261753,20263151,20264790,20266198,20267596,20269088,20270583,20272074,20273521,20274908,20276534,20277957,20279322,20280704,20282166,20283637,20285054,20286512,20287906,20289517,20290940,20292322,20293754,20295227,20296689,20298110,20299484,20300992,20302516,20303893,20305288,20306729,20308230,20309680,20311102,20312518,20314126,20315590,20316991,20318422,20319860,20321326,20322765,20324175,20325559,20327391,20329155,20330979,20332703,20334568,20336161,20337912,20339709,20341547,20343381,20345151,20346780,20348506,20350295,20352053,20353792,20355588,20357435,20359255,20361136,20362960,20364852,20366692,20368594,20370439,20372325,20374158,20375983,20377743,20379563,20381389,20383178,20384947,20386760,20388694,20390487,20392268,20393994,20395772,20397498,20399271,20400993,20402794,20404650,20406462,20408242,20409994,20411775,20413523,20415265,20417037,20418995,20420874,20422697,20424519,20426333,20428127,20429972,20431764,20433564,20435446,20437172,20438962,20440699,20442435,20444160,20445920,20447692,20449541,20451338,20453175,20454998,20456815,20458638,20460400,20462170,20463964,20465772,20467566,20469318,20471075,20472701,20474322,20476071,20477803,20479418,20481241,20483030,20484748,20486527,20488181,20489831,20491471,20493169,20494976,20496856,20498516,20500113,20501740,20503400,20505095,20506778,20508447,20510111,20511875,20513561,20515190,20516838,20518548,20520239,20521930,20523608,20525417,20527227,20528984,20530759,20532554,20534388,20536178,20538022,20539802,20541643,20543429,20545103,20546853,20548649,20550444,20552212,20553978,20555845,20557598,20559420,20561300,20563169,20565048,20566987,20568883,20570689,20572491,20574164,20575861,20577585,20579346,20581091,20582895,20584621,20586415,20588139,20589803,20591623,20593429,20595225,20597077,20598892,20600600,20602317,20603720,20605239,20606745,20608259,20609774,20611294,20612795,20614358,20616408,20618368,20620292,20622296,20624295,20626231,20628225,20630157,20632067,20634032,20636017,20638020,20639988,20641933,20643943,20645931,20647948,20649541,20650002,20650040,20650080,20650120,20650439,20650479,20650517,20650557,20651270,20653132,20654916,20656743,20658592,20660408,20662228,20663996,20665845,20667612,20669074,20670541,20671982,20673432,20674870,20676294,20677724,20679320,20681156,20682990,20684791,20686550,20688330,20690110,20691876,20693680,20694866,20695668,20695708,20695748,20695787,20696081,20696117,20696157,20696197,20696236,20697337,20698455,20700217,20701943,20703680,20705438,20707192,20708905,20710616,20712363,20714131,20715949,20717016,20718257,20719709,20720894,20721774,20723350,20724774,20725998,20727077,20728891,20730499,20732152,20732625,20732658,20732698,20732738,20733057,20733097,20733129,20733169,20733725,20735146,20736571,20737773,20738970,20740662,20742316,20743934,20745637,20747326,20748993,20750669,20752278,20753843,20753883,20753921,20753961,20754001,20755115,20755423,20755537,20756782,20758635,20760649,20762371,20764027,20765629,20767281,20768968,20770629,20772336,20774070,20775747,20777480,20779229,20780982,20782718,20784433,20786145,20787837,20789585,20790640,20791741,20792096,20793190,20795009,20796762,20798481,20800220,20801941,20803745,20805413,20807159,20809029,20810877,20812712,20814594,20816365,20818293,20820082,20821939,20823822,20825661,20827343,20828992,20830736,20832391,20834203,20835994,20837703,20839585,20841366,20843340,20845114,20847070,20848873,20850815,20852678,20854559,20856497,20857742,20858897,20860032,20861041,20862263,20863681,20865029,20866400,20867747,20869146,20870291,20871448,20872543,20873670,20874814,20876074,20877717,20878379,20879233,20880160,20881195,20882600,20884307,20885418,20886193,20886857,20887679,20889177,20890795,20892538,20894095,20894923,20896270,20897920,20899276,20900508,20901465,20902240,20903189,20903919,20904419,20905302,20906513,20907894,20909087,20910342,20911691,20913049,20914457,20915755,20917179,20919101,20921004,20922880,20924811,20926649,20928527,20930427,20932320,20934171,20936069,20938005,20939949,20941776,20943668,20945553,20947497,20948696,20949631,20950556,20951536,20953110,20955072,20956776,20958698,20960581,20961717,20962937,20964128,20965366,20967376,20969393,20971390,20973416,20975357,20977275,20979169,20981060,20983008,20985051,20987089,20989127,20991169,20992928,20994746,20996528,20998362,21000175,21001970,21003678,21005487,21007336,21009289,21011224,21013153,21015129,21016716,21017996,21019310,21020937,21022233,21023388,21024647,21025925,21027251,21028422,21029699,21030928,21032531,21033922,21035134,21036304,21038020,21039611,21040398,21041198,21042760,21044408,21045260,21046004,21047304,21048581,21049670,21050450,21051415,21052984,21054589,21055954,21057356,21058962,21060806,21062553,21064349,21066131,21067964,21069722,21071579,21073431,21075242,21076901,21078570,21080236,21081985,21083753,21085561,21087378,21089110,21090730,21092159,21093575,21095003,21096568,21098012,21099444,21100883,21102484,21104011,21105460,21106966,21108506,21110074,21111580,21113045,21114587,21116501,21118485,21120433,21122357,21124373,21126353,21128331,21130302,21132305,21134066,21135842,21137596,21139356,21141148,21142719,21144260,21145831,21147724,21149639,21151437,21153343,21155274,21157048,21158879,21160645,21162485,21164434,21166298,21168152,21170051,21171968,21173782,21175564,21177382,21179283,21180715,21182208,21183792,21185392,21186605,21187838,21189440,21190730,21191897,21193160,21194367,21196086,21197214,21198462,21199762,21201636,21203414,21205202,21206970,21208772,21210579,21212383,21214160,21215965,21217846,21219677,21221477,21223286,21224738,21225608,21226460,21227272,21228237,21229382,21230565,21231709,21232894,21234187,21235397,21236585,21237809,21239133,21240523,21241931,21243237,21244841,21246680,21248549,21250392,21252274,21254125,21255924,21257780,21259604,21261559,21263460,21265396,21267309,21269248,21271163,21273088,21275047,21276942,21278775,21280634,21282460,21284185,21286049,21287856,21289570,21291161,21292808,21294598,21296451,21298304,21300194,21302086,21303882,21305776,21307652,21309118,21310580,21311980,21313505,21315056,21316651,21318438,21320004,21321563,21323201,21324845,21326562,21328240,21329998,21331744,21333534,21335329,21337220,21339274,21341327,21343280,21345247,21347220,21349208,21351185,21353175,21355112,21357075,21358994,21360907,21362011,21363343,21364726,21365769,21367517,21369308,21371049,21372808,21374537,21376043,21377688,21379210,21380856,21382626,21384397,21386172,21387903,21389774,21391552,21393365,21395124,21396906,21398602,21400315,21402048,21403681,21405369,21407188,21408977,21410613,21411778,21412807,21413858,21415013,21416354,21417254,21418154,21419048,21420339,21421284,21422503,21423435,21424741,21425259,21425949,21426397,21427018,21427986,21428709,21429522,21430211,21430978,21432160,21433361,21434558,21435565,21436889,21438269,21439716,21441140,21442435,21443891,21445486,21447129,21448480,21449905,21451556,21453048,21454519,21456245,21457857,21459514,21461001,21461204,21461428,21461619,21462012,21462778,21463279,21463706,21464177,21465943,21467978,21470026,21472078,21474128,21476162,21478202,21480241,21482258,21484240,21486175,21488115,21490050,21491928,21493839,21495771,21497687,21499387,21500812,21502161,21503669,21505120,21506248,21507453,21508585,21509667,21511108,21512566,21513960,21515397,21517151,21518996,21520820,21522644,21524530,21526387,21528177,21529964,21531865,21533669,21535404,21537146,21538918,21540602,21542376,21544180,21545871,21547474,21548869,21550360,21551796,21553281,21554706,21556152,21557721,21559148,21561004,21562848,21564709,21566592,21568170,21569398,21570618,21571820,21573460,21575313,21577103,21578876,21580735,21582122,21583551,21585019,21586440,21588391,21590428,21592454,21594476,21596517,21598516,21600521,21602492,21604465,21605990,21607484,21608965,21610458,21612204,21613876,21615530,21617211,21619180,21621147,21623131,21625115,21627120,21628852,21630560,21632271,21634092,21636140,21638186,21640238,21642291,21643775,21645068,21646098,21646628,21647154,21647685,21648470,21649676,21651137,21652605,21653765,21655007,21656518,21657919,21659312,21660624,21662174,21663671,21665290,21666741,21668138,21669825,21671552,21673364,21675211,21676827,21678056,21679391,21680642,21682005,21682945,21683946,21684968,21686099,21686960,21687876,21688867,21689890,21690897,21692896,21694864,21696811,21698757,21700791,21702802,21704774,21706788,21708752,21710308,21711794,21713428,21715142,21716785,21718450,21720140,21721768,21723570,21725069,21726589,21728198,21730042,21731641,21733373,21735047,21736730,21738251,21739948,21741516,21742980,21744423,21746029,21747573,21748997,21750872,21752778,21754638,21756496,21758383,21760275,21762140,21764003,21765904,21767519,21769036,21770461,21772127,21774107,21776085,21778054,21780055,21782051,21783866,21785661,21787460,21789291,21791161,21793092,21795021,21796847,21798216,21799696,21801131,21802480,21803973,21805473,21807001,21808480,21810000,21811553,21813309,21814997,21816591,21818073,21819676,21821175,21822656,21824413,21826136,21827775,21829512,21831187,21832923,21834583,21836352,21838023,21839692,21841228,21842921,21844608,21846259,21847910,21849438,21851126,21852711,21854290,21855842,21857327,21858838,21860622,21861989,21863729,21865393,21866868,21868377,21869908,21871435,21872952,21874467,21876119,21877734,21879052,21880371,21881733,21883245,21884859,21886700,21888104,21889652,21891329,21892789,21894535,21896282,21897973,21899619,21901199,21902499,21903719,21904958,21906262,21907625,21908840,21910180,21911921,21913278,21914738,21916021,21917387,21918508,21919671,21920935,21922121,21923433,21924841,21926251,21927616,21929051,21930636,21931850,21933132,21934709,21936443,21938294,21939960,21941322,21942473,21943478,21944384,21945278,21946352,21947523,21948770,21950061,21951493,21953133,21954709,21956347,21958205,21959674,21960844,21961822,21962840,21963810,21964502,21965379,21966683,21967815,21969100,21970350,21971623,21972916,21974402,21976085,21977816,21979692,21981532,21983316,21985090,21986813,21988199,21989462,21990665,21991988,21993250,21994578,21995907,21997171,21998419,21999701,22000987,22002284,22003589,22005333,22006913,22008619,22010211,22011729,22013180,22014848,22016492,22018142,22019538,22020749,22021917,22023219,22024501,22025743,22027182,22028650,22030521,22031968,22033212,22034600,22035829,22037099,22038196,22039450,22040851,22042470,22044176,22045836,22047448,22048877,22050268,22051724,22053040,22054867,22056320,22057745,22058989,22060210,22061480,22062632,22063882,22065270,22066943,22068649,22070356,22072023,22073532,22075169,22076897,22078408,22080085,22081629,22082601,22082858,22083917,22085489,22086497,22086754,22087748,22089310,22090302,22090559,22091564,22093119,22094123,22094372,22095363,22096906,22097941,22098193,22099138,22100676,22101708,22101960,22102819,22104075,22105357,22106648,22108058,22109390,22110619,22111952,22113209,22114633,22115938,22117260,22118537,22119983,22121282,22122572,22123882,22125199,22126656,22128041,22129278,22130575,22131806,22133060,22134336,22135575,22136845,22138387,22139534,22140681,22141937,22143153,22144365,22145562,22146752,22147947,22149448,22150712,22151943,22153254,22154492,22155752,22156996,22158257,22159876,22161601,22163338,22165095,22166749,22168411,22170120,22171910,22173768,22174954,22176292,22177588,22179012,22180298,22181715,22182968,22184313,22185667,22187017,22188379,22189736,22191072,22192475,22193849,22195221,22197061,22198740,22200352,22201926,22203593,22205154,22206671,22208151,22209412,22210796,22212190,22213634,22215218,22216744,22218188,22219702,22221396,22223318,22224991,22226588,22228148,22229805,22231355,22232948,22234451,22235717,22237140,22238486,22239903,22241452,22242939,22244425,22245935,22247604,22249515,22251189,22252813,22254392,22256062,22257637,22259220,22260746,22262030,22263419,22264770,22266152,22267683,22269170,22270683,22272188,22273841,22275694,22277424,22279029,22280659,22282266,22283841,22285429,22286907,22288222,22289576,22290959,22292338,22293861,22295361,22296910,22298375,22299976,22301790,22303279,22304481,22305611,22306572,22307431,22308371,22309454,22310400,22311527,22312718,22313990,22315221,22316218,22317182,22318220,22319285,22320435,22322034,22323257,22324440,22325483,22326326,22327253,22328325,22329351,22330465,22331603,22332876,22334086,22335144,22336048,22337089,22338121,22339210,22341196,22343118,22345011,22346946,22348912,22350909,22352835,22354771,22356648,22358471,22360250,22362055,22363961,22365869,22367821,22369762,22371718,22373185,22375163,22377089,22379054,22381048,22383025,22384980,22386954,22388927,22390824,22392573,22394335,22396116,22397893,22399644,22401478,22403251,22404981,22406761,22408524,22410310,22412062,22413772,22415497,22417510,22419456,22421336,22423220,22425125,22427093,22428617,22429337,22430240,22432231,22434201,22436215,22438193,22440126,22442107,22444093,22446058,22448058,22450007,22451952,22453927,22455907,22457885,22459834,22461793,22463747,22465516,22467082,22468644,22470226,22471790,22473370,22474916,22476489,22478169,22479957,22481592,22483298,22484865,22486538,22488382,22490190,22492032,22493844,22495492,22497028,22498583,22500047,22501756,22503403,22505137,22506709,22508458,22510085,22511789,22513476,22515249,22517085,22518919,22520759,22522636,22524465,22526123,22527823,22529398,22531220,22533046,22534871,22536702,22538546,22540082,22541691,22543276,22544816,22546489,22548160,22549898,22551550,22553305,22555023,22556817,22558542,22560361,22561911,22563490,22565182,22566914,22568566,22570130,22571983,22573587,22575371,22577039,22578853,22580508,22582206,22583792,22585463,22587177,22588700,22590225,22591970,22593614,22595245,22596593,22598231,22600169,22601941,22602978,22604876,22606800,22608401,22610133,22611691,22613718,22615722,22617737,22619486,22620893,22622144,22623345,22624645,22625841,22627398,22628996,22630589,22632094,22633517,22635006,22636495,22638005,22639565,22641010,22642219,22643201,22644102,22645094,22646457,22647552,22648541,22649702,22650759,22652554,22654374,22656244,22658123,22659928,22661772,22663546,22665338,22667318,22669053,22670612,22672256,22673921,22675629,22677404,22679161,22680849,22682701,22684535,22686420,22688287,22690064,22691939,22693706,22695515,22697470,22699280,22700888,22702546,22704206,22705957,22707735,22709538,22711219,22713065,22714854,22716751,22718545,22720469,22722244,22724189,22725975,22727901,22729881,22731751,22733747,22735712,22737611,22739555,22741551,22743481,22745502,22747344,22749026,22750801,22752629,22754418,22756240,22758092,22759928,22761599,22763203,22764478,22765802,22767465,22769033,22770664,22771793,22772998,22774084,22775154,22775511,22775854,22777148,22778411,22779707,22781004,22782329,22783768,22785065,22786374,22787649,22789108,22790465,22791761,22793125,22794395,22795829,22797189,22798474,22799841,22801148,22802606,22804200,22805285,22806783,22808148,22810053,22811970,22813943,22815989,22818022,22820030,22822023,22823969,22825952,22827567,22829143,22830687,22832182,22833915,22835475,22837218,22838939,22840495,22842246,22844020,22845615,22847394,22848947,22850539,22852173,22853815,22855471,22857283,22859196,22861095,22862901,22864526,22866266,22868102,22870034,22871966,22873822,22875483,22877254,22879101,22881023,22882836,22884588,22886246,22888117,22890038,22891939,22893816,22895417,22897207,22899123,22901079,22903014,22904922,22906620,22908339,22910248,22912132,22914001,22915759,22917027,22918004,22919004,22919997,22921416,22922915,22924514,22926106,22927753,22929375,22931067,22932699,22934313,22935932,22937750,22939446,22941189,22942926,22944543,22946246,22947868,22949504,22951178,22952892,22954824,22956548,22958250,22959995,22961703,22963469,22965200,22966801,22968532,22970195,22971948,22973599,22975205,22976902,22978530,22980060,22982044,22983939,22985805,22987728,22989679,22991612,22993480,22995173,22996933,22998578,23000245,23002032,23003973,23005827,23007729,23009623,23011525,23013517,23015445,23017396,23019336,23021257,23023070,23024853,23026638,23028439,23030343,23032298,23034180,23036058,23037984,23039882,23041738,23043590,23045216,23046584,23047849,23049284,23050971,23052569,23054220,23055848,23057772,23059647,23061494,23063342,23065194,23067029,23068855,23070734,23072609,23074488,23076379,23078298,23079042,23079605,23080221,23081263,23082263,23083260,23084601,23085856,23087142,23088158,23089957,23091651,23093282,23094837,23096600,23098171,23099820,23101515,23103076,23104583,23106209,23107663,23108960,23110239,23111827,23113500,23115163,23116878,23118598,23120317,23122003,23123606,23125305,23126649,23128022,23129563,23131018,23132551,23134000,23135522,23136950,23138447,23139828,23141193,23142507,23144381,23146187,23148014,23149887,23151753,23153605,23155470,23157274,23159163,23160981,23162792,23164636,23166547,23168453,23170329,23172185,23174058,23176053,23178060,23180022,23181935,23183839,23185719,23187659,23189574,23191506,23193403,23195340,23197235,23199105,23200958,23202841,23204747,23206623,23208368,23209846,23211322,23212944,23214576,23216184,23217794,23219430,23221054,23222684,23224321,23225921,23227672,23229319,23230969,23232627,23234284,23235910,23237566,23239211,23240954,23242603,23244256,23245888,23247547,23249169,23250808,23252453,23254091,23256010,23257870,23259753,23261574,23263435,23265286,23267128,23268991,23270841,23272767,23274634,23276462,23278299,23280134,23281981,23283828,23285674,23287639,23289511,23291351,23293208,23295076,23296921,23298758,23300638,23302508,23304055,23305451,23306878,23308298,23309604,23311052,23312444,23314022,23315389,23316706,23318199,23319664,23321095,23322515,23324393,23326273,23328109,23329922,23331724,23333565,23335403,23337303,23339255,23340878,23342621,23344338,23346020,23347727,23349356,23351206,23352769,23354497,23356098,23357818,23359574,23361296,23363025,23364797,23366506,23368128,23369770,23371668,23373496,23375329,23377183,23378782,23380627,23382475,23384329,23386164,23388033,23389672,23391424,23393192,23394959,23396758,23398487,23400153,23401916,23403587,23405278,23407104,23408693,23410434,23412185,23413979,23415718,23417497,23419201,23420876,23422573,23424188,23425867,23427586,23428918,23430125,23431411,23432637,23433881,23435158,23436308,23437716,23439381,23440913,23442402,23444047,23445720,23447267,23448832,23450420,23451952,23453532,23455067,23456647,23458528,23460401,23462320,23464185,23466073,23467719,23469303,23470727,23472384,23474132,23475929,23477718,23479423,23481178,23482653,23484127,23485830,23487532,23489309,23490773,23492138,23493647,23495508,23497423,23498896,23500356,23501964,23503403,23504948,23506499,23507946,23509626,23511133,23512592,23514122,23515634,23517119,23518712,23520156,23521623,23523184,23524657,23526259,23527742,23529239,23530740,23532389,23533945,23535395,23536936,23538289,23539776,23541200,23542727,23544629,23546476,23548320,23550098,23551914,23553721,23555483,23557209,23558908,23560490,23562287,23563976,23565740,23567528,23569135,23570908,23572692,23574316,23576201,23578137,23579993,23581869,23583772,23585515,23587438,23589141,23590893,23592636,23594251,23596005,23597746,23599529,23601131,23602882,23604640,23606403,23608084,23609879,23611522,23613378,23615066,23616723,23618395,23620040,23621753,23623470,23625301,23626940,23628630,23630297,23632095,23633781,23635512,23637177,23638888,23640610,23642386,23643893,23645317,23646987,23648743,23650411,23652145,23653911,23655506,23656981,23658569,23660088,23661593,23662994,23664514,23666021,23667565,23669224,23671014,23672694,23674450,23676230,23677892,23679576,23681319,23682948,23684561,23686262,23687891,23689602,23691197,23692806,23694438,23696147,23697789,23699428,23701027,23702724,23704357,23706008,23707657,23709302,23711007,23712628,23714280,23715902,23717581,23719199,23720839,23722467,23724183,23725818,23727456,23729105,23730773,23732454,23734096,23735705,23737303,23739062,23740691,23742400,23744109,23745899,23747532,23749163,23750794,23752535,23754153,23755768,23757473,23759163,23760959,23762559,23764172,23765813,23767525,23769191,23771077,23772826,23774488,23776129,23777918,23779695,23781321,23783052,23784878,23786677,23788376,23790305,23792165,23794033,23795983,23797986,23799919,23801873,23803831,23805824,23807532,23809396,23811340,23813322,23815326,23817330,23819326,23821140,23823084,23824898,23826710,23828631,23830639,23832663,23834669,23836670,23838645,23840564,23842523,23844436,23846308,23848213,23850130,23852076,23854024,23855981,23857775,23859659,23861564,23863455,23865312,23867040,23868645,23870277,23872233,23874009,23875829,23877381,23878995,23880623,23882245,23883810,23885610,23887028,23888443,23889761,23891128,23892502,23894015,23895546,23896855,23898303,23899847,23901298,23902712,23904178,23905659,23907174,23908663,23910112,23911792,23913556,23915353,23917006,23918739,23920442,23922199,23923917,23925593,23927303,23928992,23930745,23932388,23934053,23935711,23937383,23939042,23940737,23942410,23944075,23945718,23947466,23949163,23950817,23952456,23954185,23955809,23957455,23959106,23960870,23962786,23964667,23966570,23968503,23970394,23972312,23974187,23976086,23977997,23979777,23981558,23983355,23985297,23987301,23989279,23991331,23993378,23995418,23997466,23999483,24001513,24003555,24005598,24007637,24009677,24011734,24013782,24015810,24017852,24019891,24021714,24023563,24025438,24027357,24029276,24031169,24033034,24034930,24036639,24038092,24039589,24040974,24042659,24044272,24045907,24047435,24049022,24050669,24052237,24053849,24055380,24056810,24058358,24059965,24061529,24063064,24064753,24066176,24067563,24069106,24070532,24072302,24074170,24075948,24077677,24079337,24080991,24082836,24084683,24086564,24088397,24090198,24091972,24093641,24095460,24097315,24099093,24100747,24102750,24104746,24106755,24108664,24110569,24112500,24114087,24115763,24117507,24119238,24120957,24122725,24124531,24126271,24127920,24129695,24131388,24133071,24134747,24136352,24137892,24139416,24140918,24142428,24143975,24145498,24147029,24148525,24150079,24151590,24153091,24154625,24156115,24157668,24159195,24160696,24162182,24163656,24164988,24166279,24167576,24168793,24170748,24172700,24174615,24176505,24178443,24180392,24182335,24184260,24186095,24187426,24188710,24190011,24191334,24192666,24193988,24195278,24196729,24198352,24199814,24201285,24202900,24204558,24206022,24207615,24209175,24210908,24212599,24214265,24215959,24217572,24219266,24220910,24222570,24224293,24225896,24227123,24228384,24229693,24230968,24232274,24233558,24234743,24236228,24237456,24238524,24239563,24240671,24241882,24243055,24244066,24245465,24246938,24248214,24249521,24250746,24252005,24253247,24254521,24255891,24257207,24258740,24260045,24261341,24262725,24264058,24265378,24266662,24268007,24269768,24271349,24272977,24274711,24276414,24278023,24279531,24280743,24282678,24284666,24286108,24287165,24288419,24289587,24290934,24292032,24293640,24295610,24297523,24299092,24300849,24302691,24304497,24306230,24307811,24309755,24310846,24311289,24311887,24312384,24312931,24313468,24313988,24314452,24315339,24315805,24316961,24318276,24319701,24321040,24322220,24323332,24323752,24324624,24325242,24326656,24328123,24329636,24331153,24332556,24333552,24334241,24335635,24336748,24338171,24339326,24340807,24342159,24343350,24344530,24346359,24348138,24349848,24351581,24353401,24353612,24353741,24354959,24355480,24356116,24356792,24357347,24357851,24358616,24359210,24359735,24361037,24361950,24362909,24364345,24365764,24367159,24368567,24369984,24371554,24373138,24374842,24376431,24378054,24379604,24381205,24383055,24384606,24385709,24386844,24388032,24389283,24390617,24391894,24393195,24394454,24395898,24397433,24399046,24400670,24402364,24403934,24405306,24406691,24408069,24408859,24408884,24408913,24408938,24409483,24410102,24411392,24412023,24413537,24415169,24416852,24418461,24420089,24421240,24422924,24424418,24426001,24427529,24429260,24431174,24433121,24435029,24436986,24438887,24440556,24441426,24442589,24444083,24445383,24446328,24447288,24448552,24449864,24451285,24452715,24454194,24455741,24457299,24458942,24460656,24462401,24463944,24465541,24467047,24468612,24470211,24471722,24473275,24475007,24477058,24479106,24481145,24483154,24485038,24486992,24489019,24490964,24492712,24494649,24496529,24498481,24500489,24502529,24504521,24506561,24508557,24510585,24512566,24514599,24516645,24518641,24520353,24522225,24524218,24526256,24528256,24530173,24531843,24533406,24534635,24535857,24537035,24538517,24540510,24542403,24544126,24545885,24547777,24549652,24551406,24553192,24554965,24556827,24558768,24560737,24562697,24564667,24566631,24568591,24570602,24572450,24573986,24575533,24577093,24578602,24580102,24581683,24583190,24584709,24586093,24587486,24588804,24590128,24591442,24592761,24594120,24595707,24597723,24599730,24601724,24603691,24605696,24607643,24609579,24611524,24613540,24615356,24617082,24618739,24620408,24622121,24623782,24624998,24625216,24625732,24626979,24628275,24629550,24630502,24631557,24632492,24633593,24634781,24636436,24638137,24639705,24641424,24643165,24644835,24646363,24647957,24649505,24651131,24652669,24654277,24655763,24657236,24658452,24659808,24660910,24662084,24663340,24664659,24665899,24667275,24668706,24670248,24671831,24673431,24674866,24676315,24677728,24678957,24679914,24681033,24682622,24684127,24684827,24686037,24687289,24688676,24690176,24691637,24693140,24694601,24695785,24697089,24698530,24700054,24701769,24703497,24705348,24707166,24708955,24710740,24712305,24713946,24715545,24717189,24718773,24720383,24721882,24723454,24724971,24726421,24727648,24729059,24730578,24732142,24733516,24734900,24736292,24737724,24739092,24740307,24740832,24741494,24741928,24742733,24744149,24745687,24747235,24748770,24750196,24751674,24753225,24754686,24756051,24757377,24758522,24759704,24761036,24762439,24763949,24765283,24766362,24767172,24767458,24768445,24770187,24772091,24773887,24775653,24777214,24778573,24779602,24780790,24782329,24783908,24785479,24787040,24788604,24790177,24791719,24793464,24795213,24797042,24798754,24800588,24802351,24804241,24805990,24807704,24809101,24810519,24811871,24813282,24814709,24816234,24817896,24819610,24821147,24822709,24824211,24825687,24827225,24828774,24830246,24831931,24833842,24835626,24837175,24838379,24839107,24839952,24840810,24842028,24843532,24845126,24846792,24848519,24850007,24851614,24852937,24854285,24855513,24856464,24857033,24857873,24858680,24859552,24860165,24861192,24862606,24863762,24864265,24864817,24865302,24866372,24868135,24869755,24870846,24871972,24872978,24874177,24875571,24876914,24877999,24879152,24880101,24881181,24882624,24884095,24885538,24886968,24888403,24889980,24891660,24893433,24895070,24896882,24898751,24900563,24902124,24903486,24904491,24905672,24906832,24908042,24909009,24910023,24910888,24912047,24913037,24914220,24915450,24916559,24917008,24917581,24918206,24918880,24919364,24919911,24920513,24921171,24921641,24922210,24922829,24923534,24924051,24924643,24925259,24925915,24926329,24926832,24927397,24928542,24930406,24932038,24933074,24934213,24935241,24936375,24937401,24938487,24939599,24940988,24942777,24944404,24946101,24947813,24949459,24951124,24952847,24954367,24955509,24956873,24958526,24960199,24961896,24963661,24965527,24966862,24967127,24967520,24967789,24968150,24968332,24968623,24968852,24969209,24969257,24969510,24969535,24969725,24969866,24970132,24970412,24970707,24970934,24971661,24973121,24974626,24976269,24977738,24978825,24979952,24981040,24982188,24983341,24984701,24986197,24987731,24989180,24990856,24992710,24994586,24996277,24997997,24999364,25000989,25002625,25004261,25005645,25007075,25008320,25009593,25011250,25012808,25014342,25015576,25017188,25018649,25020132,25021605,25022964,25024227,25025673,25027134,25028550,25030068,25031589,25033102,25034363,25035508,25036813,25038162,25039507,25040732,25042063,25043136,25044267,25045301,25046814,25048316,25049815,25051297,25052834,25054367,25055892,25057408,25058400,25059176,25059746,25060278,25061054,25061752,25062509,25063183,25063815,25064372,25064910,25065610,25066301,25066977,25067702,25068410,25069158,25069841,25070599,25071415,25072182,25072850,25073463,25073939,25074977,25077004,25078940,25080701,25082463,25084153,25085825,25087521,25089234,25090946,25092646,25094341,25096031,25097934,25099861,25101681,25103456,25105148,25106848,25108615,25110327,25112078,25113078,25114058,25115388,25117191,25118656,25120371,25122209,25123759,25125200,25126675,25128159,25129632,25131101,25132595,25134066,25135563,25136790,25137382,25137908,25138488,25139136,25139718,25140153,25140739,25141360,25141930,25142523,25143103,25143712,25144280,25144796,25145096,25145505,25146066,25146442,25146692,25147190,25147802,25148129,25148474,25148895,25149285,25149724,25151086,25153018,25154845,25156515,25158169,25159850,25161523,25163195,25164867,25166529,25168228,25169911,25171603,25173288,25175205,25177044,25178690,25180385,25182058,25183814,25185589,25187255,25188940,25189952,25190650,25191361,25192767,25194660,25196306,25198054,25199609,25201378,25203184,25204742,25206271,25207747,25209262,25210743,25212230,25213732,25215236,25216740,25218231,25219737,25221236,25222724,25224206,25225707,25227191,25228699,25230201,25231693,25233158,25234581,25235201,25235503,25236053,25236645,25237314,25237834,25238411,25239080,25239651,25239944,25240560,25241027,25241456,25241901,25242389,25242664,25243043,25243673,25244322,25244962,25245590,25246310,25246856,25247536,25248164,25248689,25249365,25249808,25250353,25250654,25251228,25251708,25252179,25252494,25252969,25253452,25253889,25254350,25254851,25255283,25255727,25256215,25256769,25257326,25257921,25258459,25258794,25259356,25259719,25260310,25260761,25261146,25261523,25262078,25262487,25263021,25263537,25263762,25264094,25264654,25266651,25268640,25270686,25272681,25274688,25276731,25278436,25280107,25281807,25283493,25285196,25286909,25288623,25290301,25291996,25293666,25295352,25297046,25298726,25300413,25302105,25303804,25305496,25307203,25308939,25310650,25312349,25314037,25315736,25317448,25319132,25320821,25322489,25324454,25326502,25328550,25330377,25331962,25333658,25335400,25337079,25338808,25340574,25342223,25343918,25345647,25347360,25349020,25350698,25352348,25354084,25355845,25357538,25359194,25360863,25362565,25364166,25365114,25366043,25366979,25367774,25368467,25369445,25370527,25371565,25372572,25373798,25374939,25376106,25377002,25378120,25379006,25380090,25380899,25381822,25383075,25383951,25385940,25387905,25389784,25391543,25393115,25394573,25396142,25397622,25399142,25400677,25402164,25403620,25405140,25406641,25408122,25409534,25410030,25410550,25410936,25411375,25411814,25412217,25412720,25413077,25413716,25414383,25414921,25415476,25416063,25416576,25417143,25417389,25417622,25417760,25418152,25418652,25419325,25419796,25420301,25420797,25421221,25421664,25422160,25422535,25422741,25423028,25424899,25426938,25428850,25430554,25432269,25433936,25435636,25437342,25439050,25440734,25442437,25444118,25445898,25447609,25449281,25450996,25453044,25454872,25456624,25458274,25459974,25461744,25463485,25465163,25466970,25468786,25470418,25471973,25472994,25474154,25475555,25477063,25478990,25480661,25482131,25483696,25485176,25486679,25488173,25489653,25491141,25492635,25494120,25495567,25497047,25497326,25497578,25497804,25498010,25498508,25498948,25499172,25499440,25499788,25500228,25500518,25500934,25501268,25501592,25501704,25501919,25502025,25502420,25502700,25503145,25503654,25503926,25504213,25504614,25505127,25505674,25505981,25506344,25507935,25509931,25511965,25513639,25515321,25517045,25518708,25520408,25522097,25523755,25525413,25527103,25528813,25530524,25532247,25534133,25536181,25537943,25539809,25541564,25543367,25545084,25546749,25548494,25550303,25552112,25553987,25555344,25555940,25556445,25557316,25558391,25559206,25560612,25562318,25564028,25565769,25567235,25568719,25570222,25571720,25573199,25574666,25575406,25575821,25576218,25576560,25576896,25577363,25577647,25578058,25578518,25578976,25579282,25579748,25580135,25580410,25580643,25581082,25581551,25582858,25584821,25586582,25588268,25589968,25591632,25593313,25595009,25596693,25598409,25600408,25602198,25603938,25605588,25607299,25609072,25610899,25612715,25613596,25614860,25616254,25617800,25619427,25620976,25622463,25623966,25625334,25625904,25626414,25626859,25627325,25627869,25628372,25628918,25629453,25629808,25630211,25630524,25631568,25633487,25635148,25636805,25638450,25640127,25641794,25643772,25645461,25647074,25648780,25650183,25651573,25653195,25654809,25656362,25657812,25659329,25660822,25662319,25663821,25665308,25666800,25668284,25669798,25671290,25672813,25674300,25675792,25677291,25678781,25680121,25680644,25681114,25681628,25681943,25682224,25682704,25683171,25683531,25683804,25684313,25684793,25685289,25685724,25686116,25686534,25686927,25687374,25687765,25688246,25688550,25688716,25688905,25689333,25689595,25689908,25690107,25690301,25690640,25690964,25691273,25691622,25691885,25692251,25692490,25692856,25693274,25693665,25694076,25694410,25694830,25695168,25695648,25695973,25696374,25696683,25696961,25697310,25697698,25697983,25698441,25698942,25699382,25700145,25702133,25704068,25706024,25708005,25709915,25711566,25713241,25714919,25716602,25718286,25719967,25721630,25723308,25725028,25726747,25728423,25730100,25731766,25733446,25735114,25736798,25738468,25740152,25741821,25743506,25745176,25746859,25748531,25750461,25752509,25754511,25756129,25757748,25759382,25761022,25762663,25764369,25766178,25767872,25769603,25771290,25772977,25774572,25776196,25777862,25779563,25781255,25782905,25783834,25784460,25785141,25785744,25786374,25786947,25787983,25789326,25790869,25792003,25793159,25794155,25795597,25797090,25798590,25799855,25801362,25802779,25804231,25806112,25807926,25809751,25811542,25813120,25814674,25816148,25817615,25819098,25820596,25822069,25823582,25825088,25826573,25828069,25829572,25830748,25831270,25831770,25832428,25833114,25833640,25834164,25834603,25835069,25835446,25835607,25836107,25836384,25836845,25837318,25837928,25838372,25838652,25839096,25839676,25840253,25840954,25841559,25842143,25842465,25843011,25843299,25843681,25844215,25844915,25845639,25846304,25846713,25847074,25847461,25848019,25848338,25848532,25849921,25851907,25853885,25855869,25857571,25859291,25860955,25862667,25864359,25866047,25867730,25869440,25871142,25872836,25874548,25876298,25877988,25879710,25881413,25883129,25885167,25887215,25889002,25890742,25892484,25894243,25896037,25897813,25899565,25901323,25903052,25904846,25906611,25908385,25910151,25911677,25912633,25913507,25914732,25916128,25917740,25919205,25920765,25922719,25924488,25926076,25927645,25929339,25930877,25932367,25933851,25935353,25936848,25938337,25939833,25941324,25942805,25944293,25945789,25947297,25948790,25950277,25951741,25953228,25954695,25956169,25957651,25959159,25960655,25961960,25962553,25963229,25963908,25964464,25965076,25965658,25966182,25966817,25967457,25968003,25968525,25968897,25969324,25969867,25970430,25970895,25971321,25971800,25972370,25972835,25973515,25973946,25974522,25975128,25975486,25975904,25976478,25976958,25977465,25978057,25978403,25978972,25979337,25979756,25980221,25980726,25981088,25981389,25981772,25982263,25982730,25983282,25983819,25984175,25984435,25984926,25985345,25985641,25986108,25986458,25986683,25987015,25987359,25987802,25988330,25988806,25989240,25989452,25990049,25990519,25990831,25991128,25991489,25991985,25992397,25992695,25993011,25993610,25994102,25994501,25994961,25995423,25995785,25996396,25996994,25997652,25999707,26001759,26003809,26005857,26007905,26009958,26011969,26013713,26015435,26017179,26018924,26020707,26022476,26024226,26025923,26027669,26029396,26031132,26032871,26034563,26036296,26038046,26039795,26041561,26043305,26045064,26046819,26048569,26050334,26052049,26053770,26055490,26057263,26059018,26060801,26062545,26064276,26066035,26067803,26069530,26071282,26073107,26075155,26077203,26079251,26081299,26083242,26084947,26086745,26088567,26090427,26092312,26094082,26095885,26097677,26099502,26101281,26102984,26104765,26106606,26108409,26110222,26112048,26113854,26115677,26117526,26119375,26121176,26122937,26124768,26126620,26128497,26130333,26132173,26134008,26135848,26137718,26139574,26141374,26142762,26143630,26144426,26145286,26145973,26146894,26148269,26149571,26150998,26152113,26153327,26154804,26156023,26156955,26157786,26158658,26159872,26161187,26162701,26163973,26165956,26167902,26169761,26171517,26173153,26174603,26176242,26177810,26179400,26180928,26182412,26183912,26185420,26186942,26188456,26189959,26191397,26192870,26194367,26195867,26197328,26198821,26200303,26201830,26203331,26204817,26206321,26207827,26209309,26210801,26211665,26212189,26212853,26213452,26213954,26214410,26214750,26215332,26215898,26216496,26217170,26217743,26218341,26219019,26219512,26220026,26220484,26221071,26221662,26222126,26222518,26222974,26223462,26224027,26224625,26224989,26225520,26225964,26226342,26226938,26227371,26227592,26227829,26228225,26228664,26229079,26229409,26229817,26230026,26230503,26230882,26231377,26231667,26231951,26232415,26232788,26233311,26233584,26233931,26234084,26234555,26234965,26235296,26235464,26235682,26235875,26236154,26236430,26236977,26237471,26237943,26238512,26238929,26239411,26239945,26241985,26243975,26245912,26247891,26249870,26251801,26253436,26255116,26256804,26258484,26260147,26261861,26263574,26265268,26266952,26268631,26270275,26271931,26273622,26275339,26277035,26278709,26280417,26282126,26283818,26285496,26287172,26288861,26290521,26292205,26293871,26295543,26297212,26298922,26300970,26303018,26305010,26306609,26308303,26310011,26311749,26313527,26315304,26316975,26318605,26320293,26322087,26323816,26325604,26327312,26329047,26330775,26332502,26334207,26335917,26337605,26339363,26340768,26341611,26342307,26342893,26343416,26344168,26344898,26345888,26346942,26347855,26348551,26349289,26349907,26350642,26351357,26352031,26352796,26353478,26354212,26354624,26354957,26355720,26356369,26357322,26358027,26358589,26359102,26359827,26361392,26362006,26363615,26365281,26367073,26368861,26370631,26372297,26373964,26375469,26377104,26378724,26380256,26381738,26383223,26384703,26386182,26387660,26389136,26390623,26392096,26393556,26395037,26396531,26397993,26399473,26400938,26402410,26403879,26405361,26406842,26408301,26409772,26411264,26412752,26414235,26415710,26417199,26418701,26420168,26421644,26423092,26424573,26426013,26427490,26428956,26430417,26431888,26433372,26434821,26436277,26437751,26439216,26440705,26442195,26443682,26445147,26446603,26448076,26449564,26451001,26452455,26453880,26455291,26456721,26458198,26459694,26461167,26462599,26464053,26465536,26466994,26468478,26469940,26471423,26472910,26474368,26475856,26477281,26478752,26480224,26481696,26483190,26484666,26486138,26487577,26488946,26489497,26489994,26490421,26491056,26491514,26491984,26492274,26492763,26493258,26493509,26493796,26494397,26494971,26495446,26496069,26496497,26497003,26497645,26498277,26498760,26499440,26499875,26500476,26501019,26501397,26501932,26502559,26503173,26503745,26504206,26504656,26505119,26505641,26506192,26506711,26507156,26507662,26508213,26508718,26509252,26509879,26510436,26511142,26511662,26511992,26512269,26512800,26513277,26513734,26514313,26514892,26515551,26516080,26516601,26517168,26517630,26518190,26518572,26518967,26519492,26519942,26520405,26520803,26521326,26521842,26522182,26522631,26523110,26523501,26524079,26524458,26524984,26525350,26525953,26526564,26527154,26527800,26528391,26529003,26529536,26530088,26530643,26531140,26531739,26532262,26532543,26532959,26533290,26533816,26534265,26534765,26535267,26535615,26535922,26536414,26536842,26537157,26537635,26538131,26538637,26538978,26539360,26539884,26540479,26540986,26541523,26542109,26542498,26542738,26543205,26543599,26543817,26544031,26544431,26544993,26545525,26546053,26546408,26546769,26547250,26547569,26547911,26548196,26548557,26548889,26549460,26549863,26550305,26550819,26551264,26551831,26552462,26552972,26553525,26554067,26554642,26555137,26555577,26555995,26556443,26557000,26557583,26558132,26558622,26559084,26559627,26560163,26560481,26560728,26561184,26561650,26562088,26562664,26563173,26563657,26564206,26564671,26564981,26565326,26565881,26566410,26566932,26567362,26567826,26568306,26568718,26569181,26569819,26570403,26570863,26571343,26571842,26572301,26572768,26573365,26573989,26574504,26574892,26575253,26575786,26576256,26576645,26577181,26577790,26578153,26578536,26579021,26579322,26579628,26579920,26580281,26580672,26581015,26581359,26581572,26582161,26582691,26583309,26583854,26584352,26584648,26585009,26585602,26586108,26586617,26587079,26587597,26588093,26588571,26589071,26589572,26590050,26590597,26590910,26591261,26591645,26592039,26592670,26593210,26593739,26594152,26594554,26595092,26595603,26595976,26596568,26597126,26597610,26598109,26598573,26599055,26599581,26600077,26600479,26600974,26601473,26601617,26601803,26602325,26602866,26603399,26604010,26604478,26605036,26605554,26606042,26606562,26606941,26607669,26609579,26611517,26613465,26615378,26617303,26619251,26621251,26623205,26625187,26627194,26629134,26631139,26633084,26635032,26637031,26638995,26640927,26642941,26644993,26646870,26648539,26650167,26651805,26653478,26655164,26656880,26658594,26660320,26662014,26663678,26665377,26667045,26668750,26670436,26672129,26673798,26675484,26677169,26678846,26680519,26682194,26683878,26685571,26687268,26688951,26690643,26692309,26694002,26695677,26697350,26699037,26700725,26702401,26704080,26705766,26707450,26709146,26710819,26712512,26714197,26715863,26717522,26719166,26720841,26722546,26724194,26725889,26727553,26729228,26730869,26732532,26734213,26735888,26737546,26739220,26740929,26742624,26744305,26745994,26747680,26749352,26751019,26752706,26754374,26756022,26757737,26759462,26761145,26762822,26764488,26766147,26767811,26769502,26771154,26772815,26774488,26776135,26777773,26779435,26781106,26782794,26784452,26786127,26787807,26789461,26791150,26792872,26794550,26796258,26797951,26799639,26801370,26803041,26804700,26806403,26808125,26809815,26811502,26813177,26814871,26816545,26818223,26819906,26821610,26823302,26824968,26826863,26828920,26830968,26833016,26835064,26837112,26839160,26841208,26843256,26845304,26847352,26849228,26850855,26852436,26854140,26855895,26857675,26859426,26861150,26862900,26864629,26866294,26867953,26869619,26871314,26873026,26874683,26876417,26878169,26879843,26881564,26883266,26885017,26886752,26888465,26890134,26891726,26893464,26895181,26896901,26898543,26900261,26901867,26903567,26905227,26906935,26908614,26910213,26911946,26913667,26915402,26917172,26918947,26920661,26922314,26924028,26925731,26927440,26929196,26930939,26932626,26934237,26935953,26937730,26939415,26940946,26942398,26943968,26945588,26947299,26949053,26950707,26952494,26954316,26956024,26957759,26959461,26961125,26962920,26964687,26966373,26968011,26969757,26971479,26973254,26975049,26976766,26978484,26979512,26980379,26981120,26982038,26982917,26983616,26984417,26985165,26985752,26986477,26987031,26987642,26988244,26988953,26989174,26989517,26990194,26990859,26991636,26992291,26993185,26993808,26994464,26995235,26996013,26996800,26997594,26998301,26999093,26999959,27000629,27001478,27002356,27003136,27003908,27004716,27005603,27006286,27007053,27007747,27008472,27009254,27009941,27010692,27011448,27012119,27012952,27013590,27014434,27015270,27015863,27016476,27016780,27017202,27017856,27018421,27019265,27019853,27020239,27020955,27021534,27022374,27023206,27024141,27024891,27025498,27025954,27026463,27027077,27027708,27028537,27029105,27029642,27030287,27030787,27031402,27031916,27032531,27033300,27034097,27034713,27035459,27036344,27036872,27037350,27038301,27038785,27039313,27039803,27040719,27041480,27042376,27043020,27043715,27044441,27045064,27045818,27046440,27047187,27047942,27048503,27049163,27049867,27050424,27051230,27051808,27052289,27052844,27053283,27054090,27054878,27055763,27056701,27057294,27058030,27058817,27059571,27059852,27060709,27061526,27062184,27062819,27063513,27064281,27064956,27065586,27066240,27067020,27067736,27068312,27069030,27069502,27070142,27070851,27071654,27072086,27072455,27072788,27073078,27073389,27073664,27074056,27074479,27074761,27075061,27075367,27075642,27075955,27076393,27076874,27077383,27078108,27078592,27078937,27079481,27080208,27080743,27081493,27082181,27082727,27083440,27084228,27084793,27085475,27086163,27087111,27087674,27088085,27088453,27088945,27089405,27089716,27090194,27090547,27090746,27091289,27091617,27091926,27092248,27092494,27092691,27093292,27093884,27094353,27095015,27095751,27096449,27096836,27097054,27097258,27097509,27097763,27097912,27098094,27098320,27098895,27100172,27102066,27103377,27105292,27107180,27109127,27111043,27112954,27114885,27116827,27118763,27120678,27122652,27124563,27126475,27128338,27130145,27132050,27133891,27135768,27137283,27138811,27140277,27141765,27143238,27144731,27146217,27147693,27149191,27150684,27152053,27152511,27153014,27153509,27154029,27154481,27154898,27155401,27155863,27156336,27156581,27157079,27157520,27158038,27158467,27158922,27159522,27159779,27160155,27160595,27160907,27161320,27161646,27161983,27162335,27162738,27163043,27163522,27163789,27164044,27164433,27164855,27165577,27167561,27169504,27171476,27173160,27174842,27176554,27178264,27179958,27181678,27183354,27185073,27186785,27188477,27190156,27191833,27193506,27195181,27196979,27199027,27200868,27202657,27204359,27206178,27207933,27209645,27211408,27213216,27214992,27216726,27218419,27220144,27221370,27222143,27222958,27224052,27225620,27226956,27228284,27229453,27231064,27232711,27234461,27235991,27237443,27238970,27240469,27241937,27243380,27244881,27246376,27247879,27249367,27250850,27251213,27251515,27251975,27252438,27252821,27253532,27254080,27254679,27255211,27255812,27256335,27256831,27257230,27257576,27257843,27258280,27258731,27259097,27259369,27259773,27260086,27260545,27261110,27261456,27261757,27262274,27262534,27262759,27263988,27265989,27268045,27269756,27271439,27273148,27274858,27276592,27278298,27280011,27281685,27283394,27285099,27286787,27288492,27290176,27292055,27294103,27295774,27297395,27299191,27301039,27302888,27304618,27306356,27308146,27310000,27311762,27313541,27315315,27316272,27317005,27317870,27319022,27320005,27321384,27322713,27324290,27325963,27327674,27329264,27330858,27332444,27333940,27335427,27336917,27338402,27339885,27341388,27342876,27344364,27345833,27347304,27348767,27350264,27351732,27353184,27354666,27356157,27357644,27359127,27360607,27362079,27363528,27364997,27366464,27367965,27369436,27370907,27372396,27373876,27375357,27376837,27378322,27379807,27381312,27382801,27384267,27385761,27386518,27387177,27387745,27388391,27389069,27389734,27390359,27390896,27391470,27392022,27392592,27393239,27393807,27394430,27395019,27395659,27396278,27396884,27397426,27397983,27398645,27399300,27399877,27400437,27400954,27401626,27402238,27402841,27403453,27404021,27404539,27405009,27405510,27406199,27406816,27407344,27407887,27408409,27408948,27409515,27410055,27410608,27411158,27411789,27412345,27412773,27413154,27413353,27413705,27414133,27414494,27415006,27415476,27415896,27416338,27416870,27417574,27418120,27418468,27418654,27418848,27419233,27419382,27419600,27419944,27420412,27420871,27421381,27421853,27422373,27423030,27423522,27424111,27424727,27425336,27425960,27426525,27427017,27427539,27427946,27428516,27428984,27429611,27430196,27430768,27431045,27431557,27432054,27432587,27433077,27433358,27433615,27433967,27434556,27435108,27435732,27436279,27436751,27437166,27437757,27438364,27438847,27439427,27440001,27440612,27441171,27441744,27442194,27442777,27444369,27446378,27448362,27450351,27452401,27454301,27456272,27458219,27460199,27462193,27463907,27465620,27467327,27469037,27470743,27472448,27474140,27475842,27477561,27479227,27480944,27482634,27484318,27486013,27487726,27489418,27491113,27492794,27494491,27496199,27497838,27499499,27501162,27502813,27504492,27506166,27507840,27509526,27511234,27512909,27514589,27516265,27517959,27519648,27521348,27523039,27524696,27526362,27528034,27529728,27531405,27533072,27534727,27536425,27538088,27539748,27541758,27543806,27545854,27547902,27549900,27551652,27553423,27555130,27556794,27558454,27560168,27561904,27563693,27565440,27567184,27568927,27570595,27572321,27574040,27575663,27577404,27579024,27580728,27582431,27584176,27585906,27587607,27589357,27591106,27592820,27594422,27596031,27597739,27599481,27601193,27602916,27604578,27605638,27606552,27607435,27608318,27609061,27609886,27610744,27611514,27612425,27613200,27614231,27615225,27616172,27616995,27617988,27618880,27620201,27621244,27622392,27623577,27624651,27625772,27627020,27628129,27629289,27630507,27631954,27633331,27634711,27635676,27636747,27638025,27638779,27639600,27640333,27640830,27641613,27642124,27642550,27643301,27644242,27645185,27646323,27647450,27648581,27649465,27650044,27650556,27651403,27652662,27653651,27654576,27655680,27657130,27658986,27660839,27662697,27664565,27666481,27668413,27670315,27672266,27674111,27675673,27677192,27678677,27680158,27681648,27683134,27684626,27686093,27687558,27689045,27690540,27692029,27692977,27693387,27693628,27694091,27694628,27694961,27695356,27695875,27696350,27696716,27696884,27697047,27697287,27697598,27697865,27698240,27698728,27699069,27699578,27699994,27700309,27700700,27701071,27701531,27701963,27702214,27702577,27702907,27703239,27703677,27703919,27704376,27704721,27705086,27706003,27707987,27709965,27711989,27713640,27715343,27716988,27718698,27720379,27722055,27723756,27725458,27727169,27728857,27730555,27732268,27733974,27735662,27737374,27739422,27741363,27743036,27744735,27746506,27748251,27749986,27751767,27753575,27755351,27757087,27758840,27760555,27762222,27762853,27763671,27765004,27766491,27767215,27767982,27769062,27770684,27772517,27774318,27775856,27777476,27778970,27780454,27781953,27783447,27784955,27786449,27787097,27787584,27788149,27788774,27789257,27789675,27790256,27790744,27791079,27791507,27791952,27792404,27792573,27792904,27793282,27793772,27794181,27794475,27794897,27795297,27795667,27795971,27796718,27798643,27800592,27802292,27803995,27805709,27807395,27809106,27810770,27812434,27814116,27815812,27817525,27819569,27821314,27823105,27824907,27826656,27828388,27830106,27831863,27833708,27835227,27835998,27836783,27838414,27840160,27841672,27843045,27844617,27846281,27847748,27849223,27850572,27852060,27853544,27855023,27856527,27857988,27859465,27860937,27862413,27863923,27865433,27866914,27868405,27869892,27871153,27871752,27872140,27872701,27873304,27873753,27874346,27874752,27875252,27875784,27876267,27876750,27877434,27878001,27878562,27878839,27879264,27879639,27879954,27880398,27880835,27881396,27881782,27882278,27882586,27882816,27883054,27883656,27884275,27884919,27885483,27886105,27886629,27887091,27887666,27888010,27888477,27889054,27889476,27890138,27890719,27891157,27891610,27892146,27892440,27893074,27895051,27897021,27899036,27901063,27902749,27904483,27906189,27907886,27909580,27911256,27912929,27914591,27916301,27918027,27919697,27921371,27923037,27924760,27926479,27928190,27929918,27931646,27933370,27935075,27937063,27939111,27941020,27942747,27944430,27946181,27947934,27949628,27951307,27952992,27954630,27956314,27958043,27959823,27961576,27963345,27965108,27966888,27968107,27969012,27969756,27970757,27972365,27973968,27975316,27976829,27978243,27979866,27981298,27983103,27984933,27986690,27988317,27989731,27991177,27992667,27994148,27995637,27997102,27998594,28000076,28001558,28003031,28004504,28005987,28007485,28008961,28010436,28011876,28012368,28012885,28013481,28013993,28014497,28014897,28015446,28016023,28016587,28016948,28017366,28017847,28018200,28018592,28018834,28019263,28019733,28020287,28020838,28021247,28021775,28022329,28022725,28023164,28023377,28023609,28023813,28024280,28024724,28025074,28025298,28025373,28025583,28025932,28026198,28026429,28026771,28027307,28027699,28028157,28028583,28028821,28029120,28029468,28029710,28031472,28033430,28035343,28037371,28039114,28040814,28042503,28044172,28045855,28047537,28049223,28050942,28052619,28054272,28055938,28057612,28059314,28060998,28062672,28064347,28066019,28067687,28069368,28071047,28072980,28075028,28077010,28078715,28080425,28082082,28083857,28085580,28087355,28089084,28090744,28092437,28094145,28095752,28097517,28099151,28100826,28102629,28103975,28104665,28105397,28105895,28106846,28107732,28108402,28109259,28110098,28110917,28111691,28112200,28113412,28114700,28116478,28118191,28119796,28121439,28123104,28124592,28126064,28127559,28129057,28130566,28132060,28133534,28134985,28136475,28137963,28139470,28140952,28142473,28143953,28145470,28146966,28148458,28149888,28151362,28152865,28154398,28155919,28156570,28157138,28157740,28158078,28158472,28158981,28159478,28160058,28160606,28161029,28161456,28161917,28162471,28162949,28163065,28163628,28164211,28164743,28165196,28165631,28166057,28166379,28166563,28166724,28167220,28167796,28168318,28168831,28169418,28169917,28170410,28170852,28171215,28171601,28172122,28172648,28173178,28173641,28173946,28174261,28174775,28175124,28175482,28175674,28175817,28176021,28176602,28177092,28177550,28178063,28178456,28178777,28179226,28179652,28180038,28180404,28180698,28180867,28181211,28181619,28182033,28182421,28182880,28183367,28183744,28184078,28184539,28184965,28185415,28185815,28187151,28189164,28191202,28193186,28195186,28197237,28199119,28200833,28202508,28204147,28205807,28207497,28209205,28210846,28212531,28214247,28215921,28217631,28219329,28221012,28222679,28224373,28226053,28227736,28229439,28231145,28232844,28234534,28236195,28237862,28239554,28241261,28242956,28244634,28246325,28248032,28249740,28251461,28253478,28255526,28257574,28259564,28261231,28262956,28264564,28266218,28267977,28269495,28271304,28273037,28274824,28276582,28278297,28280000,28281734,28283435,28285136,28286903,28288615,28290308,28292027,28293779,28295637,28297259,28299031,28300823,28302658,28303712,28304349,28304889,28305517,28306056,28306771,28307483,28308206,28308866,28309263,28309481,28309980,28310713,28311410,28311794,28312308,28312735,28313003,28313499,28313931,28314273,28314510,28314852,28315941,28317174,28317666,28319288,28320977,28322748,28324538,28326325,28328062,28329600,28331022,28332509,28334001,28335521,28337027,28338157,28338650,28338891,28339122,28339385,28339813,28340102,28340259,28340512,28340757,28340955,28341479,28341914,28342260,28342598,28343074,28343585,28345171,28347141,28348804,28350479,28352178,28353876,28355553,28357215,28358892,28360775,28362641,28364416,28366161,28367938,28369636,28371261,28372231,28373079,28374230,28375508,28377169,28378832,28380460,28381979,28383492,28384995,28386490,28387961,28389457,28390930,28392430,28393919,28395394,28396872,28398363,28399866,28401354,28402835,28404322,28405797,28407303,28408033,28408660,28409278,28409836,28410382,28410921,28411441,28411973,28412525,28413043,28413571,28414133,28414556,28415179,28415772,28416257,28416891,28417291,28417762,28418368,28418952,28419476,28419974,28420571,28421181,28421489,28421988,28422569,28423080,28423455,28423779,28424282,28424743,28425286,28425832,28426226,28426639,28427071,28427623,28428078,28428522,28429163,28429510,28430113,28430703,28431310,28431976,28432407,28432749,28433386,28433908,28434327,28434840,28435432,28435815,28436434,28436998,28437589,28438193,28438790,28440222,28442270,28444290,28446332,28448363,28450201,28451912,28453623,28455339,28457041,28458727,28460433,28462144,28463854,28465553,28467231,28468904,28470597,28472275,28473988,28475667,28477394,28479072,28480787,28482459,28484125,28485809,28487470,28489178,28490890,28492610,28494419,28496467,28498515,28500376,28502127,28503897,28505633,28507377,28509021,28510737,28512419,28514188,28516010,28517798,28519639,28521464,28523131,28524773,28526525,28528329,28530126,28531565,28532289,28533054,28533907,28534621,28535549,28537219,28538818,28540095,28541433,28543163,28544833,28546366,28547763,28548838,28550550,28552384,28554233,28555971,28557817,28559405,28560947,28562489,28563991,28565476,28566961,28568437,28569916,28571407,28572881,28574354,28575832,28577334,28578797,28580291,28581778,28583263,28584765,28586285,28587769,28589264,28590757,28592264,28593648,28594102,28594173,28594449,28594625,28595117,28595667,28596167,28596622,28597086,28597590,28598212,28598835,28599072,28599463,28599937,28600277,28600716,28601004,28601562,28602138,28602696,28603012,28603392,28603556,28603957,28604288,28604496,28605053,28605409,28606027,28606568,28607014,28607495,28608002,28608554,28608842,28609149,28609701,28610101,28610601,28611201,28611807,28612363,28612865,28613111,28613346,28613803,28614183,28614645,28615137,28615590,28616137,28616742,28617280,28617909,28618481,28618974,28619474,28619948,28620280,28620741,28621224,28621408,28621522,28621988,28622350,28622838,28623152,28623491,28625073,28627107,28629102,28631130,28633174,28635165,28636829,28638532,28640220,28641905,28643553,28645243,28646913,28648557,28650219,28651915,28653603,28655269,28656960,28658658,28660372,28662046,28663756,28665428,28667111,28668812,28670502,28672199,28673895,28675610,28677319,28678995,28680683,28682366,28684022,28685781,28687829,28689877,28691925,28693669,28695405,28697165,28698896,28700651,28702359,28703989,28705717,28707445,28709116,28710805,28712605,28714368,28716173,28717873,28719622,28721344,28722996,28724770,28726492,28728137,28729714,28731444,28732435,28733275,28733988,28734764,28735558,28736271,28736978,28737691,28738249,28738975,28739758,28740763,28741785,28742833,28743655,28744386,28745265,28746253,28747419,28748411,28749339,28750354,28751358,28752257,28753065,28754019,28754855,28755415,28756041,28756745,28756816,28757435,28758627,28760105,28761853,28763717,28765530,28767363,28769140,28770723,28772239,28773792,28775290,28776777,28778266,28779764,28781261,28782767,28784250,28785746,28787262,28788213,28788601,28789004,28789216,28789541,28790103,28790653,28790926,28791428,28791832,28792322,28792809,28793188,28793462,28793958,28794333,28794617,28795153,28795561,28795887,28796189,28796725,28797130,28797485,28797879,28798239,28798439,28798820,28799013,28799292,28799645,28800167,28800525,28800760,28801024,28801264,28802937,28804920,28806873,28808705,28810405,28812080,28813769,28815462,28817096,28818789,28820456,28822140,28823791,28825458,28827152,28828846,28830558,28832242,28833916,28835964,28838012,28839730,28841470,28843214,28844986,28846633,28848399,28850097,28851720,28853395,28855166,28856896,28858660,28860313,28861436,28862046,28862697,28863484,28864681,28865844,28866759,28867913,28869640,28871533,28873415,28875052,28876566,28878095,28879586,28881086,28882575,28884066,28885566,28887076,28888570,28890057,28891553,28893056,28894542,28896049,28897580,28899074,28900558,28902043,28903533,28905032,28906547,28908023,28909515,28911014,28912508,28913980,28915503,28917016,28918526,28919995,28921517,28923013,28924492,28925954,28926539,28927079,28927630,28928083,28928598,28929129,28929667,28930314,28930908,28931497,28932104,28932588,28932999,28933444,28933999,28934464,28934902,28935457,28936036,28936657,28937256,28937816,28938329,28938920,28939395,28939837,28940346,28940914,28941503,28942033,28942346,28942867,28943297,28943849,28944353,28944792,28945300,28945795,28946291,28946845,28947269,28947775,28948321,28948739,28949040,28949333,28949703,28950128,28950524,28950818,28951106,28951637,28952022,28952429,28952914,28953345,28953994,28954538,28955005,28955314,28955838,28956440,28957067,28957650,28958200,28958763,28959133,28959670,28960108,28960660,28961160,28961572,28962029,28962557,28962924,28963409,28963935,28964424,28964825,28965197,28965627,28966155,28966639,28967000,28967474,28967942,28968308,28968711,28968923,28969478,28970030,28970385,28970807,28971213,28971610,28971949,28972559,28972880,28973332,28973774,28974034,28974231,28974554,28974970,28975340,28975665,28976029,28976370,28976584,28976993,28977283,28978640,28980640,28982684,28984675,28986651,28988664,28990687,28992679,28994731,28996785,28998532,29000216,29001908,29003591,29005281,29006970,29008642,29010340,29012063,29013762,29015467,29017204,29018929,29020666,29022377,29024100,29025822,29027577,29029312,29031044,29032752,29034443,29036138,29037830,29039510,29041199,29042869,29044545,29046247,29047929,29049644,29051356,29053006,29054669,29056358,29058047,29059738,29061452,29063165,29064902,29066653,29068401,29070130,29071795,29073481,29075196,29076896,29078561,29080213,29081895,29083801,29085849,29087897,29089945,29091993,29093995,29095687,29097410,29099096,29100782,29102390,29104055,29105819,29107535,29109326,29111062,29112829,29114594,29116342,29118024,29119740,29121437,29123144,29124858,29126585,29128220,29129882,29131498,29133123,29134882,29136620,29138260,29140002,29141606,29143285,29144925,29146652,29148421,29150182,29151872,29153688,29155304,29156849,29158447,29159467,29160249,29160974,29161768,29162644,29163200,29163958,29164691,29165309,29166191,29167070,29168036,29169003,29169978,29170471,29171035,29171671,29172327,29173273,29174073,29174720,29175468,29176102,29176778,29177594,29178230,29178840,29179405,29179844,29180027,29180899,29181769,29182611,29183553,29184565,29185676,29186500,29187536,29188465,29189260,29189960,29190479,29191783,29193192,29194919,29196787,29198613,29200481,29202321,29204110,29205934,29207835,29209483,29211152,29212730,29214221,29215729,29217213,29218702,29220203,29221679,29223165,29224648,29226129,29227376,29227842,29228343,29228850,29229278,29229808,29230256,29230748,29231109,29231552,29231898,29232167,29232506,29232632,29232693,29233136,29233699,29234299,29234863,29235457,29236000,29236592,29236921,29237097,29237153,29237460,29237906,29238141,29238515,29238900,29239068,29239130,29239473,29241441,29243489,29245539,29247229,29248906,29250603,29252297,29253995,29255724,29257441,29259157,29260834,29262491,29264200,29265908,29267612,29269350,29271373,29273421,29275228,29277071,29278892,29280685,29282462,29284182,29285989,29287754,29289475,29291288,29293116,29294974,29295891,29296656,29297369,29298257,29299199,29299770,29301214,29301890,29303233,29304802,29306440,29308058,29309560,29311133,29312667,29314146,29315669,29317167,29318675,29320159,29321650,29323138,29324628,29326105,29327601,29329081,29330578,29332062,29332896,29333295,29333543,29333815,29334168,29334622,29335005,29335403,29335800,29336033,29336257,29336875,29337355,29337918,29338492,29338924,29339424,29339842,29340131,29340396,29340814,29341205,29341462,29341900,29342408,29342796,29343070,29343455,29343897,29344266,29344659,29344913,29345381,29345796,29346260,29346706,29347182,29347441,29348175,29350195,29352206,29354237,29355943,29357599,29359252,29360950,29362660,29364350,29366037,29367734,29369447,29371153,29372845,29374532,29376191,29377841,29379502,29381152,29382825,29384873,29386923,29388527,29390171,29391974,29393867,29395757,29397569,29399384,29401192,29403030,29404858,29406554,29408228,29409832,29410782,29411462,29412062,29412788,29413374,29413674,29414027,29414488,29414859,29415230,29415642,29416123,29416640,29418257,29419410,29419887,29420597,29422095,29423618,29425103,29426601,29428313,29429983,29431584,29433217,29434726,29436255,29437762,29439292,29440810,29442346,29443867,29445395,29446889,29448402,29449921,29451434,29452939,29454452,29455955,29457474,29459003,29460510,29462028,29463522,29465029,29466549,29468064,29469569,29471073,29472612,29474105,29475616,29477156,29478689,29480221,29481761,29483280,29484800,29486319,29487836,29489351,29490863,29492357,29493857,29495354,29496847,29498322,29499805,29501302,29502792,29504294,29505775,29506314,29506859,29507311,29507796,29508320,29508814,29509371,29509800,29510330,29511004,29511665,29512311,29513033,29513698,29514383,29515111,29515794,29516437,29517091,29517844,29518592,29519316,29519906,29520430,29521026,29521364,29521987,29522530,29523143,29523832,29524552,29525178,29525821,29526482,29527150,29527748,29528399,29528988,29529608,29530236,29530715,29531314,29531967,29532527,29533128,29533699,29534278,29534777,29535294,29535886,29536476,29537084,29537706,29538227,29538787,29539425,29540016,29540535,29541081,29541614,29542239,29542749,29543140,29543659,29544231,29544751,29545297,29545926,29546490,29547099,29547698,29548276,29548914,29549401,29550017,29550560,29551215,29551804,29552332,29552843,29553402,29553931,29554403,29554954,29555455,29556058,29556657,29557133,29557554,29558135,29558739,29559297,29559979,29560550,29561295,29562053,29562733,29563383,29564066,29564723,29565401,29566112,29566713,29567277,29567908,29568580,29569214,29569843,29570399,29570929,29571445,29572056,29572642,29573258,29573879,29574495,29575036,29575663,29576251,29576856,29577441,29577992,29578548,29579087,29579369,29579963,29580523,29581066,29581602,29582153,29582673,29583158,29583699,29584182,29584700,29585306,29585930,29586435,29586832,29587204,29587795,29588308,29588829,29589386,29589779,29590207,29590691,29591231,29591801,29592329,29592837,29593202,29594526,29596583,29598636,29600678,29602719,29604760,29606814,29608853,29610901,29612958,29615006,29617024,29619077,29621057,29622767,29624496,29626178,29627880,29629588,29631317,29633021,29634695,29636408,29638103,29639808,29641504,29643202,29644899,29646592,29648296,29650032,29651758,29653457,29655180,29656902,29658632,29660374,29662106,29663865,29665623,29667385,29669140,29670876,29672586,29674279,29675998,29677718,29679411,29681093,29682764,29684469,29686201,29687892,29689575,29691281,29692989,29694686,29696400,29698113,29699861,29701602,29703364,29705109,29706856,29708568,29710289,29712009,29713749,29715470,29717205,29718938,29720699,29722432,29724163,29725910,29727670,29729421,29731165,29732887,29734647,29736700,29738748,29740796,29742844,29744892,29746940,29748988,29750969,29752665,29754300,29756042,29757781,29759476,29761149,29762870,29764641,29766345,29768122,29769921,29771690,29773532,29775316,29777145,29778965,29780753,29782555,29784343,29786104,29787876,29789675,29791281,29792854,29794560,29796286,29797967,29799603,29801224,29803027,29804698,29806429,29808129,29809822,29811551,29813395,29815228,29817033,29818846,29820666,29822488,29824164,29825881,29827470,29829129,29830914,29832735,29834535,29836327,29838174,29840027,29841842,29843625,29844699,29845647,29846558,29847493,29848449,29849369,29850115,29850901,29851792,29852665,29853828,29855133,29856513,29857750,29858915,29860156,29861378,29862659,29863975,29865274,29866479,29867571,29868808,29869571,29870287,29871029,29871955,29872915,29873863,29874933,29876256,29877226,29877716,29878344,29879942,29881302,29883087,29885053,29886746,29888565,29890441,29892351,29894159,29895979,29897799,29899627,29901517,29903378,29904907,29906391,29907943,29909435,29910938,29912422,29913922,29915433,29916924,29918384,29919845,29919995,29920114,29920398,29920520,29920631,29920909,29921169,29921595,29921856,29922179,29922503,29922797,29922940,29923303,29923568,29923723,29923891,29924065,29924586,29924985,29925273,29925483,29926026,29926423,29926803,29927248,29927530,29927688,29928891,29930916,29932971,29934713,29936413,29938104,29939792,29941518,29943219,29944892,29946601,29948318,29950059,29951763,29953425,29955106,29956958,29959006,29960856,29962662,29964327,29965958,29967772,29969481,29971262,29973084,29974860,29976745,29978492,29980204,29980923,29981746,29983540,29984959,29986580,29988184,29989807,29991336,29992779,29993933,29995450,29996940,29997417,29997839,29998332,29998882,29999435,29999915,30000357,30002068,30003801,30005494,30007177,30009030,30010830,30012495,30013140,30013932,30015364,30016920,30018407,30019907,30021396,30022460,30022662,30023116,30023547,30024090,30024554,30024666,30024873,30025456,30025804,30026100,30026375,30026881,30027552,30029493,30031217,30032885,30034577,30036259,30037936,30039583,30041546,30043152,30044890,30046673,30048351,30049618,30050473,30052143,30053919,30055577,30057053,30058526,30060021,30061528,30063014,30064030,30064520,30064971,30065342,30065735,30066201,30066448,30066741,30067240,30067739,30068176,30068551,30069049,30069494,30069945,30070508,30071485,30073507,30075168,30076831,30078483,30080181,30081863,30083541,30085222,30087187,30088852,30090555,30092285,30094048,30095409,30095971,30096945,30098209,30099111,30100394,30102017,30103929,30105983,30108040,30110081,30112134,30113995,30115620,30117210,30118684,30119806,30120606,30121406,30122159,30122992,30123899,30124982,30127025,30129045,30131032,30132951,30134804,30135311,30136308,30137427,30138898,30140028,30141482,30142855,30144191,30145333,30146136,30146808,30147908,30148998,30150213,30151307,30152352,30153128,30154091,30154935,30156010,30157044,30158070,30159140,30160242,30161367,30162196,30162937,30163660,30164494,30165505,30166208,30167126,30167900,30168665,30169935,30171983,30173334,30174410,30175496,30176438,30177385,30178380,30179513,30180507,30181506,30182411,30183627,30184735,30185567,30186626,30187618,30188608,30189628,30190348,30191150,30191871,30192713,30193848,30195264,30196772,30198191,30199791,30201781,30203829,30205885,30207755,30209172,30211200,30213256,30215304,30217352,30219332,30221157,30223213,30224866,30226810,30228866,30230914,30232962,30235010,30237058,30239106,30241154,30243202,30245230,30247263,30249292,30251319,30253350,30255348,30257295,30259097,30260772,30262742,30264790,30266838,30268886,30270934,30272982,30275030,30277078,30279135,30281183,30283231,30285286,30287286,30289223,30291048,30292824,30294132,30295929,30297857,30299750,30301518,30303457,30305512,30307564,30309620,30311668,30313716,30315764,30317812,30319860,30321908,30323956,30326004,30328052,30330100,30332148,30334121,30335599,30336703,30338745,30340793,30342850,30344898,30346946,30348994,30351042,30353090,30355138,30357186,30359234,30361282,30363330,30365378,30367426,30369474,30371522,30373570,30375627,30377661,30379220,30381276,30383324,30385372,30387425,30389285,30390837,30392205,30393408,30394398,30395094,30395585,30397616,30399670,30401718,30403766,30405821,30407869,30409925,30411973,30414021,30416077,30417891,30419324,30420143,30422191,30424241,30426244,30428186,30430062,30431751,30433237,30434381,30435258,30435813,30436061,30436465,30438413,30440461,30442509,30444557,30446605,30448653,30450701,30452749,30454797,30456845,30458893,30460946,30462998,30464974,30466784,30468390,30469864,30471229,30473282,30475330,30477378,30479426,30481480,30483528,30485576,30487624,30489672,30491729,30493786,30495837,30497856,30499752,30501446,30502884,30503893,30505111,30506922,30508807,30510830,30512886,30514940,30516991,30518908,30520589,30521850,30522887,30524935,30526981,30529029,30530815,30532856,30534904,30536961,30538712,30539190,30539280,30539466,30539500,30540388,30542436,30544484,30546532,30548580,30550628,30552684,30554736,30556780,30558682,30560737,30562785,30564833,30566881,30568899,30570956,30573004,30575052,30577108,30579156,30581204,30583256,30585313,30587361,30589300,30590836,30592824,30594812,30596400,30598028,30600076,30602071,30603614,30604889,30606492,30608380,30610417,30612471,30614528,30616584,30618632,30620659,30622514,30623914,30624232,30625406,30627454,30629502,30631559,30633607,30635662,30637710,30639766,30641814,30643862,30645891,30647897,30649728,30651592,30653539,30655080,30657110,30659158,30661214,30663262,30665310,30667367,30669424,30671472,30673459,30675440,30677488,30679536,30681584,30683632,30685688,30687736,30689793,30691732,30693432,30695423,30697393,30699221,30700343,30702398,30704450,30706468,30708330,30710075,30712123,30714171,30716219,30718267,30720319,30722367,30724415,30726463,30728511,30730286,30731591,30733288,30735231,30737206,30739224,30741261,30743314,30745343,30747368,30749419,30751461,30753516,30755565,30757587,30759638,30761640,30763604,30765582,30767630,30769668,30771725,30773765,30775802,30777817,30779863,30781912,30783954,30785996,30788027,30790052,30791962,30793768,30795366,30796761,30798041,30799266,30800424,30801606,30802626,30803614,30804720,30805737,30806728,30807610,30808503,30809371,30810156,30810784,30811345,30811777,30811961,30812116,30812235,30812281,30812344,30814370,30816393,30818444,30820499,30822531,30824442,30826181,30827801,30828977,30829915,30831963,30834011,30836059,30838107,30840030,30842078,30844126,30846174,30848144,30850192,30852240,30854288,30856305,30858358,30860406,30862454,30864502,30866554,30868589,30870637,30872685,30874727,30876760,30878816,30880855,30882820,30884703,30886536,30888272,30890027,30891640,30893576,30895633,30897689,30899737,30901788,30903836,30905890,30907723,30909698,30911753,30913801,30915858,30917914,30919968,30922022,30924076,30926005,30928062,30930112,30932039,30933554,30935493,30937550,30939603,30941135,30942979,30945027,30947075,30949123,30951171,30953219,30955267,30957323,30959376,30961389,30963294,30965020,30966542,30967919,30969224,30970381,30971943,30974000,30976048,30978105,30980157,30982197,30984091,30985774,30986807,30987128,30988134,30989627,30991346,30993237,30995196,30997094,30999025,31001008,31002962,31004694,31006243,31007590,31008685,31009276,31009690,31011323,31013372,31015418,31016823,31017698,31019583,31021631,31023679,31025727,31027775,31029823,31031871,31033919,31035943,31037922,31039960,31041988,31043793,31045290,31046269,31047858,31049913,31051730,31053153,31054883,31056931,31058979,31061028,31063076,31065124,31067179,31069227,31071275,31073212,31075081,31076765,31078816,31080301,31081435,31082802,31084859,31086907,31088955,31091003,31093051,31095099,31097143,31098994,31100887,31102944,31104992,31107040,31109088,31111136,31113184,31115132,31116174,31117667,31119563,31121593,31123650,31125698,31127744,31129056,31130678,31132495,31134542,31136590,31138638,31140695,31142745,31144757,31146574,31147864,31148843,31149618,31150115,31150477,31150724,31150831,31152802,31154850,31156898,31158946,31160994,31163042,31165090,31167138,31169186,31171234,31173282,31175330,31177378,31179426,31181474,31183522,31185570,31187618,31188921,31190969,31193017,31195065,31197113,31199161,31201209,31203257,31205305,31206249,31206592,31207930,31209630,31211600,31213654,31215702,31217750,31219798,31221846,31223894,31225942,31227990,31230038,31232080,31233940,31235568,31237029,31238373,31239558,31240640,31241663,31242585,31243315,31244149,31245148,31245953,31246867,31248541,31250596,31252644,31254692,31256740,31258788,31260836,31262884,31264932,31266980,31269028,31271076,31273124,31275172,31277020,31278251,31279015,31279724,31281344,31283392,31285440,31287488,31289536,31290916,31292775,31294788,31296530,31297808,31298837,31299406,31300156,31301356,31303404,31305251,31306333,31306967,31308783,31310722,31312734,31314783,31316823,31318871,31320921,31322956,31324907,31326523,31328275,31330132,31332066,31334039,31336092,31338148,31340196,31342244,31344292,31346348,31348396,31350444,31352429,31354210,31355654,31356389,31357175,31358916,31360972,31363020,31365068,31367116,31369164,31371212,31373260,31375308,31377362,31379340,31381053,31382476,31383490,31384433,31384617,31385223,31387271,31389320,31391286,31393195,31394983,31396703,31398502,31400550,31402559,31404353,31405967,31407284,31408994,31410795,31412834,31414882,31416812,31418813,31419878,31421926,31423591,31425409,31427360,31429416,31431071,31432964,31434312,31435740,31436853,31438559,31440526,31442570,31444566,31446614,31448628,31450604,31452516,31454564,31456617,31458667,31460310,31461251,31462725,31464773,31466821,31468869,31470917,31472966,31473978,31475282,31477330,31479378,31481426,31483474,31484833,31485214,31487191,31489239,31491277,31493325,31495381,31497429,31499477,31501418,31503474,31505484,31506993,31509041,31511061,31512865,31514922,31516933,31518609,31520637,31522660,31524048,31525364,31527371,31528767,31529635,31531689,31533737,31535793,31537833,31538939,31539056,31539254,31540774,31542829,31544877,31546925,31548982,31551038,31553094,31555147,31557093,31559141,31561189,31563083,31565140,31567177,31569198,31571246,31573258,31575306,31577358,31579412,31581354,31583366,31585072,31586964,31588591,31590316,31591929,31593180,31594830,31596550,31598062,31599377,31600732,31602786,31604695,31606512,31608499,31610547,31612595,31614643,31616627,31618026,31619180,31619839,31621460,31623281,31624684,31626600,31628404,31630452,31632500,31634548,31636596,31638644,31640692,31642740,31644797,31646853,31648891,31650847,31652611,31654207,31655627,31656774,31657646,31659150,31661198,31663246,31665294,31667342,31669390,31670714,31671590,31673621,31675670,31677718,31679682,31681593,31683624,31685679,31687727,31689775,31691823,31693871,31695928,31697966,31699898,31701648,31703046,31703660,31704887,31706935,31708983,31711031,31713079,31714239,31714410,31715642,31717691,31719739,31721787,31723835,31725883,31727931,31729979,31732027,31733898,31735269,31735522,31736163,31737634,31739623,31741671,31743719,31745767,31747815,31749863,31751911,31753959,31756014,31758062,31760119,31762119,31763980,31765773,31767572,31769270,31770781,31772167,31773418,31774686,31775900,31776914,31777634,31778187,31778732,31779251,31779695,31780166,31780563,31780978,31781432,31781931,31782386,31782964,31783402,31783597,31784016,31784984,31786149,31787322,31788543,31789668,31790705,31791611,31792513,31793183,31793633,31793905,31794013,31794229,31795455,31797093,31798984,31801034,31803082,31805139,31807144,31809100,31811056,31812904,31814928,31816689,31818691,31820674,31822233,31823916,31825966,31828011,31830062,31832065,31834103,31836148,31838177,31840220,31842242,31844186,31846243,31848230,31850124,31852146,31854198,31856246,31858275,31859955,31861823,31863827,31865570,31867481,31869515,31871185,31872481,31874172,31876228,31878282,31880261,31882177,31884085,31885957,31887890,31889766,31891822,31893870,31895924,31897961,31899816,31901864,31903870,31905426,31906983,31908548,31909902,31910923,31911362,31911939,31912316,31912851,31913535,31914271,31915460,31917098,31918464,31919899,31921193,31922468,31923937,31925646,31927434,31929238,31931020,31932953,31934968,31936985,31939031,31941088,31943140,31945188,31947244,31949301,31951349,31953397,31955437,31957420,31959404,31961404,31963392,31965263,31967001,31968722,31970457,31972156,31973806,31975332,31976783,31978221,31979663,31981099,31982405,31983647,31984830,31986036,31987224,31988334,31989379,31990297,31991286,31992226,31993752,31995173,31996688,31998232,31999622,32001095,32002630,32004189,32005617,32007212,32008650,32010230,32011846,32013547,32015082,32016760,32018251,32019759,32021402,32023048,32024847,32026580,32028363,32030137,32031960,32033829,32035750,32037621,32039601,32041534,32043502,32045552,32047604,32049660,32051708,32053763,32055811,32057864,32059898,32061808,32063556,32065129,32066172,32067612,32069392,32071416,32073464,32075521,32077574,32078751,32078918,32080155,32082211,32084259,32086307,32087737,32089791,32090833,32092889,32094937,32096458,32098069,32100126,32102174,32104222,32106270,32107800,32109848,32111785,32113323,32114698,32116746,32118794,32120842,32122890,32124938,32126994,32128952,32130998,32133046,32135103,32137151,32139208,32141256,32143304,32145352,32147400,32149448,32151496,32153544,32155552,32157606,32159660,32161708,32163765,32165813,32167812,32169762,32171785,32173841,32175889,32177942,32179999,32182054,32184110,32186167,32188215,32190263,32192311,32193994,32195379,32197427,32199476,32201524,32203581,32205638,32207681,32209737,32211637,32213562,32215353,32216912,32218536,32219967,32221718,32223535,32225106,32226557,32227909,32229050,32229943,32230238,32231962,32234010,32236067,32238124,32240180,32242136,32243724,32244714,32244918,32245988,32248036,32250084,32252041,32253698,32255169,32256928,32258784,32259649,32259848,32260702,32261650,32262023,32262444,32262789,32263205,32263540,32263918,32264229,32264642,32265306,32266203,32267044,32267703,32268240,32268880,32270008,32270849,32271443,32272905,32274331,32275761,32277027,32278226,32279611,32280254,32280870,32281681,32282052,32282326,32282799,32283228,32283552,32284533,32285484,32285843,32286186,32286590,32287204,32287998,32288515,32289036,32289689,32290061,32290440,32291087,32291848,32292670,32293426,32293962,32295028,32295831,32296446,32297419,32298213,32298802,32299701,32300127,32300735,32301360,32302168,32303076,32303602,32303888,32304188,32304430,32304713,32305163,32305518,32305851,32306134,32306313,32306736,32307331,32308082,32308814,32309414,32309836,32310038,32310517,32311090,32311586,32312135,32312587,32313067,32313549,32313767,32314405,32315227,32315525,32315804,32316282,32316621,32317496,32318406,32319004,32319127,32319323,32319597,32319984,32320773,32321088,32321496,32321774,32322221,32322412,32323147,32323424,32323743,32324735,32325458,32325651,32325923,32326335,32326750,32327047,32327286,32327558,32327877,32328736,32329357,32329884,32330293,32331003,32331412,32331968,32332399,32332734,32333494,32333987,32334318,32334918,32335591,32336535,32336756,32336961,32337315,32337690,32338467,32338820,32339392,32339862,32340363,32340897,32341448,32341850,32342449,32342791,32343305,32343788,32344318,32344901,32345166,32345949,32346452,32346983,32347220,32347854,32348645,32349246,32350115,32351323,32352445,32353559,32354633,32355690,32356774,32357171,32357606,32358768,32359826,32360818,32361517,32362101,32363511,32363781,32364222,32364555,32364702,32365050,32365278,32365488,32365627,32365877,32366161,32366578,32366711,32366844,32366977,32367283,32367741,32368379,32368695,32369391,32369928,32370350,32371233,32371788,32372330,32372476,32372802,32373436,32373714,32374064,32374336,32375069,32375477,32376090,32376555,32376855,32377171,32377444,32377729,32378298,32378484,32378776,32378981,32379237,32379572,32379739,32380221,32380503,32380819,32381007,32381293,32381474,32381682,32382202,32382510,32382966,32383335,32384038,32385136,32385426,32385861,32386314,32386760,32387388,32388032,32388375,32388952,32390056,32390865,32391684,32392306,32392815,32393171,32393533,32393889,32394228,32394681,32395126,32395382,32395628,32395897,32396047,32396250,32397011,32397804,32398658,32399449,32400032,32400655,32401177,32401477,32401963,32402257,32402714,32403482,32403665,32404053,32404397,32404964,32405769,32406637,32407404,32407901,32408306,32408863,32409130,32409496,32409700,32410002,32410241,32410799,32411189,32411802,32412209,32412864,32413357,32413949,32414705,32415264,32415330,32415663,32416122,32416700,32417521,32417958,32418382,32418769,32419119,32419483,32419832,32420158,32421393,32422678,32423880,32425231,32426348,32427718,32429693,32431507,32432023,32432145,32432303,32432755,32433322,32433480,32433674,32433797,32434278,32434468,32434854,32435442,32435906,32437046,32437866,32438524,32438746,32438995,32439406,32439631,32440003,32440234,32440408,32440750,32440954,32441451,32441829,32442436,32442895,32443385,32444067,32444753,32445667,32445850,32446466,32446692,32447032,32447395,32447823,32448267,32448539,32448763,32449259,32449562,32449905,32450180,32450464,32450767,32451039,32451597,32451840,32452246,32452439,32452897,32453311,32453709,32453829,32454249,32454849,32455399,32455938,32456117,32456383,32456834,32457232,32457698,32457948,32458406,32459075,32459374,32460132,32460533,32461035,32461708,32462067,32462624,32463522,32463685,32463863,32464018,32464256,32464412,32464567,32464997,32465170,32465332,32465483,32465648,32465838,32466167,32466317,32466499,32466832,32467140,32467474,32468171,32468278,32468504,32468756,32468975,32469407,32469850,32470216,32470763,32471256,32471430,32471623,32471800,32472294,32472588,32472966,32473633,32473857,32474239,32474431,32474619,32474837,32475208,32475327,32475773,32476328,32476491,32476730,32477024,32477182,32477497,32477617,32477758,32478432,32478943,32479414,32479804,32480199,32480623,32480839,32481082,32481361,32481806,32482118,32482367,32483268,32483609,32483991,32484346,32484763,32485181,32485816,32486746,32487485,32488482,32489291,32490028,32491625,32492639,32493764,32495066,32496450,32497889,32499370,32500814,32502357,32503879,32505429,32507001,32508482,32510001,32511492,32512984,32514587,32516074,32517650,32519118,32520641,32522150,32523611,32524915,32526237,32527436,32528696,32530065,32531418,32532647,32533846,32534969,32536059,32537477,32538803,32540473,32542382,32544109,32545869,32547603,32549268,32550981,32552720,32554439,32556153,32557896,32559586,32561298,32563062,32564830,32566601,32568301,32569996,32571682,32573357,32575008,32576683,32578402,32580095,32581851,32583542,32585243,32586885,32588529,32590197,32591848,32593434,32595023,32596661,32598559,32600114,32601836,32603526,32605121,32606771,32608421,32610145,32611873,32613684,32615514,32617324,32619135,32620986,32622790,32624502,32626274,32627946,32629711,32631538,32633387,32635145,32636783,32638543,32640387,32642094,32643869,32645637,32647394,32649110,32650767,32652382,32654028,32655664,32657413,32659070,32660696,32662272,32663856,32665522,32667171,32668813,32670531,32672221,32673934,32675586,32677306,32678987,32680746,32682456,32684086,32685844,32687565,32689263,32690989,32692647,32694298,32695983,32697671,32699283,32700942,32702544,32704159,32705726,32707239,32708748,32710221,32711919,32713044,32714132,32714984,32715674,32716547,32717857,32719262,32720733,32722037,32723166,32724323,32725527,32726660,32728019,32729387,32730620,32731940,32733228,32734505,32735656,32736661,32737520,32738246,32739113,32740065,32740791,32741431,32742271,32743306,32744394,32745450,32746650,32748225,32749785,32751198,32752663,32754023,32755639,32757075,32758542,32760092,32761623,32762997,32764292,32765586,32766827,32767563,32767802,32768009,32768258,32768481,32768704,32769601,32771029,32772467,32773663,32775243,32776889,32778307,32779519,32781003,32782093,32782830,32784193,32785519,32786379,32787840,32789458,32790872,32792523,32794085,32795678,32797101,32798450,32799766,32801416,32802731,32804168,32805741,32807437,32808867,32810280,32811641,32813246,32814645,32816302,32817496,32819110,32820812,32822388,32824126,32825606,32827106,32828841,32830047,32831760,32833019,32834704,32836143,32837318,32838858,32840392,32842077,32843561,32844934,32846435,32847871,32849252,32850825,32852466,32854079,32855502,32856759,32858393,32859828,32861395,32862995,32864359,32865742,32867254,32868935,32870172,32871782,32872933,32874396,32875891,32877503,32878714,32880147,32881616,32883264,32884857,32886526,32887660,32889224,32890563,32892122,32893150,32894739,32896189,32897888,32898894,32900405,32901893,32903372,32904749,32906216,32907765,32909373,32910968,32912591,32914134,32915492,32916902,32918604,32920116,32921872,32923138,32924946,32926226,32928068,32929439,32931038,32932261,32934064,32935738,32937262,32938769,32940225,32942109,32943506,32944898,32946679,32948353,32949556,32951167,32952887,32954617,32956453,32957877,32959560,32961321,32963055,32964589,32966302,32968064,32969333,32971019,32972326,32973925,32975486,32977214,32978543,32980260,32981948,32983522,32985101,32986708,32988279,32990123,32991594,32993394,32994909,32996800,32998685,33000597,33002540,33004594,33006590,33008646,33010676,33012700,33014710,33016746,33018774,33020808,33022831,33024879,33026935,33028979,33031032,33033023,33035034,33037030,33039057,33041081,33043121,33045170,33047226,33049254,33051294,33053344,33055358,33057376,33059401,33061443,33063487,33065519,33067568,33069625,33071653,33073668,33075689,33077520,33079511,33081545,33083587,33085628,33087666,33089697,33091720,33093761,33095775,33097765,33099760,33101751,33103733,33105751,33107748,33109771,33111813,33113839,33115882,33117908,33119897,33121862,33123852,33125852,33127857,33129841,33131883,33133893,33135918,33137974,33140002,33141992,33143955,33145955,33147976,33149961,33151966,33154018,33156070,33158117,33160147,33162153,33164129,33166117,33168154,33170176,33172209,33174240,33176288,33178340,33180388,33182426,33184456,33186508,33188537,33190568,33192570,33194621,33196610,33198650,33200653,33202580,33204554,33206517,33208497,33210468,33212488,33214424,33216375,33218367,33220360,33222337,33224273,33226280,33228268,33230262,33232183,33234149,33236111,33238101,33240077,33242071,33244001,33245983,33247993,33249953,33251897,33253909,33255877,33257867,33259817,33261790,33263786,33265778,33267742,33269720,33271689,33273673,33275704,33277687,33279695,33281688,33283665,33285674,33287631,33289647,33291565,33293564,33295529,33297527,33299524,33301502,33303477,33305424,33307406,33309378,33311387,33313346,33315355,33317356,33319346,33321388,33323407,33325403,33327404,33329400,33331373,33333364,33335333,33337306,33339315,33341319,33343265,33345220,33347212,33349250,33351212,33353186,33355225,33357250,33359261,33361241,33363285,33365309,33367258,33369315,33371318,33373341,33375367,33377399,33379399,33381421,33383454,33385489,33387486,33389464,33391445,33393455,33395473,33397464,33399469,33401291,33403292,33405349,33407395,33409444,33411411,33413384,33415295,33417198,33418945,33420855,33422738,33424660,33426414,33428346,33430172,33432137,33434128,33436106,33437941,33439868,33441813,33443658,33445528,33447386,33449370,33451317,33453275,33455186,33457123,33459036,33460965,33462850,33464685,33466692,33468656,33470563,33472532,33474343,33476319,33478172,33480062,33481908,33483798,33485759,33487747,33489633,33491664,33493646,33495547,33497410,33499251,33501169,33503028,33504979,33506943,33508851,33510791,33512797,33514756,33516742,33518502,33520448,33522181,33524166,33526106,33528066,33529996,33531864,33533831,33535776,33537734,33539553,33541570,33543529,33545512,33547291,33548999,33550846,33552589,33554497,33556361,33558246,33560064,33561902,33563762,33565607,33567574,33569501,33571413,33573347,33575263,33577151,33579097,33581009,33582910,33584825,33586723,33588628,33590575,33592469,33594460,33596364,33598317,33600206,33602082,33604009,33605851,33607756,33609548,33611466,33613388,33615184,33617134,33618657,33620433,33621767,33623505,33625330,33627070,33628945,33630913,33632845,33634817,33636798,33638790,33640786,33642711,33644684,33646694,33648652,33650607,33652585,33654359,33655779,33657211,33658635,33660074,33661561,33663086,33664474,33666086,33667574,33669022,33670570,33672246,33674022,33675641,33677272,33679171,33681188,33683168,33685094,33687111,33689084,33690899,33692839,33694772,33696781,33698764,33700693,33702676,33704596,33706552,33708386,33710247,33712208,33714220,33716231,33718128,33720148,33722052,33723993,33725894,33727761,33729751,33731714,33733739,33735630,33737659,33739597,33741509,33743393,33745242,33747248,33749169,33751193,33753085,33755062,33756913,33758818,33760719,33762583,33764550,33766526,33768558,33770464,33772422,33774361,33776224,33778123,33780000,33781999,33784019,33786002,33787938,33789939,33791858,33793706,33795632,33797559,33799524,33801469,33803385,33805326,33807265,33809175,33811135,33813054,33814944,33816683,33818437,33820068,33821732,33823398,33825080,33826875,33828580,33830268,33831931,33833634,33835358,33837064,33838790,33840499,33842151,33843842,33845523,33847222,33848953,33850669,33852390,33854019,33855666,33857324,33859033,33860774,33862525,33864216,33865829,33867418,33869083,33870872,33872581,33874244,33875880,33877528,33879185,33880835,33882596,33884339,33886063,33887726,33889363,33891026,33892787,33894578,33896343,33897994,33899591,33901229,33902992,33904880,33906736,33908500,33910236,33912017,33913811,33915674,33917517,33919359,33921149,33922932,33924770,33926512,33928302,33930022,33931734,33933413,33935132,33936859,33938496,33940097,33941859,33943592,33945310,33946922,33948766,33950409,33952031,33953829,33955535,33957066,33958773,33960483,33962213,33963861,33965624,33967372,33969141,33970823,33972609,33974394,33976210,33977870,33979621,33981373,33983099,33984844,33986593,33988368,33990335,33992234,33994236,33996244,33998235,34000196,34002108,34004046,34005969,34007984,34009957,34011942,34013955,34015944,34017934,34019935,34021902,34023897,34025900,34027878,34029842,34031832,34033832,34035824,34037809,34039766,34041762,34043736,34045682,34047656,34049671,34051670,34053659,34055620,34057602,34059570,34061556,34063527,34065506,34067471,34069433,34071419,34073382,34075347,34077319,34079317,34081281,34083247,34085202,34087190,34089137,34091109,34093063,34095018,34096993,34098950,34100925,34102885,34104860,34106840,34108803,34110762,34112725,34114681,34116653,34118605,34120578,34122530,34124496,34126450,34128415,34130368,34132333,34134285,34136258,34138224,34140109,34142042,34143941,34145844,34147755,34149675,34151565,34153491,34155390,34157297,34159221,34161123,34163024,34164934,34166843,34168745,34170683,34172539,34174455,34176366,34178208,34180105,34182030,34183866,34185753,34187693,34189533,34191405,34193356,34195198,34197050,34199000,34200838,34202678,34204637,34206492,34208306,34210269,34212106,34213925,34215896,34217725,34219551,34221436,34223233,34225064,34226964,34228732,34230576,34232464,34234220,34236085,34237982,34239729,34241608,34243497,34245263,34247143,34249006,34250785,34252674,34254509,34256317,34258207,34260012,34261885,34263800,34265618,34267496,34269406,34271210,34273102,34274963,34276811,34278723,34280550,34282399,34284314,34286118,34288004,34289869,34291705,34293619,34295461,34297309,34299221,34301071,34302973,34304857,34306712,34308615,34310499,34312354,34314252,34316136,34317987,34319880,34321763,34323612,34325505,34327391,34329236,34331130,34333016,34334861,34336752,34338641,34340487,34342378,34344271,34346113,34348014,34349925,34351765,34353675,34355584,34357421,34359336,34361245,34363091,34365011,34366901,34368749,34370676,34372551,34374407,34376327,34378182,34380042,34381963,34383827,34385704,34387611,34389465,34391324,34393249,34395168,34397082,34399007,34400931,34402856,34404767,34406687,34408614,34410527,34412442,34414361,34416278,34418185,34420096,34421998,34423926,34425852,34427831,34429804,34431799,34433784,34435763,34437752,34439748,34441733,34443711,34445689,34447692,34449601,34451564,34453457,34455383,34457268,34459185,34461079,34463010,34464850,34466779,34468683,34470561,34472484,34474453,34476419,34478377,34480348,34482311,34484256,34486240,34488162,34490148,34492080,34494056,34495996,34497961,34499901,34501875,34503762,34505719,34507545,34509536,34511367,34513325,34515193,34517102,34518992,34520869,34522793,34524647,34526619,34528441,34530428,34532272,34534211,34536057,34537931,34539799,34541611,34543510,34545316,34547245,34549054,34550938,34552799,34554639,34556520,34558337,34560258,34562037,34563957,34565776,34567651,34569514,34571564,34573619,34575649,34577657,34579679,34581672,34583699,34585719,34587732,34589773,34591796,34593845,34595880,34597913,34599937,34601937,34603766,34605759,34607760,34609797,34611840,34613895,34615921,34617953,34619980,34621989,34623995,34626008,34628046,34630072,34632104,34634156,34636190,34638225,34640251,34642277,34644242,34646195,34648200,34650203,34652219,34654269,34656308,34658325,34660345,34662338,34664330,34666329,34668301,34670295,34672324,34674361,34676376,34678392,34680405,34682424,34684402,34686413,34688409,34690388,34692374,34694391,34696434,34698446,34700466,34702485,34704492,34706470,34708486,34710475,34712443,34714417,34716429,34718469,34720482,34722533,34724583,34726610,34728615,34730647,34732660,34734681,34736640,34738679,34740724,34742777,34744819,34746872,34748918,34750967,34752984,34755010,34757032,34759082,34761130,34763178,34765177,34767193,34769161,34771166,34773138,34775141,34777145,34779113,34781124,34783116,34785077,34787084,34789064,34791007,34792951,34794920,34796908,34798917,34800897,34802904,34804900,34806822,34808763,34810742,34812669,34814469,34816379,34818409,34820405,34822357,34824369,34826353,34828364,34830338,34832323,34834326,34836289,34838182,34840077,34841995,34843978,34845949,34847863,34849765,34851737,34853744,34855687,34857622,34859465,34861343,34863321,34865317,34867224,34869079,34871007,34872974,34874924,34876793,34878668,34880542,34882388,34884291,34886246,34888172,34890113,34892066,34893913,34895795,34897657,34899545,34901526,34903424,34905397,34907359,34909244,34911114,34913001,34914894,34916852,34918854,34920787,34922681,34924496,34926329,34928217,34930148,34932123,34933980,34935856,34937681,34939342,34941283,34943209,34945104,34947025,34948940,34950784,34952663,34954596,34956434,34958324,34960203,34962090,34963955,34965816,34967636,34969490,34971455,34973420,34975338,34977279,34979171,34981012,34982861,34984740,34986572,34988415,34990342,34992302,34994270,34996183,34998134,34999955,35001852,35003809,35005746,35007783,35009812,35011819,35013772,35015719,35017722,35019693,35021703,35023658,35025602,35027537,35029590,35031600,35033587,35035400,35037371,35039372,35041382,35043399,35045358,35047348,35049364,35051372,35053374,35055348,35057331,35059330,35061353,35063367,35065336,35067209,35069176,35071157,35073127,35075149,35077118,35079131,35081172,35083180,35085172,35087182,35089082,35091096,35093102,35095084,35097068,35099088,35101112,35103109,35105033,35106781,35108562,35110449,35112466,35114477,35116466,35118491,35120492,35122465,35124428,35126388,35128349,35130306,35132196,35134158,35136125,35138103,35140043,35142046,35144011,35146036,35148035,35150028,35151988,35153940,35155933,35157908,35159872,35161728,35163671,35165612,35167581,35169463,35171356,35173299,35175243,35177116,35179031,35181025,35183000,35184986,35186974,35188980,35190993,35192986,35195010,35196909,35198811,35200800,35202726,35204437,35206345,35208299,35210248,35212204,35214149,35216093,35218110,35220094,35222096,35224079,35226060,35228015,35230041,35232023,35233984,35235980,35237925,35239854,35241818,35243765,35245741,35247674,35249643,35251616,35253610,35255620,35257644,35259636,35261613,35263582,35265603,35267567,35269540,35271508,35273479,35275426,35277425,35279371,35281319,35283308,35285277,35287273,35289246,35291177,35293167,35295186,35297171,35299123,35301080,35303008,35305049,35306998,35308985,35310989,35312972,35314985,35316959,35318925,35320953,35322938,35324910,35326930,35328851,35330894,35332839,35334781,35336763,35338721,35340706,35342693,35344685,35346633,35348537,35350496,35352490,35354426,35356379,35358383,35360347,35362265,35364231,35366215,35368229,35370233,35372169,35374124,35376089,35378025,35380021,35381932,35383874,35385832,35387670,35389549,35391499,35393468,35395362,35397260,35399186,35401097,35403061,35405012,35406921,35408924,35410899,35412844,35414839,35416812,35418747,35420776,35422586,35424575,35426535,35428535,35430562,35432548,35434563,35436614,35438669,35440531,35442546,35444509,35446557,35448579,35450607,35452661,35454694,35456722,35458669,35460676,35462674,35464687,35466720,35468744,35470769,35472763,35474803,35476786,35478825,35480828,35482863,35484908,35486936,35488991,35491021,35493066,35495023,35497039,35499022,35501046,35503085,35505109,35507154,35509204,35511254,35513232,35515239,35517207,35519263,35521304,35523332,35525372,35527416,35529452,35531388,35533339,35535293,35537209,35539101,35541106,35543069,35545052,35547052,35549047,35551081,35553106,35555023,35557019,35558974,35561001,35562961,35564960,35566891,35568757,35570748,35572721,35574697,35576708,35578705,35580640,35582435,35584402,35586356,35587991,35589852,35591646,35593309,35594923,35596557,35598108,35599909,35601271,35602778,35604319,35605688,35607285,35608565,35610055,35611526,35612684,35614203,35615371,35616776,35618085,35619339,35620731,35621877,35623292,35624428,35625386,35626972,35628367,35629515,35630764,35632097,35633432,35634373,35635651,35637031,35638155,35639772,35640886,35642273,35643437,35644947,35646193,35647484,35648914,35650426,35651573,35653218,35654682,35656148,35657737,35659088,35660687,35661993,35663495,35665023,35666188,35667819,35668983,35670429,35671594,35673172,35674390,35675780,35677164,35678178,35679387,35680897,35682339,35683450,35684719,35686073,35687400,35688358,35689671,35691105,35692265,35693826,35694915,35696280,35697372,35699030,35700247,35701704,35703169,35704556,35706048,35707510,35709071,35710515,35712111,35713601,35714878,35716322,35717827,35719223,35720459,35722035,35723307,35724665,35725829,35727444,35728671,35730103,35731413,35732359,35733705,35735137,35736540,35737623,35738947,35740428,35741536,35742535,35743807,35745192,35746365,35747854,35748986,35750364,35751496,35753108,35754339,35755843,35757319,35758666,35760182,35761608,35763144,35764615,35766130,35767714,35768925,35770423,35771905,35773092,35774489,35775962,35777291,35778671,35779823,35781395,35782546,35783956,35785293,35786135,35787695,35789016,35790313,35791519,35792735,35794334,35795192,35796416,35797797,35798982,35800497,35801527,35802880,35804167,35805503,35806868,35808081,35809507,35811029,35812273,35813889,35815375,35816860,35818415,35819730,35821381,35822664,35824181,35825701,35826977,35828622,35829773,35831159,35832415,35833799,35835200,35836496,35837939,35839034,35840005,35841605,35843010,35844173,35845425,35846780,35848267,35849171,35850437,35851885,35853072,35854680,35855725,35857109,35858193,35859829,35861074,35862474,35863928,35865343,35866698,35868164,35869747,35871175,35872742,35874205,35875590,35876977,35878454,35879944,35881168,35882828,35883994,35885407,35886570,35888182,35889346,35890775,35892061,35892988,35894323,35895719,35897152,35898231,35899550,35901057,35902091,35903140,35904457,35905735,35906945,35908472,35909644,35911022,35912207,35913813,35915070,35916547,35918044,35919430,35920852,35922302,35923901,35925440,35927037,35928609,35929860,35931374,35932932,35934257,35935307,35936991,35938183,35939528,35940676,35942234,35943450,35944749,35946111,35947099,35948300,35949782,35951218,35952305,35953612,35955131,35956140,35957168,35958540,35959785,35960872,35962367,35963502,35964902,35966046,35967677,35968799,35970204,35971734,35973186,35974613,35976146,35977739,35979233,35980788,35982389,35983701,35985154,35986707,35988064,35989164,35990872,35992064,35993443,35994583,35996175,35997361,35998621,36000022,36001123,36002039,36003637,36005108,36006266,36007522,36008879,36010246,36011176,36012472,36013854,36014990,36016537,36017615,36018980,36020269,36021867,36023109,36024340,36025858,36027398,36028776,36030440,36031877,36033388,36034962,36036375,36038077,36039329,36040838,36042370,36043577,36045204,36046449,36047825,36049160,36050433,36051929,36053140,36054616,36055811,36056718,36058380,36059686,36060935,36062165,36063376,36065037,36065856,36067108,36068564,36069822,36071478,36072528,36073859,36075072,36076497,36077963,36079291,36080725,36082230,36083481,36085166,36086664,36088195,36089790,36091193,36092888,36094193,36095753,36097262,36098444,36100098,36101341,36102763,36104117,36105354,36106871,36108113,36109611,36110836,36111671,36113343,36114643,36115899,36117126,36118325,36119953,36120853,36122041,36123448,36124885,36126312,36127624,36128893,36130251,36131545,36133188,36134399,36135931,36137493,36138787,36140424,36141974,36143630,36145196,36146745,36148358,36149747,36150974,36152207,36153500,36154933,36156527,36158116,36159564,36160885,36162108,36163672,36165196,36166570,36168321,36169874,36171191,36172427,36173867,36175343,36176770,36178487,36180017,36181486,36182833,36184083,36185571,36186958,36188331,36189978,36191568,36193158,36194594,36195796,36197187,36198544,36199768,36201233,36202947,36204181,36205303,36206600,36207890,36209622,36211007,36212277,36213735,36215402,36216572,36218275,36219950,36221835,36223780,36225672,36227532,36229459,36231243,36232997,36234829,36236737,36238503,36240339,36241931,36243200,36244938,36246633,36248409,36250149,36251853,36253551,36255002,36255735,36257050,36259054,36261044,36262856,36264405,36265554,36266904,36268706,36270306,36272055,36273794,36275704,36277427,36279162,36280837,36282728,36284429,36286208,36288106,36289999,36291858,36293521,36295196,36297139,36298819,36300800,36302611,36304548,36306517,36308468,36310393,36312260,36314020,36315583,36317484,36319301,36321193,36323112,36324924,36326569,36328301,36329850,36331563,36333319,36334985,36336579,36338267,36339810,36341223,36342919,36344713,36346729,36348736,36350719,36352627,36354621,36356650,36358648,36360590,36362608,36364640,36366645,36368594,36370598,36372632,36374606,36376589,36378511,36380468,36382389,36384389,36386336,36388306,36390266,36392290,36394294,36396299,36398307,36400323,36402354,36404356,36406352,36408176,36410181,36412229,36414286,36416341,36418325,36420259,36422107,36423730,36425694,36427551,36429502,36431388,36433299,36435206,36437119,36439014,36440910,36442805,36444770,36446627,36448530,36450507,36452402,36454313,36456239,36458115,36460009,36461338,36463084,36465041,36466743,36468241,36469726,36470976,36472563,36474290,36475899,36477517,36479363,36480923,36482507,36484105,36485696,36487210,36488761,36490397,36492047,36493619,36494878,36496166,36497833,36499447,36500707,36502066,36504036,36505888,36507647,36509410,36511181,36512888,36514679,36516546,36518267,36519933,36521601,36523347,36524970,36526589,36528439,36530184,36531482,36532987,36534690,36536166,36537623,36538857,36540213,36541971,36543463,36544697,36545887,36547331,36548960,36550201,36551745,36553727,36555724,36557697,36559671,36561641,36563551,36565375,36566904,36568794,36570674,36572566,36574160,36575973,36577958,36579839,36581720,36583608,36585393,36587167,36588992,36590698,36592606,36594126,36595549,36597263,36598725,36600102,36601664,36603281,36604697,36606442,36607825,36609560,36610988,36612698,36614298,36616147,36617648,36619387,36620916,36622687,36624160,36625620,36627227,36628726,36630611,36631881,36633137,36634460,36636246,36638081,36639891,36641604,36642999,36644467,36646134,36647893,36649452,36650894,36652547,36654179,36655813,36657481,36659033,36660588,36662252,36663863,36665211,36666790,36668220,36669919,36671538,36672947,36674562,36676093,36677721,36679378,36680874,36682104,36683696,36685229,36686461,36687758,36689122,36690352,36691674,36693016,36694560,36695770,36697009,36698451,36699803,36701153,36702539,36703911,36705226,36706826,36708420,36709985,36711878,36713340,36714819,36716676,36718508,36720360,36722274,36723828,36725801,36727577,36729194,36731133,36732776,36734734,36735966,36737817,36739727,36741224,36742937,36744653,36746345,36747999,36749583,36751049,36752668,36754144,36755710,36757199,36758763,36760350,36761899,36763423,36764859,36766463,36768008,36769512,36770929,36772518,36773999,36775806,36777680,36779597,36781457,36783295,36785045,36786508,36788006,36789613,36791119,36793027,36794969,36796894,36798737,36800641,36802515,36804423,36806391,36807392,36807945,36808537,36809023,36809760,36810410,36810963,36811551,36812177,36813985,36815956,36817949,36819906,36821837,36823805,36825781,36827740,36829682,36831330,36832991,36834599,36836242,36838015,36839578,36841304,36842885,36844578,36846121,36847670,36849317,36850816,36852325,36853815,36855193,36856684,36858050,36859652,36861171,36862406,36863547,36864977,36866322,36867899,36869352,36870760,36872117,36873689,36875131,36876738,36878181,36879583,36880972,36882363,36883808,36885217,36886583,36888040,36889884,36891653,36893475,36895357,36897237,36899129,36900926,36902679,36904487,36906149,36907861,36909641,36911472,36913291,36915039,36916749,36918413,36919496,36920282,36921109,36921985,36923485,36925200,36926862,36928481,36930142,36931781,36933374,36934967,36936624,36938391,36940056,36941746,36943399,36945073,36946911,36948713,36950587,36951953,36953736,36955235,36956964,36958547,36960332,36961836,36963496,36965424,36967110,36968945,36970781,36972632,36974193,36976033,36977880,36979619,36980683,36981749,36982705,36983806,36984856,36985938,36986911,36987975,36989660,36991210,36992816,36994350,36995924,36997505,36999055,37000575,37002241,37003675,37005226,37006815,37008469,37009731,37010835,37011865,37012915,37014235,37015663,37017266,37019030,37020632,37022065,37023168,37024604,37026150,37027276,37028559,37030072,37031598,37033058,37034656,37036271,37037801,37039366,37041010,37042525,37043850,37044732,37045574,37046614,37047198,37048188,37048905,37049955,37051344,37052813,37053570,37054145,37055021,37055582,37056402,37056939,37057638,37058362,37059079,37059942,37060415,37061235,37061936,37062871,37063382,37063907,37064777,37065469,37066328,37066827,37067685,37068389,37069268,37069695,37070139,37071041,37071620,37072370,37072668,37073258,37073518,37073730,37074306,37074470,37075067,37075260,37075872,37076059,37076538,37076685,37076851,37077324,37077363,37077924,37078077,37078655,37078882,37079108,37080647,37082077,37083514,37084717,37085945,37087116,37088490,37089470,37090479,37091478,37092481,37093454,37094431,37095430,37096420,37097952,37099328,37100720,37102166,37103666,37105142,37106520,37107869,37109443,37110893,37112393,37113914,37115490,37117088,37118574,37120113,37121622,37123198,37124609,37126040,37127440,37128859,37130292,37131686,37133100,37134598,37135982,37137386,37138752,37140127,37141238,37142179,37143147,37144089,37145198,37146123,37147058,37147988,37149067,37149985,37150929,37151837,37152837,37154245,37155644,37157038,37158440,37159584,37160493,37161444,37162379,37163832,37165445,37167022,37168587,37170108,37171634,37173167,37174788,37176387,37177953,37179305,37180641,37181961,37183181,37184502,37185832,37187177,37188724,37190269,37191791,37193116,37194638,37195962,37197223,37198465,37200029,37201672,37203380,37204941,37206552,37208056,37209839,37211544,37213354,37214949,37216156,37217330,37218831,37220240,37221726,37222940,37224248,37225630,37227068,37228720,37230140,37231718,37233152,37234611,37236263,37237966,37239606,37241277,37242848,37244516,37246149,37247792,37249544,37251177,37252888,37254543,37256158,37257752,37259407,37261041,37262548,37264291,37265963,37267586,37269282,37270757,37272401,37274016,37275662,37277317,37278927,37280627,37282312,37283975,37285579,37287241,37288891,37290445,37292257,37293896,37295509,37297130,37298924,37300626,37302239,37303874,37305509,37307358,37309035,37310709,37312383,37314153,37315850,37317508,37319199,37320851,37322062,37323031,37323988,37324940,37326322,37327815,37329366,37330846,37332442,37333762,37335084,37336463,37337736,37339053,37340228,37341472,37342739,37344062,37345236,37346190,37347141,37348589,37349809,37350956,37352045,37353274,37354410,37355308,37356286,37357274,37358859,37360366,37361892,37363447,37364929,37366441,37367961,37369504,37371188,37372600,37373991,37375369,37376751,37378132,37379508,37380850,37382268,37383986,37385524,37387062,37388629,37390193,37391725,37393270,37394780,37396420,37398086,37399698,37401322,37402968,37404602,37406215,37407821,37409483,37411249,37412712,37414147,37415556,37416985,37418463,37419900,37421303,37422734,37424617,37426371,37428097,37429781,37431526,37433271,37434961,37436662,37438564,37440317,37442025,37443719,37445414,37447143,37448813,37450496,37452187,37453511,37454509,37455744,37456789,37457894,37458950,37460187,37461336,37462453,37463521,37464469,37465244,37465869,37466589,37467234,37468854,37470495,37472229,37473917,37475641,37477324,37479050,37480743,37482512,37484316,37486049,37487734,37489348,37491067,37492746,37494486,37496179,37498068,37499812,37501583,37503337,37505094,37506885,37508658,37510433,37512182,37514030,37515745,37517424,37519046,37520730,37522383,37524103,37525763,37527480,37528944,37530458,37531841,37533464,37534473,37535493,37536510,37537549,37539397,37541223,37543042,37544866,37546535,37548379,37550168,37552018,37553827,37555243,37556416,37557630,37559198,37560694,37561692,37562737,37564049,37565801,37567398,37569010,37570593,37572129,37573772,37575387,37576975,37578725,37580247,37581694,37583109,37584586,37585986,37587458,37588884,37590345,37591768,37593561,37594922,37596675,37597971,37599464,37600899,37602397,37603807,37605493,37607140,37608750,37610369,37611895,37613483,37615074,37616647,37618314,37619838,37621311,37622754,37624119,37625643,37627089,37628524,37629927,37631721,37633536,37635366,37637216,37638890,37640717,37642518,37644338,37646088,37647791,37649425,37651053,37652746,37654344,37656004,37657604,37659305,37660892,37662393,37663849,37665335,37666724,37668239,37669706,37671151,37672725,37674562,37676363,37678225,37680125,37681812,37683646,37685449,37687328,37688996,37690618,37692256,37693874,37695425,37697082,37698721,37700318,37701993,37703600,37705044,37706486,37707972,37709377,37710866,37712308,37713766,37715333,37717164,37718977,37720826,37722531,37724400,37726204,37728056,37729876,37731186,37732237,37733917,37734593,37735273,37736457,37737162,37738226,37738994,37739680,37741177,37742243,37742889,37743602,37744763,37746032,37747030,37748279,37749661,37750957,37751561,37752721,37753995,37755173,37756490,37757773,37759519,37760732,37761692,37762647,37764289,37765876,37767448,37769183,37770836,37772559,37774121,37775889,37777380,37778861,37780129,37780991,37782187,37783763,37785260,37786273,37787267,37788282,37789303,37790623,37791681,37792725,37793814,37795149,37797035,37799065,37801091,37803100,37805129,37807146,37809161,37811140,37813168,37815210,37817234,37819252,37821237,37823252,37825254,37827248,37829225,37831251,37833273,37835303,37837313,37839340,37841356,37843371,37845316,37847342,37849381,37851421,37853407,37855409,37857418,37859426,37861425,37863408,37865457,37867382,37869294,37871202,37873075,37874978,37876895,37878733,37880604,37882484,37884400,37886274,37888159,37889984,37891855,37893682,37895572,37897517,37899194,37900859,37902520,37904195,37905868,37907518,37909173,37910802,37912591,37914233,37915903,37917558,37919189,37920854,37922502,37924113,37925782,37927328,37928760,37930213,37931634,37933064,37934499,37935904,37937287,37938854,37940354,37941857,37943376,37944874,37946210,37947744,37949269,37950900,37952327,37953874,37955354,37957040,37958468,37959933,37961462,37963091,37964469,37965842,37967323,37968801,37970766,37972435,37973934,37975598,37977196,37978772,37980285,37981870,37983579,37985120,37986695,37988317,37989993,37991729,37993356,37994956,37996495,37998165,37999715,38001284,38002846,38004399,38005918,38007497,38009032,38010459,38012049,38013513,38015251,38016798,38018444,38020030,38021701,38023350,38024993,38026779,38028490,38029974,38031690,38033620,38035469,38037175,38038909,38040800,38042744,38044675,38046617,38048604,38050555,38052490,38054400,38056334,38058168,38060005,38061879,38063861,38065717,38067577,38069447,38071275,38073071,38074847,38076639,38078423,38080436,38082390,38084355,38086319,38088244,38090145,38092047,38093929,38095913,38097852,38099735,38101626,38103477,38105297,38107137,38108960,38110742,38112744,38114735,38116724,38118692,38120636,38122578,38124501,38126403,38128373,38130310,38132125,38133939,38135674,38137448,38139211,38140982,38142744,38144655,38146496,38148352,38150120,38151921,38153746,38155560,38157364,38159135,38160830,38162265,38163741,38165180,38166599,38168032,38169447,38170874,38172477,38174436,38176367,38178334,38180312,38182253,38184156,38186064,38187981,38189884,38191743,38193659,38195657,38197593,38199551,38201439,38203341,38205230,38207162,38209043,38210976,38212682,38214170,38215697,38217300,38218879,38220484,38222061,38223566,38225407,38227208,38229017,38230813,38232567,38234315,38236047,38237781,38239505,38241077,38242420,38243686,38244982,38246397,38247657,38249019,38250382,38251949,38253434,38254924,38256417,38257989,38259568,38261070,38262542,38263992,38265648,38267336,38268817,38270499,38272134,38273707,38275268,38276753,38278112,38279452,38280769,38282022,38283324,38284496,38285758,38287459,38289347,38291201,38293079,38294994,38296882,38298758,38300624,38302498,38304488,38306395,38308274,38310133,38312024,38313903,38315790,38317667,38319569,38321019,38322439,38323814,38325219,38326693,38328175,38329638,38331107,38332890,38334561,38336262,38338005,38339683,38341289,38342878,38344429,38346106,38347631,38349180,38350759,38352383,38354110,38355824,38357522,38359156,38360873,38362334,38363798,38365276,38366728,38368087,38369475,38370877,38372390,38373948,38375445,38376928,38378461,38379678,38381203,38382708,38384142,38385812,38387314,38388851,38390348,38391650,38393159,38394645,38396154,38397689,38399668,38401619,38403540,38405233,38406634,38408045,38409474,38410281,38411703,38413096,38414501,38416090,38417275,38418428,38419550,38420682,38421768,38422831,38423996,38425179,38426673,38428092,38429525,38431426,38433327,38435216,38437121,38439020,38440926,38442821,38444764,38446453,38448063,38449588,38451118,38452568,38453961,38454842,38455804,38456589,38457463,38458249,38459224,38459928,38460830,38461728,38462772,38463513,38464428,38465318,38466346,38467298,38468219,38469609,38470857,38472213,38473498,38474367,38474725,38475316,38475807,38476216,38476493,38476986,38477655,38479009,38479929,38480781,38481599,38482700,38484017,38484763,38486116,38486904,38487080,38487522,38487787,38488111,38489468,38490857,38492347,38494013,38495863,38497592,38499411,38501235,38503036,38504800,38506557,38508348,38510104,38511747,38513390,38514954,38516567,38518154,38519815,38521395,38523038,38524429,38525728,38527053,38528383,38529976,38531655,38533315,38534985,38536650,38538321,38539971,38541648,38543338,38545019,38546684,38548349,38549314,38550878,38552700,38554564,38556341,38558137,38559935,38561827,38563645,38565413,38567054,38568504,38569988,38571431,38573069,38574926,38576772,38578628,38580479,38582343,38584227,38586072,38587945,38589795,38590864,38592617,38593837,38594921,38596201,38597299,38598477,38600527,38602534,38604510,38606434,38608407,38610363,38612260,38614160,38616056,38618018,38619963,38621912,38623825,38625749,38627638,38629563,38631573,38633355,38635013,38636791,38638590,38640409,38642211,38643883,38645496,38647359,38649415,38651467,38653514,38655554,38657591,38659647,38661689,38663740,38665788,38667841,38669886,38671932,38673984,38676033,38678080,38680130,38682183,38684057,38685969,38687824,38689676,38691493,38693350,38695211,38697076,38699031,38700930,38702802,38704645,38706509,38708345,38710204,38712049,38713991,38715295,38716755,38717533,38718396,38719135,38719836,38720581,38721141,38721943,38722813,38723609,38723999,38724699,38725498,38726355,38726984,38727389,38728138,38728982,38729880,38730341,38730860,38731656,38732493,38733428,38734025,38734470,38735713,38736763,38737880,38738383,38739042,38740226,38741310,38742368,38742753,38743652,38744765,38745805,38746707,38747093,38748157,38749306,38750403,38751078,38752475,38753774,38755353,38756668,38758428,38759823,38760790,38761950,38763064,38764187,38765339,38766442,38767528,38768652,38769822,38770947,38772110,38773307,38774377,38775422,38776445,38777650,38779059,38780169,38781265,38782454,38783484,38784528,38785643,38786722,38787728,38788726,38789635,38790647,38791688,38792530,38793376,38794185,38795029,38796371,38796781,38797341,38797856,38798415,38798972,38799427,38799991,38800555,38801019,38801536,38802011,38802512,38803012,38803544,38804102,38804609,38806054,38807529,38809014,38810501,38812065,38813557,38815078,38816604,38818095,38819201,38820175,38821169,38822641,38824197,38825565,38826960,38828307,38829684,38831154,38832889,38834531,38836195,38837852,38839467,38841086,38842758,38844407,38846064,38847733,38849225,38850684,38852206,38853672,38855201,38856702,38858153,38859720,38860741,38861888,38863137,38864485,38865799,38867116,38868433,38869551,38870948,38872361,38873752,38875193,38876751,38878270,38879802,38881351,38883057,38884387,38885372,38886513,38887675,38888809,38889938,38891047,38892144,38893238,38894398,38895494,38896707,38897900,38898980,38900055,38901118,38902369,38903700,38904824,38905927,38907126,38908173,38909241,38910350,38911375,38912406,38913408,38914328,38915367,38916392,38917250,38918085,38918926,38919828,38921095,38921524,38922077,38922580,38923144,38923684,38924160,38924716,38925259,38925734,38926247,38926741,38927234,38927746,38928278,38928859,38929367,38931124,38932926,38934723,38936508,38938309,38940084,38941819,38943581,38944968,38946387,38947776,38949182,38950815,38952037,38953250,38954478,38956015,38957453,38958777,38960080,38961593,38962902,38963930,38964949,38965919,38967398,38969093,38970542,38972216,38973886,38975249,38976424,38977591,38978791,38980249,38981619,38983332,38984992,38986589,38988282,38989985,38991580,38993249,38994889,38996573,38997726,38999156,39000592,39002127,39004048,39005754,39007722,39009498,39011195,39012848,39014564,39016296,39017908,39019654,39021424,39023116,39024700,39026193,39027725,39029266,39030828,39032343,39033926,39035169,39036910,39038540,39040141,39041725,39043292,39044856,39046444,39048063,39049846,39051301,39053051,39054842,39056353,39057773,39059498,39061289,39062846,39064556,39065622,39066733,39067851,39068997,39070161,39071303,39072372,39073548,39074677,39075793,39076901,39078098,39079262,39080363,39081397,39082467,39083775,39084813,39086056,39087189,39088018,39088722,39089859,39091026,39092115,39093102,39094054,39095307,39096415,39097359,39097936,39099072,39100281,39101430,39102422,39103336,39104602,39105754,39106705,39107200,39108379,39109624,39110851,39111798,39112658,39113817,39114941,39115960,39116368,39117587,39118783,39119937,39120914,39121631,39122763,39123928,39125030,39125444,39126590,39127767,39128918,39129819,39131151,39132297,39133381,39134581,39135627,39136668,39137748,39138774,39139801,39140819,39141737,39142775,39143834,39144688,39145516,39146337,39147245,39148210,39149366,39150611,39151818,39152164,39153163,39154403,39155533,39156416,39157662,39158779,39159992,39161191,39162425,39163587,39164691,39165951,39167125,39168425,39169534,39170668,39171849,39173048,39174318,39175418,39176564,39177807,39178935,39180244,39181438,39182429,39183453,39184594,39185943,39187049,39188057,39189045,39190208,39191540,39192599,39193577,39194632,39195918,39197135,39198211,39199178,39200302,39201791,39202460,39202969,39203528,39204783,39206339,39208093,39209962,39211831,39213662,39215265,39216643,39217171,39217695,39218211,39218740,39219293,39220226,39221523,39222574,39223852,39225367,39226554,39227648,39229106,39230461,39231508,39232761,39234263,39235462,39236535,39237959,39239696,39241569,39243306,39245035,39246929,39248600,39250398,39252283,39253991,39255843,39257646,39259476,39261186,39263038,39264789,39266552,39268441,39270192,39271919,39273812,39275545,39277350,39279150,39280904,39282872,39284652,39286480,39288178,39290070,39291806,39293665,39295426,39297162,39299049,39300712,39302533,39304420,39306195,39307988,39309801,39311627,39313340,39315197,39317076,39318796,39320704,39322428,39324189,39326220,39327965,39329708,39331514,39333309,39335087,39336907,39338731,39340407,39342320,39344036,39345882,39347661,39349422,39351301,39353079,39354911,39356706,39358503,39360251,39362068,39363958,39365665,39367401,39369287,39370993,39372881,39374651,39376404,39377783,39378996,39380229,39381447,39382724,39383882,39385108,39386265,39387295,39387853,39388637,39389518,39390297,39390700,39391432,39392225,39393105,39393717,39394130,39394901,39395763,39396672,39397131,39397665,39398437,39399285,39400203,39400845,39402296,39403288,39404463,39405582,39406703,39407848,39408949,39410039,39411143,39412267,39413396,39414589,39415774,39416862,39417937,39418956,39420070,39421562,39423063,39424646,39425758,39426857,39428038,39429147,39430214,39431291,39432365,39433368,39434387,39435259,39436254,39437272,39438169,39439029,39439805,39440698,39442158,39443592,39445088,39446295,39446740,39447308,39447816,39448364,39448912,39449388,39449924,39450454,39450939,39451465,39451964,39452446,39452965,39453489,39454065,39454601,39456273,39457922,39459607,39461172,39462889,39464518,39466176,39467828,39469530,39471225,39473006,39474646,39476270,39477868,39479552,39481141,39482118,39482607,39483610,39484205,39484632,39484935,39485782,39486826,39488863,39490895,39492921,39494932,39496955,39498946,39500933,39502906,39504929,39506953,39508976,39511003,39513012,39515036,39517056,39519021,39521045,39522437,39523798,39525388,39526920,39528304,39529646,39530937,39532058,39533179,39534304,39535425,39536547,39537669,39538495,39538565,39539407,39541395,39543443,39545301,39547166,39549090,39550943,39552790,39554681,39556602,39558460,39560399,39562316,39564241,39566189,39568050,39569944,39571866,39573787,39575656,39577447,39579449,39581320,39583215,39585142,39587044,39588893,39590658,39592471,39594229,39596145,39598044,39599938,39601812,39603678,39605577,39607469,39609389,39611226,39613232,39614990,39616866,39618723,39620637,39622480,39624136,39625966,39627402,39628906,39630525,39632137,39633721,39635257,39636709,39638274,39639865,39641495,39643143,39644680,39646198,39647786,39649359,39650896,39652779,39654414,39655999,39657500,39659135,39661093,39662912,39664680,39666441,39668296,39670155,39671998,39673844,39675752,39677212,39678505,39679792,39681134,39682454,39683817,39685142,39686386,39688001,39689460,39690925,39692385,39693853,39695333,39696802,39698271,39699700,39701338,39702797,39704232,39705690,39707184,39708654,39710102,39711525,39713123,39714584,39716017,39717469,39718929,39720434,39721905,39723344,39724775,39726413,39727842,39729261,39730662,39732184,39733620,39735050,39736466,39738080,39739493,39740921,39742305,39743737,39745230,39746692,39748113,39749502,39751090,39752496,39753855,39755300,39756793,39758229,39759646,39761029,39762570,39764059,39765421,39766821,39768287,39769743,39771161,39772587,39773985,39775613,39777032,39778428,39779881,39781357,39782826,39784278,39785694,39787154,39788790,39790263,39791716,39793195,39794697,39796213,39797689,39799085,39800698,39802036,39803377,39804715,39806089,39807432,39808768,39810084,39811361,39812915,39814241,39815563,39816932,39818290,39819630,39820942,39822203,39823752,39825076,39826330,39827624,39828995,39830319,39831665,39833016,39834269,39835911,39837353,39838785,39840261,39841744,39843246,39844707,39846130,39847718,39849189,39850582,39852024,39853520,39854998,39856460,39857899,39859321,39860923,39862311,39863687,39865140,39866582,39868078,39869485,39870901,39872383,39873945,39875309,39876688,39878170,39879647,39881101,39882479,39883903,39885502,39886921,39888303,39889707,39891142,39892620,39894043,39895460,39896871,39898516,39899939,39901352,39902767,39904262,39905719,39907147,39908544,39910211,39911864,39913696,39915470,39917224,39919061,39920699,39922486,39924319,39926155,39927968,39929718,39931279,39933142,39934869,39936653,39938346,39940171,39941986,39943839,39945721,39947533,39949456,39951351,39953179,39955085,39957017,39958859,39960679,39962456,39964296,39966076,39967857,39969623,39971505,39973348,39975126,39976874,39978604,39980393,39982126,39983833,39985577,39987472,39989288,39991105,39992826,39994614,39996364,39998101,39999832,40001614,40003593,40005446,40007272,40009085,40010883,40012703,40014514,40016324,40018217,40019941,40021686,40023465,40025194,40026933,40028652,40030420,40032175,40034055,40035936,40037790,40039633,40041446,40043255,40045002,40046795,40048575,40050422,40052100,40053853,40055636,40057128,40058867,40060611,40062282,40064021,40065822,40067604,40069327,40071108,40072722,40074382,40075996,40077789,40079584,40081345,40083041,40084645,40086278,40087978,40089663,40091347,40093003,40094774,40096438,40098071,40099721,40101381,40103080,40104762,40106462,40108124,40109977,40111792,40113513,40115293,40117122,40118922,40120728,40122525,40124376,40126127,40127892,40129599,40131366,40133169,40134927,40136739,40138473,40140323,40142127,40144003,40145869,40147755,40149665,40151633,40153453,40155291,40157011,40158674,40160414,40162138,40163882,40165647,40167390,40169126,40170913,40172594,40174304,40176134,40177926,40179709,40181575,40183312,40185059,40186642,40188093,40189610,40191166,40192661,40194198,40195740,40197185,40198997,40201008,40202952,40204904,40206914,40208886,40210834,40212825,40214718,40216671,40218660,40220671,40222665,40224594,40226564,40228566,40230563,40232533,40233881,40233921,40233959,40233999,40234046,40234327,40234367,40234405,40234445,40235903,40237689,40239521,40241340,40243193,40245023,40246829,40248634,40250538,40252042,40253498,40254930,40256370,40257801,40259224,40260664,40262107,40263911,40265750,40267567,40269318,40271111,40272876,40274684,40276431,40278236,40279019,40279479,40279519,40279559,40279598,40279917,40279949,40279989,40280029,40280404,40281573,40282848,40284646,40286364,40288106,40289874,40291618,40293335,40295054,40296806,40298586,40299906,40301242,40302637,40304151,40304808,40306149,40307680,40309002,40310111,40311610,40313382,40314970,40316436,40316476,40316511,40316551,40316602,40316881,40316921,40316955,40316995,40318009,40319303,40320495,40321631,40322848,40324575,40326187,40327818,40329519,40331174,40332845,40334516,40336147,40337106,40337146,40337184,40337224,40337887,40338816,40338900,40339341,40341018,40342877,40344900,40346543,40348184,40349812,40351455,40353102,40354801,40356542,40358269,40359963,40361721,40363428,40365206,40366918,40368624,40370301,40371963,40373688,40374540,40375699,40375738,40377528,40379319,40381028,40382740,40384490,40386230,40387983,40389700,40391522,40393410,40395244,40397124,40399014,40400846,40402720,40404526,40406330,40408313,40410065,40411644,40413349,40415052,40416786,40418568,40420364,40422081,40423953,40425805,40427735,40429565,40431485,40433288,40435250,40437039,40439012,40440661,40441873,40443041,40444134,40445142,40446490,40447896,40449229,40450599,40452013,40453367,40454516,40455633,40456751,40457867,40459060,40460327,40461712,40462418,40463316,40464265,40465422,40466999,40468606,40469469,40470138,40470900,40471848,40473440,40475155,40476883,40478142,40479095,40480476,40482192,40483446,40484594,40485385,40486310,40487246,40487854,40488520,40489555,40490851,40492148,40493312,40494613,40496017,40497393,40498741,40500034,40501742,40503658,40505573,40507479,40509306,40511153,40513071,40514930,40516893,40518724,40520654,40522560,40524511,40526343,40528211,40530123,40531963,40532902,40533845,40534784,40535728,40537689,40539650,40541247,40543219,40544793,40545955,40547173,40548328,40549892,40551877,40553876,40555906,40557917,40559764,40561698,40563582,40565454,40567480,40569526,40571577,40573609,40575566,40577371,40579100,40580988,40582798,40584627,40586394,40588182,40589939,40591909,40593864,40595805,40597711,40599704,40601023,40602305,40603649,40605413,40606610,40607851,40609094,40610486,40611674,40612881,40614120,40615396,40617194,40618362,40619574,40620928,40622257,40623412,40624153,40625133,40626752,40628285,40629015,40629869,40631532,40633274,40634127,40634859,40636302,40637744,40639062,40640471,40641849,40643805,40645569,40647317,40649142,40650948,40652716,40654528,40656405,40658190,40659966,40661636,40663317,40664967,40666756,40668516,40670322,40672132,40673908,40675378,40676780,40678241,40679720,40681287,40682705,40684141,40685630,40687226,40688721,40690162,40691657,40693305,40694818,40696291,40697799,40699457,40701425,40703409,40705338,40707261,40709284,40711277,40713235,40715239,40717195,40718956,40720730,40722465,40724294,40725949,40727512,40729067,40730653,40732610,40734498,40736274,40738184,40740072,40741879,40743689,40745504,40747447,40749357,40751206,40753088,40755034,40756813,40758636,40760395,40762227,40763972,40765473,40766975,40768467,40769710,40770918,40772097,40773783,40774906,40776131,40777335,40778628,40780206,40781308,40782531,40784089,40785932,40787730,40789489,40791256,40793185,40794961,40796737,40798507,40800377,40802177,40804016,40805832,40807636,40808710,40809581,40810403,40811146,40812294,40813446,40814625,40815777,40817053,40818265,40819471,40820663,40821942,40823243,40824653,40826018,40827332,40829141,40830989,40832856,40834696,40836601,40838432,40840287,40842156,40844065,40845957,40847897,40849819,40851709,40853659,40855575,40857507,40859448,40861319,40863154,40865029,40866824,40868601,40870435,40872180,40873839,40875491,40877080,40878998,40880794,40882638,40884560,40886442,40888287,40890211,40891961,40893440,40894837,40896295,40897857,40899352,40901048,40902805,40904332,40905920,40907624,40909251,40910963,40912659,40914428,40916170,40917940,40919773,40921743,40923791,40925847,40927715,40929751,40931728,40933709,40935644,40937676,40939633,40941573,40943452,40945089,40946219,40947616,40948889,40950143,40951907,40953691,40955440,40957189,40958857,40960356,40961903,40963518,40965243,40967043,40968842,40970632,40972432,40974241,40976079,40977875,40979653,40981365,40983034,40984741,40986377,40988006,40989773,40991589,40993328,40994840,40995859,40997051,40997967,40999461,41000524,41001416,41002284,41003373,41004617,41005641,41006780,41007714,41008781,41009354,41009942,41010467,41011217,41011912,41012649,41013339,41014230,41015094,41016340,41017517,41018604,41019902,41021253,41022714,41024069,41025423,41026844,41028290,41030010,41031543,41032796,41034343,41035992,41037353,41038985,41040700,41042301,41043986,41044919,41045141,41045378,41045581,41046348,41046837,41047288,41047747,41048535,41050582,41052602,41054648,41056685,41058710,41060751,41062783,41064809,41066855,41068830,41070755,41072726,41074624,41076527,41078503,41080415,41082299,41083775,41085162,41086577,41088050,41089371,41090536,41091709,41092845,41094093,41095538,41096875,41098420,41099874,41101720,41103549,41105389,41107268,41109143,41110962,41112751,41114549,41116440,41118221,41119963,41121716,41123523,41125199,41126889,41128636,41130345,41131800,41133233,41134741,41136185,41137611,41139058,41140580,41142065,41143624,41145519,41147413,41149264,41151194,41152418,41153690,41154902,41156176,41158011,41159826,41161610,41163400,41165098,41166564,41167932,41169472,41171001,41173029,41175069,41177110,41179126,41181140,41183137,41185112,41187105,41188877,41190384,41191892,41193356,41195060,41196763,41198416,41200097,41201795,41203793,41205785,41207761,41209771,41211622,41213329,41215059,41216789,41218749,41220797,41222852,41224904,41226890,41228173,41229410,41230198,41230746,41231284,41231820,41232717,41234148,41235576,41236991,41238137,41239401,41241012,41242633,41243857,41245222,41246784,41248315,41249820,41251296,41252839,41254575,41256217,41258131,41259975,41261310,41262510,41263828,41265066,41266280,41267215,41268215,41269173,41270490,41271394,41272394,41273329,41274172,41275829,41277789,41279750,41281719,41283688,41285719,41287726,41289694,41291697,41293542,41295041,41296537,41298147,41299946,41301579,41303270,41304897,41306661,41308287,41309767,41311355,41313018,41314749,41316426,41318148,41319755,41321363,41323003,41324668,41326139,41327650,41329171,41330783,41332281,41333828,41335715,41337623,41339482,41341337,41343241,41345139,41346995,41348837,41350729,41352237,41353726,41355176,41357064,41359015,41360987,41362965,41364968,41366837,41368637,41370440,41372230,41374076,41375975,41377893,41379800,41381501,41382906,41384380,41385776,41387214,41388672,41390192,41391681,41393123,41394675,41396337,41398052,41399692,41401223,41402760,41404320,41405838,41407454,41409189,41410815,41412571,41414316,41415986,41417737,41419398,41421135,41422796,41424462,41425975,41427697,41429343,41430995,41432495,41434160,41435910,41437345,41438944,41440496,41442049,41443473,41445065,41446681,41448414,41449925,41451414,41452978,41454485,41455994,41457438,41458995,41460722,41462213,41463501,41464748,41466283,41467797,41469408,41471160,41472588,41474261,41475761,41477296,41479064,41480780,41482352,41484006,41485445,41486675,41487853,41489151,41490453,41491801,41493023,41494408,41496201,41497522,41498913,41500312,41501535,41502687,41503815,41505123,41506313,41507701,41509162,41510553,41511907,41513487,41514854,41516041,41517400,41519257,41520962,41522739,41524317,41525592,41526629,41527648,41528529,41529466,41530574,41531770,41533075,41534347,41535936,41537554,41539113,41540809,41542774,41543881,41545125,41546090,41547106,41547939,41548556,41549722,41550859,41552239,41553443,41554718,41555977,41557326,41558878,41560603,41562406,41564393,41566103,41567890,41569681,41571288,41572589,41573847,41575055,41576363,41577660,41578990,41580362,41581585,41582814,41584116,41585381,41586598,41588221,41589876,41591563,41593237,41594746,41596178,41597753,41599513,41601050,41602707,41603958,41605179,41606398,41607659,41608967,41610275,41611732,41613281,41614948,41616366,41617672,41619020,41620242,41621396,41622579,41623898,41625368,41627087,41628801,41630485,41632047,41633425,41634872,41636240,41637686,41639380,41640930,41642247,41643538,41644721,41645975,41647133,41648402,41649899,41651648,41653300,41655069,41656685,41658218,41659912,41661555,41663007,41664700,41666316,41666734,41667001,41668547,41670147,41670609,41670872,41672337,41673900,41674372,41674634,41676109,41677706,41678190,41678472,41679957,41681527,41682037,41682294,41683689,41685259,41685791,41686041,41687246,41688534,41689803,41691055,41692509,41693776,41695068,41696388,41697783,41699092,41700330,41701659,41702952,41704371,41705696,41707055,41708341,41709752,41711285,41712569,41713809,41715071,41716276,41717522,41718768,41720058,41721304,41722779,41723974,41725158,41726369,41727574,41728772,41729956,41731174,41732668,41733919,41735168,41736464,41737774,41739052,41740310,41741584,41742837,41744704,41746440,41748205,41749898,41751571,41753202,41755028,41756843,41758337,41759593,41760964,41762283,41763633,41764985,41766341,41767610,41769017,41770344,41771745,41773027,41774400,41775751,41777195,41778515,41779974,41781795,41783445,41785038,41786608,41788250,41789840,41791377,41792788,41794083,41795476,41796861,41798358,41799894,41801423,41802847,41804409,41806140,41808009,41809680,41811263,41812843,41814475,41816044,41817551,41818977,41820253,41821642,41823020,41824494,41826055,41827583,41829023,41830559,41832283,41834164,41835858,41837437,41839026,41840695,41842271,41843773,41845243,41846500,41847857,41849241,41850716,41852286,41853809,41855249,41856750,41858485,41860352,41862031,41863643,41865217,41866884,41868440,41869958,41871434,41872697,41874078,41875469,41876915,41878494,41880019,41881463,41882975,41884670,41886587,41887776,41889016,41890117,41891019,41891895,41892935,41893948,41894957,41896072,41897361,41898577,41899754,41900694,41901656,41902737,41903760,41905304,41906524,41907753,41908846,41909763,41910660,41911685,41912701,41913667,41914802,41916088,41917309,41918521,41919490,41920467,41921544,41922569,41923993,41925972,41927892,41929810,41931774,41933736,41935689,41937639,41939550,41941414,41943212,41945000,41946852,41948726,41950664,41952590,41954550,41956306,41957987,41959961,41961896,41963878,41965900,41967890,41969802,41971764,41973770,41975544,41977286,41979042,41980806,41982589,41984340,41986188,41987950,41989675,41991455,41993225,41994993,41996795,41998327,42000247,42002250,42004206,42006076,42007960,42009908,42011792,42012895,42013706,42015147,42017076,42019053,42021048,42023030,42024969,42026970,42028938,42030880,42032927,42034881,42036861,42038827,42040763,42042762,42044705,42046667,42048671,42050246,42051799,42053365,42054941,42056505,42058062,42059641,42061206,42062990,42064706,42066318,42068009,42069560,42071407,42073221,42075056,42076837,42078678,42080168,42081731,42083260,42084787,42086497,42088163,42089872,42091482,42093257,42094872,42096597,42098305,42100165,42101967,42103825,42105664,42107554,42109221,42110900,42112582,42114165,42116033,42117831,42119671,42121490,42123308,42124848,42126483,42128036,42129647,42131261,42132966,42134666,42136335,42138077,42139794,42141562,42143312,42145054,42146592,42148319,42150004,42151789,42153292,42154964,42156777,42158383,42160082,42161863,42163620,42165229,42166911,42168497,42170254,42171884,42173471,42175033,42176770,42178398,42180120,42181150,42183021,42184926,42186509,42188021,42189960,42191818,42193309,42194865,42196577,42198575,42200584,42202552,42204242,42205579,42206537,42207679,42209010,42210147,42211889,42213479,42215043,42216473,42217871,42219370,42220855,42222381,42224133,42225285,42226411,42227277,42228262,42229579,42230628,42231609,42232660,42233751,42235053,42236888,42238668,42240555,42242360,42244203,42246006,42247881,42249664,42251514,42253195,42254819,42256595,42258197,42259982,42261697,42263388,42265236,42267133,42268906,42270780,42272595,42274436,42276291,42278146,42279923,42281802,42283550,42285152,42286912,42288560,42290318,42292065,42293777,42295568,42297368,42299235,42301089,42302945,42304827,42306650,42308550,42310370,42312331,42314256,42316167,42318153,42320041,42321990,42323945,42325983,42327906,42329844,42331625,42333366,42335167,42336917,42338760,42340580,42342420,42344183,42345865,42347314,42348582,42350116,42351674,42353385,42354818,42355910,42357145,42358241,42359021,42359294,42360008,42361329,42362579,42363939,42365185,42366648,42367974,42369241,42370623,42371929,42373367,42374722,42376027,42377355,42378662,42380119,42381441,42382790,42384134,42385471,42386955,42388604,42389478,42391130,42392568,42394441,42396368,42398379,42400427,42402427,42404447,42406425,42408343,42410251,42411893,42413449,42414955,42416511,42418167,42419825,42421539,42423294,42425107,42426838,42428565,42430216,42431931,42433488,42435100,42436746,42438123,42439783,42441600,42443537,42445401,42447135,42448796,42450558,42452491,42454477,42456386,42458181,42459834,42461670,42463559,42465495,42467277,42468990,42470646,42472566,42474479,42476365,42478132,42479708,42481633,42483565,42485500,42487429,42489306,42490911,42492728,42494590,42496464,42498344,42500051,42501010,42501981,42502986,42503940,42505572,42507064,42508769,42510338,42512002,42513614,42515308,42516958,42518497,42520329,42522029,42523715,42525453,42527151,42528811,42530470,42532099,42533773,42535427,42537174,42539108,42540839,42542612,42544321,42545971,42547772,42549469,42551080,42552859,42554496,42556323,42557933,42559567,42561216,42562853,42564581,42566471,42568368,42570274,42572167,42574110,42576055,42577872,42579559,42581316,42582943,42584637,42586539,42588474,42590343,42592242,42594180,42596119,42598098,42600011,42601967,42603914,42605805,42607593,42609369,42611154,42612950,42614910,42616824,42618718,42620598,42622511,42624362,42626247,42628154,42629567,42630854,42632177,42633755,42635353,42636994,42638597,42640307,42642197,42644045,42645937,42647781,42649655,42651484,42653350,42655253,42657086,42658987,42660876,42662658,42663274,42663746,42664370,42665615,42666624,42667679,42669058,42670286,42671468,42672975,42674672,42676295,42677914,42679580,42681346,42682844,42684526,42686246,42687562,42689236,42690770,42692136,42693381,42694854,42696485,42698164,42699888,42701661,42703328,42705065,42706741,42708344,42709939,42711302,42712805,42714288,42715789,42717222,42718668,42720198,42721641,42723111,42724486,42725982,42727405,42729204,42731007,42732850,42734752,42736599,42738454,42740302,42742163,42744069,42745894,42747718,42749596,42751500,42753380,42755262,42757124,42759049,42761007,42763000,42764933,42766826,42768731,42770639,42772567,42774495,42776390,42778340,42780267,42782164,42784024,42785896,42787783,42789684,42791562,42793160,42794561,42796027,42797808,42799449,42801038,42802676,42804262,42805883,42807538,42809152,42810839,42812523,42814179,42815805,42817463,42819107,42820744,42822376,42824007,42825768,42827426,42829070,42830727,42832362,42833983,42835624,42837274,42838913,42840891,42842760,42844628,42846486,42848373,42850227,42852090,42853933,42855859,42857684,42859522,42861334,42863174,42865029,42866862,42868709,42870552,42872539,42874385,42876256,42878132,42879977,42881813,42883664,42885523,42887472,42888787,42890224,42891666,42893054,42894366,42895816,42897427,42898813,42900177,42901567,42903077,42904523,42905979,42907490,42909421,42911318,42913122,42914877,42916676,42918526,42920379,42922277,42924156,42925779,42927534,42929314,42930974,42932654,42934361,42936096,42937707,42939399,42941094,42942815,42944472,42946254,42947969,42949761,42951370,42953072,42954776,42956657,42958463,42960345,42962074,42963701,42965595,42967449,42969386,42971214,42973064,42974686,42976471,42978218,42980003,42981830,42983487,42985117,42986857,42988528,42990284,42992041,42993610,42995432,42997153,42998928,43000664,43002474,43004090,43005822,43007436,43009039,43010793,43012457,43013597,43014872,43016120,43017375,43018656,43019946,43020972,43022634,43024255,43025759,43027330,43028943,43030527,43032073,43033657,43035215,43036794,43038343,43039929,43041686,43043507,43045407,43047337,43049191,43050794,43052709,43054142,43055543,43057316,43059096,43060945,43062705,43064400,43066042,43067507,43069217,43070926,43072707,43074394,43075779,43077039,43078819,43080655,43082485,43083960,43085428,43086921,43088323,43090012,43091582,43092988,43094607,43096146,43097676,43099174,43100699,43102177,43103740,43105172,43106548,43108101,43109623,43111217,43112685,43114136,43115623,43117321,43118860,43120386,43121833,43123163,43124648,43126143,43127858,43129664,43131544,43133364,43135194,43137044,43138836,43140584,43142273,43143910,43145562,43147368,43149047,43150847,43152574,43154298,43156097,43157837,43159547,43161433,43163373,43165195,43167058,43168888,43170738,43172588,43174318,43175992,43177680,43179385,43181095,43182864,43184602,43186286,43187986,43189798,43191557,43193171,43195018,43196701,43198427,43200132,43201873,43203493,43205199,43206865,43208617,43210428,43212100,43213804,43215448,43217228,43218925,43220678,43222358,43223966,43225769,43227527,43228910,43230376,43232131,43233915,43235579,43237262,43239001,43240436,43241936,43243487,43245002,43246495,43247929,43249527,43251048,43252531,43254310,43256088,43257744,43259483,43261245,43262894,43264635,43266390,43268001,43269649,43271301,43272964,43274613,43276228,43277851,43279489,43281174,43282841,43284473,43286067,43287764,43289388,43291046,43292680,43294417,43296061,43297703,43299340,43300960,43302686,43304307,43305977,43307619,43309330,43310967,43312618,43314258,43315961,43317574,43319216,43320813,43322508,43324147,43325762,43327478,43329248,43330980,43332635,43334260,43335901,43337623,43339242,43340893,43342550,43344332,43346012,43347622,43349234,43350880,43352630,43354406,43356277,43357972,43359621,43361332,43363142,43364843,43366542,43368295,43370128,43371940,43373669,43375572,43377454,43379322,43381312,43383284,43385233,43387172,43389142,43391034,43392861,43394718,43396691,43398683,43400696,43402688,43404610,43406466,43408411,43410175,43412000,43413974,43415997,43418020,43420023,43422029,43424002,43425944,43427857,43429753,43431659,43433610,43435536,43437488,43439448,43441283,43443103,43445035,43446955,43448848,43450674,43452298,43453932,43455714,43457566,43459382,43461058,43462676,43464281,43465909,43467532,43469187,43470770,43472186,43473550,43474870,43476320,43477778,43479295,43480761,43482160,43483573,43485091,43486626,43487955,43489386,43490924,43492399,43493798,43495440,43497147,43498845,43500595,43502267,43503960,43505664,43507449,43509137,43510834,43512550,43514357,43516067,43517756,43519395,43521078,43522760,43524487,43526161,43527848,43529497,43531222,43532907,43534628,43536278,43537929,43539655,43541291,43542930,43544584,43546512,43548401,43550303,43552211,43554121,43556022,43557915,43559804,43561729,43563533,43565327,43567134,43568943,43570948,43572954,43574957,43577007,43579048,43581073,43583115,43585140,43587178,43589223,43591259,43593314,43595364,43597420,43599475,43601517,43603561,43605554,43607402,43609241,43611149,43613068,43614984,43616857,43618709,43620607,43622086,43623523,43624998,43626497,43628220,43629806,43631365,43632946,43634542,43636102,43637680,43639346,43640792,43642270,43643868,43645450,43646963,43648568,43650156,43651569,43653083,43654466,43656044,43657781,43659707,43661452,43663159,43664873,43666542,43668444,43670313,43672201,43673999,43675773,43677550,43679309,43681127,43682998,43684543,43686425,43688405,43690416,43692398,43694299,43696201,43698038,43699665,43701339,43703079,43704798,43706569,43708311,43710109,43711797,43713485,43715254,43716941,43718643,43720343,43721703,43723188,43724696,43726211,43727693,43729280,43730803,43732331,43733839,43735384,43736895,43738424,43739950,43741508,43742999,43744505,43746027,43747488,43748858,43750153,43751449,43752729,43754284,43756198,43758115,43760017,43761897,43763855,43765786,43767725,43769656,43771267,43772610,43773898,43775238,43776594,43777916,43779244,43780592,43782150,43783660,43785145,43786662,43788319,43789920,43791424,43793079,43794587,43796414,43798034,43799702,43801433,43802766,43804443,43806107,43807766,43809647,43810859,43812091,43813319,43814577,43815857,43817134,43818368,43819611,43821096,43822296,43823280,43824450,43825544,43826825,43827919,43829048,43830342,43831693,43832966,43834235,43835438,43836699,43837943,43839298,43840637,43842228,43843639,43844937,43846253,43847577,43848899,43850207,43851502,43852875,43854847,43856335,43857983,43859732,43861400,43862956,43864435,43865854,43867801,43869717,43870820,43872013,43873131,43874394,43875663,43876796,43878734,43880702,43882621,43884084,43885889,43887714,43889528,43891055,43892927,43894898,43895323,43895905,43896385,43896873,43897467,43897991,43898569,43898950,43899822,43900370,43901714,43903130,43904505,43905769,43906904,43907726,43908347,43909005,43910024,43911413,43912940,43914422,43915855,43917262,43917910,43919147,43920101,43921596,43923032,43924183,43925523,43926792,43928096,43929445,43931377,43933118,43934862,43936645,43937937,43938008,43938478,43939551,43940335,43940838,43941544,43941984,43942658,43943214,43943828,43944544,43945816,43946604,43947792,43949201,43950624,43952043,43953450,43954855,43956535,43958145,43959833,43961426,43962998,43964546,43966293,43968076,43969493,43970584,43971649,43972858,43974140,43975499,43976717,43978007,43979356,43980813,43982412,43983962,43985641,43987323,43988789,43990100,43991553,43992803,43993156,43993181,43993211,43993236,43994121,43994759,43996092,43996915,43998566,44000178,44001843,44003451,44005060,44006282,44007937,44009462,44011020,44012569,44014430,44016338,44018277,44020186,44022123,44024027,44025192,44026060,44027497,44029007,44030031,44031010,44032104,44033379,44034805,44036240,44037727,44039223,44040804,44042304,44044012,44045755,44047326,44048926,44050444,44051992,44053570,44055137,44056640,44058223,44060177,44062225,44064277,44066302,44068243,44070111,44072140,44074141,44075970,44077737,44079680,44081548,44083573,44085568,44087610,44089599,44091628,44093615,44095654,44097637,44099684,44101733,44103581,44105318,44107288,44109288,44111304,44113300,44115080,44116737,44118123,44119327,44120563,44121762,44123574,44125581,44127349,44129062,44130920,44132832,44134670,44136441,44138196,44139947,44141885,44143818,44145794,44147761,44149708,44151713,44153689,44155670,44157340,44158879,44160443,44161981,44163512,44165046,44166598,44168134,44169593,44170961,44172311,44173653,44174945,44176217,44177578,44178878,44180752,44182754,44184752,44186731,44188729,44190715,44192665,44194584,44196599,44198571,44200295,44202002,44203659,44205310,44207002,44208663,44209278,44209524,44210383,44211721,44213048,44214285,44215290,44216323,44217211,44218252,44219702,44221399,44223028,44224671,44226412,44228131,44229731,44231249,44232865,44234423,44236036,44237586,44239162,44240633,44242117,44243399,44244590,44245660,44246981,44248251,44249546,44250772,44252189,44253621,44255191,44256766,44258296,44259781,44261165,44262598,44263626,44264631,44266027,44267598,44268818,44269587,44270899,44272184,44273645,44275133,44276622,44278128,44279465,44280621,44282048,44283542,44285101,44286809,44288601,44290458,44292235,44294071,44295758,44297298,44298944,44300555,44302195,44303755,44305355,44306846,44308423,44309930,44311242,44312546,44314038,44315584,44317065,44318427,44319832,44321219,44322610,44323975,44324846,44325336,44325891,44326340,44327583,44329017,44330627,44332131,44333580,44335002,44336536,44338051,44339523,44340879,44342115,44343253,44344503,44345817,44347278,44348766,44349955,44350979,44351519,44351855,44353367,44355165,44357039,44358823,44360478,44362009,44363109,44364161,44365557,44367102,44368670,44370238,44371797,44373366,44374948,44376504,44378321,44380072,44381909,44383634,44385511,44387306,44389162,44390953,44392318,44393695,44395102,44396483,44397926,44399337,44400959,44402641,44404274,44405810,44407328,44408819,44410335,44411849,44413330,44414782,44416613,44418547,44420181,44421712,44422527,44423255,44424190,44425044,44426230,44427729,44429432,44431104,44432731,44434197,44435773,44437107,44438352,44439568,44440390,44440974,44441857,44442674,44443428,44444034,44445199,44446738,44447531,44448053,44448667,44449175,44450716,44452522,44453851,44454946,44456046,44457079,44458423,44459817,44461057,44462110,44463080,44463974,44465346,44466767,44468225,44469644,44471055,44472499,44474181,44475879,44477620,44479259,44481141,44483051,44484719,44486276,44487409,44488439,44489661,44490804,44491877,44492867,44493837,44494685,44495862,44496860,44498120,44499288,44500060,44500549,44501172,44501789,44502392,44502911,44503542,44504148,44504724,44505221,44505882,44506502,44507102,44507629,44508284,44508878,44509443,44509890,44510460,44511017,44512649,44514519,44515818,44516854,44517970,44518997,44520114,44521144,44522306,44523419,44525107,44526874,44528503,44530230,44531908,44533601,44535282,44536978,44538284,44539472,44541020,44542698,44544386,44546098,44547960,44549824,44550436,44550599,44550965,44551271,44551550,44551735,44552115,44552310,44552581,44552636,44552897,44552922,44553135,44553266,44553537,44553801,44554139,44554386,44555569,44557071,44558605,44560287,44561501,44562592,44563670,44564744,44565893,44567141,44568625,44570088,44571583,44573011,44574837,44576691,44578469,44580165,44581783,44583158,44584800,44586390,44587901,44589293,44590705,44591980,44593271,44595040,44596633,44597894,44599393,44600877,44602352,44603858,44605352,44606572,44607956,44609411,44610841,44612296,44613839,44615347,44616840,44617913,44619141,44620450,44621915,44623036,44624316,44625561,44626689,44627751,44628961,44631009,44633057,44635105,44637153,44639201,44641249,44643297,44645345,44647393,44649441,44651489,44653537,44655585,44657633,44659681,44661729,44663777,44665825,44667873,44669921,44671969,44674017,44676065,44678113,44680161,44682207,44684259,44686185,44688233,44690281,44692329,44694377,44696425,44698473,44700521,44702569,44704617,44706665,44708713,44710761,44712809,44714857,44716905,44718953,44721001,44723049,44725097,44727145,44729193,44731241,44733298,44735346,44737394,44739432,44741291,44743339,44745387,44747363,44749411,44751459,44753440,44755488,44757536,44759584,44761632,44763680,44765728,44767711,44769759,44771807,44773855,44775903,44777951,44779999,44782047,44784022,44786070,44788118,44790166,44792146,44794194,44796242,44798290,44800338,44802317,44804365,44806413,44808461,44810509,44812565,44814613,44816588,44818636,44820684,44822732,44824778,44826693,44828741,44830789,44832837,44834881,44836796,44838844,44840810,44842858,44844824,44846872,44848920,44850968,44853016,44855064,44857112,44859160,44861208,44863256,44865304,44867352,44869400,44871448,44873504,44875560,44877608,44879650,44881650,44883463,44885511,44887559,44889607,44891655,44893703,44895751,44897799,44899847,44901895,44903943,44905991,44908039,44910087,44912135,44914191,44916239,44918287,44920334,44922287,44924180,44926228,44928276,44930324,44932372,44934420,44936378,44938293,44940341,44942389,44944437,44946484,44948533,44950470,44952426,44954474,44956522,44958570,44960618,44962666,44964714,44966762,44968810,44970858,44972906,44974954,44977002,44979050,44981098,44983146,44985194,44987250,44989298,44991346,44993394,44995442,44997490,44999538,45001586,45003634,45005682,45007725,45009698,45011525,45013573,45015621,45017669,45019717,45021765,45023813,45025861,45027909,45029957,45032005,45034053,45036101,45038149,45040197,45042245,45044293,45046341,45048389,45050437,45052485,45054533,45056581,45058636,45060684,45062733,45064788,45066827,45068804,45070533,45072581,45074559,45076607,45078579,45080627,45082675,45084723,45086771,45088819,45090867,45092915,45094963,45097011,45099059,45101107,45103155,45105203,45107251,45109299,45111347,45113395,45115443,45117491,45119539,45121587,45123635,45125683,45127731,45129779,45131834,45133865,45135793,45137841,45139889,45141937,45143985,45146033,45148081,45150129,45152177,45154225,45156273,45158321,45160369,45162417,45164465,45166513,45168561,45170609,45172657,45174705,45176753,45178801,45180849,45182897,45184945,45186993,45189050,45190933,45192981,45195029,45197077,45199125,45201096,45203144,45205192,45207240,45209288,45211244,45213292,45215340,45217388,45219436,45221484,45223532,45225497,45227545,45229593,45231641,45233689,45235737,45237785,45239757,45241805,45243853,45245901,45247949,45249930,45251978,45254026,45256074,45258122,45260170,45262218,45264266,45266314,45268362,45270410,45272458,45274506,45276554,45278602,45280650,45282698,45284674,45286722,45288770,45290818,45292866,45294914,45296962,45299010,45301058,45303106,45305154,45307202,45309250,45311298,45313346,45315394,45317442,45319415,45321463,45323511,45325559,45327607,45329655,45331703,45333751,45335799,45337847,45339895,45341943,45343991,45346039,45348087,45350135,45352183,45354231,45356210,45358258,45360306,45362354,45364402,45366450,45368498,45370546,45372594,45374642,45376690,45378738,45380786,45382834,45384882,45386930,45388978,45391026,45393074,45395049,45397097,45399145,45401193,45403241,45405289,45407337,45409385,45411433,45413481,45415529,45417577,45419625,45421673,45423721,45425769,45427817,45429796,45431844,45433892,45435940,45437988,45440036,45442084,45444132,45446180,45448228,45450276,45452324,45454372,45456420,45458468,45460516,45462564,45464612,45466589,45468637,45470615,45472663,45474645,45476693,45478678,45480726,45482774,45484749,45486730,45488778,45490498,45492461,45494499,45496547,45498544,45500417,45502376,45504408,45506456,45508478,45510402,45512315,45514339,45516387,45518435,45520391,45522294,45524309,45526357,45528406,45530387,45532275,45534256,45536307,45538355,45540381,45542291,45544242,45546276,45548324,45550370,45552286,45554252,45556300,45558348,45560396,45562444,45564492,45566540,45568588,45570636,45572684,45574732,45576780,45578828,45580876,45582862,45584910,45586958,45589006,45591054,45593102,45595150,45597198,45599246,45601294,45603342,45605390,45607438,45609419,45611467,45613515,45615563,45617611,45619659,45621707,45623755,45625803,45627851,45629899,45631878,45633926,45635974,45638022,45640070,45642118,45644166,45646214,45648262,45650310,45652358,45654335,45656383,45658431,45660479,45662527,45664501,45666549,45668597,45670645,45672630,45674678,45676659,45678707,45680685,45682670,45684718,45686697,45688745,45690793,45692841,45694889,45696866,45698914,45700962,45703010,45705058,45707036,45709013,45710986,45713034,45715082,45717130,45719178,45721226,45723274,45725322,45727370,45729418,45731466,45733514,45735562,45737610,45739658,45741706,45743754,45745802,45747780,45749828,45751876,45753924,45755972,45758020,45760068,45762116,45764164,45766212,45768260,45770308,45772356,45774404,45776452,45778500,45780548,45782596,45784644,45786621,45788669,45790641,45792618,45794666,45796642,45798627,45800675,45802723,45804708,45806756,45808804,45810789,45812837,45814816,45816864,45818841,45820889,45822870,45824918,45826895,45828943,45830991,45833039,45835087,45837135,45839183,45841231,45843279,45845327,45847375,45849423,45851471,45853519,45855567,45857615,45859663,45861711,45863686,45865734,45867782,45869830,45871878,45873926,45875974,45878022,45880070,45882118,45884166,45886214,45888262,45890310,45892358,45894406,45896454,45898502,45900473,45902521,45904569,45906552,45908600,45910648,45912696,45914674,45916722,45918770,45920818,45922866,45924842,45926890,45928938,45930986,45933034,45935008,45937056,45939104,45941152,45943200,45945248,45947296,45949344,45951392,45953449,45955497,45957545,45959520,45961568,45963616,45965664,45967712,45969760,45971808,45973781,45975829,45977877,45979925,45981973,45984021,45986025,45988068,45990116,45992164,45994212,45996260,45998308,46000356,46002404,46004452,46006500,46008548,46010596,46012644,46014692,46016740,46018788,46020836,46022814,46024862,46026910,46028958,46031006,46033054,46035102,46037150,46039198,46041246,46043294,46045342,46047390,46049438,46051486,46053534,46055582,46057630,46059606,46061654,46063702,46065750,46067798,46069846,46071894,46073942,46075990,46078038,46080086,46082134,46084182,46086230,46088278,46090326,46092374,46094422,46096470,46098526,46100574,46102607,46104438,46106486,46108534,46110582,46112630,46114678,46116726,46118774,46120822,46122870,46124918,46126966,46129014,46131070,46133118,46135166,46137214,46139264,46141310,46143315,46145319,46147300,46149101,46151008,46153056,46155104,46157152,46159200,46161248,46163296,46165344,46167392,46169440,46171488,46173536,46175584,46177632,46179680,46181728,46183776,46185824,46187872,46189920,46191968,46194016,46195993,46198041,46200089,46202137,46204185,46206233,46208281,46210329,46212377,46214425,46216473,46218521,46220569,46222617,46224665,46226713,46228761,46230809,46232857,46234905,46236953,46239009,46241057,46243023,46245071,46247119,46249167,46251215,46253263,46255311,46257359,46259407,46261455,46263503,46265551,46267599,46269647,46271695,46273743,46275791,46277839,46279817,46281865,46283913,46285961,46288009,46290057,46292105,46294153,46296201,46298249,46300297,46302345,46304393,46306441,46308489,46310537,46312585,46314633,46316681,46318571,46320619,46322667,46324715,46326763,46328811,46330859,46332907,46334955,46337003,46339051,46341099,46343147,46345195,46347243,46349291,46351339,46353387,46355362,46357410,46359458,46361506,46363554,46365602,46367650,46369698,46371746,46373794,46375842,46377890,46379938,46381986,46384034,46386082,46388130,46390109,46392157,46394205,46396253,46398301,46400349,46402397,46404293,46406341,46408389,46410366,46412414,46414462,46416510,46418558,46420606,46422654,46424702,46426750,46428798,46430771,46432819,46434867,46436915,46438963,46441011,46443059,46445107,46447155,46449203,46451251,46453299,46455347,46457395,46459443,46461491,46463539,46465587,46467635,46469683,46471731,46473779,46475827,46477875,46479923,46481971,46484019,46486067,46488115,46490163,46492211,46494259,46496236,46498284,46500332,46502380,46504428,46506476,46508524,46510572,46512620,46514668,46516716,46518764,46520812,46522860,46524908,46526956,46529004,46531052,46533100,46535148,46537196,46539244,46541292,46543340,46545388,46547436,46549484,46551532,46553580,46555628,46557676,46559724,46561772,46563749,46565797,46567845,46569893,46571941,46573989,46576037,46578085,46580064,46582112,46584160,46586208,46588256,46590304,46592352,46594400,46596448,46598419,46600467,46602515,46604504,46606552,46608566,46610608,46612656,46614704,46616752,46618800,46620848,46622896,46624944,46626992,46629040,46631088,46633136,46635184,46637167,46639215,46641263,46643311,46645359,46647407,46649455,46651503,46653551,46655599,46657647,46659695,46661743,46663791,46665769,46667817,46669865,46671913,46673961,46676009,46678057,46680105,46682153,46684201,46686249,46688224,46690272,46692320,46694368,46696416,46698464,46700512,46702560,46704608,46706656,46708704,46710681,46712655,46714703,46716751,46718724,46720772,46722753,46724801,46726826,46728803,46730843,46732765,46734813,46736795,46738843,46740891,46742864,46744912,46746885,46748933,46750903,46752951,46754999,46757047,46759095,46761143,46763191,46765239,46767287,46769335,46771383,46773431,46775479,46777527,46779575,46781623,46783671,46785719,46787767,46789815,46791863,46793911,46795959,46798007,46800055,46802103,46804075,46806123,46808179,46810227,46812275,46814323,46816371,46818419,46820467,46822515,46824563,46826611,46828659,46830707,46832755,46834803,46836851,46838899,46840947,46842995,46845043,46847091,46849139,46851187,46853235,46855283,46857259,46859307,46861355,46863403,46865451,46867499,46869547,46871520,46873568,46875616,46877664,46879712,46881760,46883745,46885793,46887772,46889820,46891798,46893846,46895894,46897942,46899990,46901966,46904014,46906062,46908110,46910158,46912206,46914182,46916230,46918278,46920326,46922374,46924422,46926470,46928518,46930566,46932614,46934662,46936710,46938758,46940806,46942854,46944835,46946883,46948931,46950979,46953027,46955075,46957123,46959171,46961219,46963267,46965315,46967363,46969411,46971459,46973507,46975555,46977535,46979583,46981631,46983595,46985643,46987691,46989664,46991712,46993760,46995808,46997856,46999904,47001952,47004000,47006048,47008096,47010144,47012192,47014240,47016288,47018336,47020384,47022432,47024489,47026537,47028585,47030639,47032692,47034734,47036669,47038415,47040463,47042511,47044559,47046607,47048655,47050703,47052751,47054799,47056847,47058904,47060952,47063000,47065048,47067096,47069144,47071192,47073240,47075288,47077336,47079384,47081439,47083487,47085517,47087362,47089290,47091338,47093386,47095434,47097482,47099530,47101578,47103626,47105674,47107722,47109770,47111818,47113866,47115914,47117962,47120010,47122058,47124106,47126154,47128210,47130264,47132305,47134153,47136201,47138249,47140297,47142345,47144393,47146441,47148489,47150537,47152585,47154633,47156681,47158729,47160777,47162825,47164873,47166921,47168969,47171017,47173073,47175129,47177184,47179108,47181041,47183089,47185137,47187185,47189233,47191281,47193260,47195250,47197298,47199269,47201317,47203365,47205413,47207461,47209509,47211557,47213605,47215581,47217629,47219677,47221725,47223773,47225821,47227869,47229917,47231965,47233944,47235992,47238040,47240088,47242136,47244184,47246160,47248208,47250256,47252304,47254352,47256400,47258367,47260415,47262463,47264511,47266559,47268607,47270655,47272703,47274751,47276799,47278847,47280895,47282943,47284991,47287039,47289087,47291135,47293183,47295231,47297279,47299327,47301375,47303423,47305448,47307454,47309502,47311550,47313598,47315646,47317694,47319742,47321790,47323838,47325886,47327934,47329982,47332030,47334078,47336126,47338174,47340222,47342270,47344318,47346366,47348414,47350462,47352510,47354441,47356489,47358537,47360585,47362633,47364681,47366729,47368777,47370825,47372873,47374921,47376969,47379017,47381065,47383113,47385161,47387209,47389257,47391305,47393353,47395408,47397464,47399506,47401318,47403366,47405414,47407462,47409510,47411558,47413606,47415654,47417702,47419750,47421798,47423846,47425894,47427942,47429990,47432038,47434086,47436134,47438182,47440230,47442286,47444334,47446390,47448383,47450243,47452291,47454265,47456313,47458288,47460336,47462307,47464285,47466333,47468381,47470429,47472477,47474525,47476564,47478465,47480513,47482561,47484609,47486657,47488705,47490753,47492689,47494737,47496785,47498833,47500881,47502929,47504977,47507025,47509073,47511121,47513097,47515145,47517193,47519241,47521289,47523337,47525385,47527433,47529481,47531529,47533507,47535513,47537564,47539460,47541508,47543485,47545533,47547382,47549425,47551473,47553521,47555569,47557617,47559665,47561713,47563761,47565809,47567857,47569905,47571953,47574001,47576049,47578097,47580145,47582193,47584171,47586219,47588267,47590315,47592363,47594420,47596468,47598516,47600564,47602612,47604660,47606708,47608756,47610804,47612852,47614900,47616948,47618996,47620972,47623020,47625068,47627116,47629164,47631212,47633260,47635308,47637356,47639404,47641452,47643500,47645548,47647596,47649644,47651625,47653673,47655721,47657769,47659817,47661865,47663913,47665961,47668009,47670057,47672105,47674153,47676201,47678249,47680297,47682345,47684321,47686369,47688417,47690465,47692513,47694558,47696564,47698620,47700668,47702716,47704697,47706745,47708793,47710841,47712889,47714937,47716985,47719033,47721081,47723129,47725177,47727225,47729273,47731321,47733369,47735417,47737465,47739513,47741561,47743609,47745587,47747635,47749683,47751731,47753779,47755827,47757875,47759923,47761971,47764019,47766067,47768115,47770163,47772211,47774259,47776307,47778355,47780403,47782451,47784496,47786504,47788552,47790600,47792648,47794696,47796677,47798725,47800773,47802821,47804869,47806917,47808895,47810943,47812991,47815039,47817087,47819135,47821183,47823231,47825279,47827327,47829375,47831423,47833471,47835519,47837567,47839615,47841663,47843711,47845687,47847735,47849783,47851831,47853879,47855927,47857975,47860023,47862071,47864119,47866167,47868215,47870263,47872311,47874359,47876407,47878455,47880432,47882480,47884528,47886576,47888624,47890672,47892720,47894768,47896816,47898793,47900841,47902889,47904937,47906985,47909033,47911081,47913129,47915177,47917165,47919213,47921261,47923309,47925357,47927405,47929453,47931501,47933549,47935597,47937645,47939693,47941741,47943789,47945837,47947885,47949862,47951910,47953958,47956006,47958054,47960102,47962150,47964198,47966246,47968294,47970342,47972390,47974438,47976486,47978534,47980582,47982630,47984607,47986655,47988550,47990598,47992646,47994694,47996641,47998689,48000737,48002785,48004737,48006715,48008693,48010741,48012715,48014515,48016487,48018463,48020511,48022485,48024533,48026581,48028629,48030677,48032725,48034773,48036821,48038874,48040869,48042821,48044536,48046584,48048632,48050680,48052728,48054776,48056824,48058872,48060920,48062968,48065024,48067023,48068872,48070920,48072968,48075016,48077064,48079112,48081160,48083208,48085256,48087304,48089279,48091327,48093375,48095423,48097471,48099519,48101567,48103615,48105663,48107711,48109686,48111734,48113782,48115830,48117878,48119853,48121901,48123949,48125997,48128045,48130018,48132066,48134114,48136162,48138210,48140263,48142157,48144205,48146253,48148301,48150349,48152405,48154420,48156252,48158308,48160356,48162404,48164452,48166500,48168548,48170596,48172644,48174692,48176740,48178788,48180836,48182884,48184932,48186980,48189028,48191076,48193124,48195172,48197220,48199268,48201316,48203364,48205412,48207460,48209508,48211410,48213449,48215497,48217545,48219593,48221641,48223689,48225737,48227785,48229833,48231881,48233929,48235977,48238025,48240073,48242121,48244169,48246217,48248265,48250313,48252361,48254409,48256457,48258505,48260553,48262601,48264649,48266639,48267666,48268734,48270382,48271785,48273558,48274825,48275806,48276960,48278353,48279775,48281238,48282719,48284459,48286326,48288209,48290104,48292076,48293858,48295747,48297795,48299843,48301891,48303939,48305987,48308035,48310083,48312131,48314179,48316227,48318275,48320323,48322371,48324419,48326467,48328515,48330563,48332611,48334665,48336637,48338685,48340733,48342781,48344829,48346877,48348925,48350973,48353021,48355069,48357117,48359165,48361213,48363261,48365309,48367357,48369405,48371453,48373501,48375477,48377525,48379573,48381621,48383669,48385717,48387765,48389813,48391861,48393909,48395957,48398005,48400053,48402101,48404149,48406197,48408245,48410293,48412341,48414389,48416364,48418412,48420460,48422508,48424556,48426604,48428652,48430700,48432748,48434796,48436844,48438892,48440940,48442988,48445036,48447084,48449132,48451180,48453228,48455207,48457255,48459303,48461351,48463399,48465447,48467495,48469543,48471591,48473639,48475687,48477735,48479783,48481831,48483879,48485927,48487975,48490023,48492071,48494119,48496093,48498141,48500189,48502237,48504285,48506333,48508381,48510429,48512477,48514525,48516573,48518621,48520669,48522717,48524765,48526813,48528861,48530909,48532957,48535005,48536978,48539026,48541074,48543122,48545170,48547218,48549266,48551314,48553362,48555410,48557458,48559506,48561554,48563602,48565650,48567698,48569746,48571794,48573842,48575821,48577869,48579917,48581965,48584013,48586061,48588109,48590157,48592205,48594253,48596301,48598349,48600397,48602445,48604493,48606541,48608589,48610637,48612685,48614733,48616707,48618755,48620803,48622786,48624834,48626815,48628863,48630351,48631681,48633227,48634789,48635973,48637301,48638847,48640214,48641112,48641909,48642784,48643618,48644504,48645289,48647310,48649358,48649560,48649585,48649610,48651403,48653457,48654830,48654855,48654880,48655864,48657028,48658406,48659276,48661324,48663268,48665271,48667319,48669367,48671415,48673463,48675511,48677453,48679501,48681549,48683556,48685604,48687652,48689651,48691699,48693747,48695795,48697843,48699891,48701939,48703844,48705839,48707800,48709808,48711752,48713691,48715654,48717660,48719667,48721715,48723763,48725811,48727859,48729907,48731801,48733675,48735723,48737771,48739819,48741867,48743874,48745922,48747789,48749837,48751885,48753896,48755944,48757992,48759991,48762039,48764087,48766135,48768183,48770231,48772279,48774335,48776336,48778384,48780432,48782480,48784528,48786576,48788624,48790623,48792671,48794678,48796726,48798599,48800647,48802695,48804743,48806791,48808839,48810887,48812894,48814942,48816990,48819038,48821086,48823090,48825138,48827015,48829063,48831039,48833061,48834945,48836870,48838875,48840881,48842812,48844690,48846694,48848742,48850790,48852838,48854886,48856934,48858982,48861030,48863078,48865058,48867106,48869154,48871151,48873155,48875203,48877183,48879124,48881116,48883055,48884997,48886886,48888857,48890858,48892906,48894954,48896961,48899009,48901057,48903105,48905108,48907156,48909147,48911195,48913243,48915291,48917339,48919387,48921435,48923483,48925531,48927579,48929627,48931675,48933723,48935728,48937776,48939824,48941872,48943920,48945968,48947925,48949973,48952021,48954069,48956117,48958165,48960213,48962184,48964232,48966280,48968328,48970376,48972424,48974472,48976520,48978470,48980400,48982448,48984324,48986372,48988420,48990468,48992516,48994564,48996612,48998660,49000708,49002699,49004747,49006795,49008786,49010834,49012882,49014839,49016817,49018865,49020913,49022961,49025009,49027057,49029105,49031108,49033156,49035204,49037252,49039300,49041348,49043396,49045444,49047492,49049540,49051588,49053636,49055684,49057732,49059780,49061828,49063876,49065924,49067930,49069880,49071795,49073843,49075765,49077767,49079815,49081691,49083739,49085613,49087661,49089709,49091757,49093805,49095809,49097857,49099905,49101953,49104001,49106049,49108055,49109925,49111868,49113871,49115919,49117919,49119807,49121633,49123681,49125729,49127777,49129825,49131873,49133858,49135799,49137847,49139719,49141767,49143815,49145863,49147911,49149959,49152007,49154055,49156103,49158102,49160150,49162198,49164246,49166294,49168342,49170390,49172438,49174486,49176534,49178582,49180630,49182633,49184681,49186729,49188777,49190825,49192873,49194875,49196923,49198971,49200791,49202748,49204388,49206436,49208484,49210532,49212580,49214502,49216550,49218598,49220646,49222588,49224636,49226684,49228631,49230679,49232653,49234701,49236542,49238590,49240529,49242577,49244625,49246370,49248418,49250290,49252338,49254386,49256434,49258482,49260530,49262578,49264540,49266588,49268636,49270684,49272732,49274780,49276828,49278876,49280879,49282927,49284975,49287023,49289071,49291119,49293072,49295120,49297168,49299216,49301264,49303137,49305185,49307233,49309200,49311248,49313151,49315199,49317084,49319132,49321073,49323121,49325061,49327109,49329157,49331205,49333253,49335301,49337349,49339356,49341404,49343365,49345413,49347461,49349509,49351557,49353559,49355607,49357655,49359703,49361751,49363799,49365781,49367829,49369877,49371880,49373928,49375804,49377852,49379900,49381948,49383996,49386000,49388048,49390096,49392126,49394124,49396172,49398220,49400148,49402196,49404140,49406188,49408119,49410076,49412031,49413964,49416012,49418016,49420064,49422112,49424160,49425974,49427917,49429865,49431869,49433917,49435965,49438013,49440061,49442117,49444061,49446109,49447982,49449926,49451812,49453752,49455800,49457848,49459896,49461944,49463992,49465950,49467998,49469940,49471988,49473930,49475818,49477543,49479591,49481639,49483687,49485735,49487783,49489831,49491838,49493718,49495766,49497814,49499862,49501869,49503917,49505965,49508013,49509962,49512010,49513941,49515947,49517995,49520043,49522091,49524095,49526143,49528191,49530239,49532251,49534299,49536347,49538349,49540397,49542445,49544493,49546541,49548547,49550595,49552643,49554652,49556648,49558696,49560744,49562792,49564662,49566710,49568758,49570806,49572854,49574825,49576870,49578918,49580966,49583014,49585011,49587059,49589056,49591104,49592921,49594969,49596914,49598962,49601010,49602766,49604814,49606862,49608910,49610911,49612959,49615007,49617013,49618984,49621040,49623088,49625136,49627184,49629232,49631280,49633329,49635377,49637433,49639369,49641417,49643465,49645513,49647561,49649570,49651618,49653666,49655605,49657653,49659701,49661749,49663797,49665845,49667718,49669766,49671652,49673553,49675519,49677567,49679615,49681663,49683711,49685759,49687010,49688829,49690877,49692925,49694973,49696913,49698961,49701009,49703023,49705019,49707067,49708783,49710831,49712752,49714800,49716653,49718701,49720580,49722628,49724501,49726549,49728597,49730645,49732417,49734465,49736513,49738561,49740609,49742657,49744607,49746655,49748703,49750662,49752710,49754758,49756734,49758667,49760715,49762688,49764736,49766784,49768832,49770785,49772791,49774714,49776762,49778810,49780858,49782906,49784954,49786961,49789009,49791057,49793105,49795153,49797201,49799200,49801248,49803296,49805337,49807334,49809382,49811430,49812628,49814676,49816724,49818772,49820820,49822824,49824872,49826920,49828968,49830968,49833016,49835064,49837112,49839160,49841208,49843214,49845262,49847310,49849358,49851406,49853454,49855465,49857513,49859561,49861609,49863657,49865705,49867708,49869756,49871804,49873852,49875805,49877853,49879901,49881949,49883997,49886002,49888050,49890098,49892146,49894146,49896194,49898140,49900188,49902236,49904284,49906332,49908380,49910065,49911936,49913984,49915983,49917927,49919885,49921941,49923942,49925990,49928038,49930086,49932134,49934014,49936062,49938110,49940158,49942206,49944254,49946302,49948350,49950398,49952446,49954494,49956542,49958590,49960638,49962686,49964734,49966782,49968658,49970706,49972656,49974659,49976707,49978755,49980803,49982675,49984723,49986771,49988819,49990867,49992915,49994963,49997011,49998881,50000720,50002642,50004690,50006558,50008111,50010159,50012160,50014164,50016212,50018260,50020200,50022248,50024255,50026303,50028300,50030348,50032214,50034236,50036232,50038171,50040174,50042222,50044161,50046108,50048156,50050153,50052201,50054249,50056297,50058246,50060294,50062342,50064290,50066338,50068386,50070434,50072433,50074481,50076451,50078418,50080375,50082423,50084471,50086519,50088567,50090565,50092613,50094661,50096709,50098709,50100757,50102805,50104742,50106790,50108838,50110776,50112824,50114763,50116704,50118752,50120800,50122739,50124787,50126801,50128849,50130853,50132901,50134848,50136812,50138860,50140908,50142914,50144855,50146768,50148816,50150864,50152737,50154785,50156815,50158739,50160787,50162835,50164883,50166931,50168979,50171027,50173075,50175123,50177127,50179175,50181223,50183271,50185319,50187318,50189366,50191414,50193462,50195461,50197509,50199412,50201460,50203508,50205556,50207547,50209595,50211531,50213470,50215411,50217398,50219446,50221260,50223308,50225356,50227404,50229452,50231500,50233548,50235596,50237644,50239692,50241740,50243788,50245836,50247884,50249932,50251938,50253986,50255991,50257956,50260004,50262052,50264100,50266148,50268196,50270244,50272250,50274298,50276346,50278394,50280442,50282490,50284538,50286540,50288588,50290636,50292684,50294683,50296731,50298779,50300827,50302875,50304923,50306971,50309019,50311067,50313115,50315163,50317211,50319259,50321265,50323313,50325361,50327409,50329457,50331505,50333553,50335601,50337649,50339697,50341745,50343793,50345841,50347841,50349889,50351937,50353985,50356033,50358081,50360129,50362177,50364225,50366273,50368321,50370323,50372371,50374419,50376467,50378515,50380563,50382611,50384659,50386707,50388712,50390760,50392808,50394856,50396904,50398952,50401000,50403048,50405096,50407144,50409192,50411195,50413243,50415291,50417339,50419387,50421435,50423483,50425488,50427536,50429584,50431632,50433680,50435728,50437776,50439824,50441825,50443873,50445921,50447969,50450017,50452065,50454113,50456118,50458166,50460214,50462262,50464310,50466358,50468365,50470413,50472461,50474509,50476557,50478497,50480480,50482475,50484478,50486526,50488574,50490622,50492495,50494436,50496484,50498425,50500473,50502521,50504569,50506571,50508619,50510667,50512715,50514763,50516811,50518822,50520870,50522918,50524966,50527014,50529062,50530997,50533045,50535093,50537141,50539189,50541128,50543181,50545205,50547253,50549195,50551243,50553291,50555292,50557340,50559388,50561394,50563442,50565490,50567492,50569540,50571588,50573530,50575540,50577588,50579636,50581684,50583732,50585780,50587828,50589876,50591884,50593932,50595980,50598028,50600076,50602124,50604172,50606220,50608268,50610276,50612256,50614263,50616311,50618251,50620299,50622347,50624291,50626339,50628387,50629987,50632035,50634036,50636084,50638132,50640180,50642236,50644284,50646332,50648380,50650428,50652476,50654524,50656572,50658620,50660668,50662716,50664719,50666767,50668815,50670863,50672911,50674959,50677007,50679055,50681103,50683151,50685153,50687201,50689249,50691297,50693345,50695393,50697441,50699489,50701537,50703585,50704819,50706395,50708443,50710404,50712452,50714223,50716271,50718319,50720367,50722415,50724463,50726511,50728484,50730532,50732580,50734628,50736676,50738724,50740772,50742771,50744819,50746867,50748915,50750963,50753011,50755059,50757066,50759114,50761162,50763210,50765258,50767306,50769308,50771356,50773404,50775452,50777500,50779548,50781556,50783604,50785652,50787700,50789708,50791707,50793755,50795803,50797851,50799899,50801947,50803995,50806043,50808091,50810095,50812143,50814191,50816239,50818296,50820344,50822342,50824390,50826438,50828440,50830488,50832536,50834584,50836632,50838680,50840728,50842601,50844649,50846697,50848745,50850793,50852841,50854697,50856745,50858793,50860841,50862889,50864937,50866985,50869033,50871081,50872955,50875003,50877051,50879099,50880976,50883024,50885072,50887120,50889168,50891216,50893264,50895312,50897360,50899408,50901456,50903504,50905552,50907600,50909360,50911408,50913456,50915504,50917552,50919600,50921606,50923654,50925702,50927750,50929798,50931801,50933849,50935897,50937945,50939990,50942028,50943970,50945910,50947958,50950006,50951829,50953877,50955925,50957973,50960021,50961963,50963836,50965397,50967445,50969493,50971541,50973416,50975464,50977512,50979560,50981608,50983656,50985704,50987752,50989755,50991718,50993766,50995771,50997672,50999654,51001702,51003750,51005618,51007666,51009714,51011762,51013810,51015858,51017906,51019914,51021962,51024010,51026058,51028106,51030154,51032155,51034203,51036076,51038124,51040124,51042172,51044042,51046090,51048138,51050186,51052234,51054282,51056330,51058378,51060426,51062474,51064522,51066570,51068572,51070620,51072668,51074716,51076764,51078812,51080860,51082908,51084956,51086959,51089007,51091055,51093103,51095151,51097199,51099247,51101248,51103128,51105176,51107046,51109094,51111142,51113190,51115238,51117286,51119288,51121336,51123384,51125432,51127480,51129528,51131576,51133624,51135625,51137673,51139721,51141769,51143817,51145865,51147913,51149916,51151964,51154012,51156060,51158108,51160156,51162204,51164206,51166254,51168302,51170350,51172398,51174446,51176494,51178495,51180543,51182551,51184599,51186647,51188695,51190743,51192791,51194839,51196887,51198935,51200983,51203031,51205035,51207083,51209131,51211179,51213227,51215275,51217323,51219371,51221419,51223467,51225515,51227522,51229570,51231618,51233666,51235714,51237762,51239810,51241858,51243906,51245915,51247963,51250011,51252059,51254107,51256155,51258203,51260251,51262299,51264347,51266395,51268443,51270491,51272539,51274587,51276609,51278657,51280705,51282753,51284801,51286808,51288856,51290904,51292952,51295000,51296915,51298958,51300829,51302704,51304752,51306800,51308785,51310833,51312881,51314929,51316977,51319025,51321073,51323121,51325169,51327217,51329215,51331263,51333311,51335359,51337407,51339412,51341460,51343508,51345556,51347604,51349555,51351603,51353651,51355699,51357747,51359765,51361805,51363853,51365901,51367860,51369908,51371956,51373928,51375976,51378024,51380072,51382120,51384168,51386216,51388264,51390312,51392360,51394359,51396407,51398455,51400503,51402551,51404599,51406647,51408695,51410743,51412745,51414793,51416841,51418889,51420937,51422985,51425033,51427081,51429129,51431177,51433225,51435273,51437272,51439320,51441368,51443416,51445464,51447512,51449560,51451567,51453615,51455574,51457622,51459670,51461718,51463729,51465777,51467652,51469700,51471748,51473796,51475844,51477892,51479948,51481996,51484044,51486092,51488140,51490196,51492244,51494298,51496346,51498394,51500442,51502443,51504491,51506539,51508573,51510587,51512635,51514595,51516592,51518640,51520688,51522736,51524784,51526832,51528880,51530928,51532976,51534941,51536989,51539037,51540697,51542745,51544793,51546798,51548846,51550894,51552942,51554990,51557038,51559086,51561134,51563182,51565127,51567175,51569223,51571271,51573319,51575375,51577143,51578850,51580898,51582829,51584788,51586836,51588884,51590932,51592980,51595028,51597003,51599009,51601057,51602998,51604932,51606980,51609028,51611076,51613010,51615058,51617106,51619144,51621123,51623171,51625219,51627267,51629324,51631313,51633361,51635363,51637411,51639459,51641346,51642967,51645015,51647011,51649059,51651107,51653155,51655137,51657185,51659233,51661281,51663329,51665301,51667349,51669397,51671445,51673417,51675465,51677513,51679561,51681609,51683657,51685483,51687531,51689579,51691627,51693675,51695723,51697771,51699819,51701867,51703915,51705963,51708011,51710011,51712059,51714107,51716092,51718140,51720138,51722186,51724234,51726282,51728330,51730378,51732426,51734474,51736522,51738570,51740618,51742666,51744714,51746762,51748810,51750858,51752906,51754954,51757002,51759050,51761051,51763099,51765147,51767195,51769243,51771291,51773339,51775387,51777435,51779483,51781531,51783579,51785627,51787675,51789723,51791771,51793819,51795867,51797915,51799963,51802011,51804059,51806107,51808155,51810203,51812251,51814252,51816300,51818348,51820396,51822444,51824492,51826540,51828588,51830595,51832643,51834691,51836739,51838787,51840835,51842883,51844931,51846979,51848984,51851032,51853080,51855128,51857176,51859224,51861272,51863320,51865368,51867416,51869464,51871521,51873569,51875617,51877665,51879713,51881761,51883809,51885857,51887905,51889953,51892010,51894058,51896059,51898107,51900155,51902203,51904198,51906246,51908248,51910296,51912344,51914340,51916388,51918436,51920493,51922329,51924377,51926425,51928310,51930358,51932406,51934154,51936061,51938109,51940157,51942205,51944253,51946272,51948284,51950332,51952380,51954428,51956442,51958490,51960538,51962586,51964634,51966682,51968730,51970778,51972826,51974829,51976877,51978925,51980973,51983021,51985069,51987117,51989172,51991227,51993224,51995272,51997320,51999368,52001416,52003417,52005465,52007457,52009505,52011553,52013550,52015548,52017596,52019644,52021612,52023660,52025708,52027765,52029813,52031861,52033909,52035913,52037961,52039881,52041929,52043924,52045972,52048020,52050019,52052067,52054115,52056114,52058162,52060210,52062199,52064247,52066245,52068293,52070341,52072389,52074437,52076485,52078487,52080535,52082583,52084631,52086679,52088727,52090775,52092823,52094871,52096919,52098967,52100965,52103013,52105069,52107011,52109059,52111107,52113155,52115203,52117251,52119252,52121300,52123348,52125396,52127396,52129444,52131492,52133540,52135588,52137636,52139684,52141732,52143780,52145828,52147876,52149924,52151972,52154020,52156025,52158073,52160121,52162169,52164217,52166210,52168258,52170306,52172354,52174402,52176450,52178498,52180546,52182594,52184642,52186690,52188738,52190786,52192834,52194882,52196845,52198893,52200941,52202989,52205037,52207085,52209133,52211181,52213229,52215229,52217277,52219325,52221373,52223421,52225411,52227459,52229507,52231555,52233603,52235651,52237699,52239747,52241795,52243784,52245832,52247880,52249928,52251976,52254024,52256072,52258067,52260115,52262163,52264220,52266180,52268179,52270227,52272275,52274323,52276371,52278419,52280467,52282515,52284563,52286611,52288659,52290707,52292755,52294803,52296851,52298899,52300947,52302946,52304994,52307042,52309090,52311138,52313186,52315234,52317282,52319284,52321332,52323380,52325428,52327476,52329524,52331572,52333628,52335565,52337613,52339661,52341709,52343757,52345805,52347853,52349901,52351901,52353949,52355997,52358045,52360093,52362141,52364189,52366237,52368285,52370281,52372329,52374377,52376425,52378473,52380521,52382569,52384617,52386665,52388713,52390761,52392762,52394810,52396858,52398906,52400954,52403002,52405050,52407098,52409146,52411194,52413242,52415290,52417338,52419386,52421434,52423482,52425477,52427525,52429573,52431621,52433669,52435717,52437765,52439813,52441869,52443917,52445965,52448018,52449942,52451866,52453914,52455962,52457972,52460020,52462068,52464116,52466164,52468212,52470260,52472308,52474356,52476404,52478452,52480500,52482548,52484596,52486644,52488692,52490740,52492735,52494783,52496831,52498879,52500927,52502975,52505023,52507019,52509067,52511115,52513118,52515166,52517214,52519209,52521257,52523305,52525293,52527341,52529389,52531437,52533471,52535519,52537512,52539560,52541608,52543656,52545704,52547702,52549750,52551798,52553846,52555894,52557942,52559990,52562038,52564086,52566134,52568182,52570230,52572278,52574326,52576374,52578422,52580470,52582474,52584522,52586570,52588618,52590666,52592714,52594762,52596810,52598858,52600906,52602954,52605002,52607050,52609098,52611146,52613194,52614736,52615843,52616959,52618094,52619240,52621264,52621983,52622678,52623979,52626027,52628075,52628982,52629016,52629050,52629084,52629118,52629152,52629283,52629808,52630157,52630659,52631212,52631828,52632507,52633133,52633643,52634250,52634810,52635426,52635955,52636625,52637324,52637886,52638541,52639192,52639929,52640660,52641449,52642211,52643022,52643682,52644830,52645851,52646767,52647672,52648629,52649576,52650503,52651456,52652450,52653432,52654420,52655382,52656141,52657155,52658494,52659661,52661023,52662226,52663589,52664765,52665910,52667082,52668232,52669427,52670566,52671763,52672907,52674069,52675149,52676099,52677426,52678866,52680113,52680913,52681679,52682436,52683425,52684720,52685935,52687275,52688251,52688582,52688679,52688780,52688894,52689109,52689157,52689274,52689322,52689370,52689418,52689475,52689559,52689606,52689807,52689955,52690002,52690049,52690151,52690198,52690245,52690288,52690385,52690432,52690479,52690526,52690596,52690662,52690712,52690762,52690947,52690992,52691036,52691078,52691119,52691166,52691287,52691335,52691461,52691509,52691557,52691619,52691725,52691772,52691819,52691866,52691964,52692009,52692054,52692099,52692144,52692189,52692287,52692332,52692373,52692412,52692462,52692512,52692635,52692685,52692727,52692837,52692890,52693008,52693057,52693103,52693146,52693216,52693263,52693309,52693355,52693401,52693501,52693547,52693593,52693639,52693686,52693733,52693849,52693894,52693939,52694035,52694080,52694125,52694170,52694267,52694312,52694475,52695404,52696602,52696808,52696855,52697606,52698775,52699150,52699200,52699833,52700981,52701502,52701907,52703095,52704357,52705146,52705968,52706878],\"sizes\":[2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1303,1255,1070,979,1610,1108,1477,1597,1100,1002,775,942,953,941,1018,752,912,981,946,956,861,951,807,893,947,836,794,893,808,1257,872,998,968,1145,1124,986,1277,1049,910,1265,1226,1265,1273,1103,595,613,558,562,536,1014,953,877,667,745,544,758,545,693,737,1014,914,602,672,699,657,1128,644,1038,849,698,540,510,560,737,773,732,824,586,699,859,994,1136,882,794,994,961,584,943,693,914,878,706,857,966,927,374,519,795,776,696,541,614,913,604,664,636,657,781,728,794,664,672,702,516,2048,1512,1450,1451,1529,1507,1542,1543,1496,1513,1520,1629,1779,1868,1958,1990,2021,2016,1997,2006,2017,1946,1895,1763,1805,1864,1946,1863,2001,2041,1876,1863,1844,1785,1716,1727,1728,1823,1865,1917,1942,2029,2001,1995,1976,1832,1616,1513,1488,1493,1519,1515,1529,1497,1480,1446,1445,1440,1932,1594,1304,1301,1255,1293,1243,1328,1346,1297,1251,1318,1210,1285,1403,1393,1431,1395,1482,1410,1449,1537,1527,1515,1531,1541,1562,1641,1614,1583,1601,1571,1584,1547,1487,1544,1697,1701,1598,1734,1536,1369,1357,1409,1248,1234,1251,1294,1227,1184,1180,1200,1146,1189,1180,1241,1287,1255,1706,1668,1083,1099,1141,1101,987,998,1055,1114,1143,1180,1075,1209,1255,1367,1475,1484,1532,1610,1548,1591,1603,1446,1361,1591,1601,1518,1533,1433,1405,1437,1249,1333,1396,1216,1410,1441,1488,1508,1514,1511,1377,1260,1181,1005,1037,1022,1143,1143,1185,1054,885,1032,1019,897,938,996,1338,2001,1502,1577,1548,1615,1573,1617,1688,1577,1614,1601,1684,1575,1413,1569,1592,1552,1660,1718,1588,1577,1610,1479,1499,1454,1600,1613,1453,1487,1540,1566,1557,1527,1555,1597,1591,1643,1688,1686,1564,1539,1648,1621,1522,1493,1182,1391,1555,1543,1466,1488,1595,1650,1703,1741,1547,1511,1597,2048,1022,1000,997,1082,1143,1063,1076,1120,1043,1041,1112,1150,1159,1116,1103,1115,1138,1164,1228,1250,1220,1288,1319,1297,1178,1099,1072,1055,1006,1005,989,1064,969,947,950,925,906,1045,1084,1059,983,1044,990,1042,986,950,1003,1015,1090,1120,1102,1122,1088,1079,1016,835,900,1775,1596,1304,1279,1275,1286,1235,1322,1349,1295,1248,1323,1195,1184,1298,1333,1343,1317,1361,1310,1410,1529,1659,1619,1548,1325,1343,1433,1576,1607,1723,1673,1605,1413,1273,1363,1452,1481,1483,1490,1456,1380,1357,1391,1239,1244,1281,1281,1217,1184,1171,1212,1161,1198,1166,1239,1304,1244,1722,1877,1575,1591,1574,1601,1571,1550,1583,1607,1556,1584,1637,1764,1758,1828,1801,1704,1535,1619,1704,1775,1895,1783,1745,1909,1865,1800,1897,1738,1791,1764,1739,1722,1764,1666,1687,1694,1709,1914,1737,1812,1297,1362,1394,1267,1433,1500,1505,1486,1532,1548,1521,1515,1547,1454,1454,1478,1697,1854,799,823,828,942,877,676,781,965,811,862,708,859,997,1207,1274,1186,1338,1271,1396,1492,1535,1547,1569,1635,1601,1591,1606,1597,1645,1602,1578,1485,1472,1504,1524,1578,1493,1407,1489,1419,1346,1314,1219,1157,1166,1207,1069,1019,1019,1048,1017,1002,1009,1015,1014,828,745,2048,1671,1851,1901,1855,1831,1806,1826,1851,1763,1685,1590,1524,1410,1961,1798,1846,1883,1885,1855,1882,1903,1927,1781,1729,1576,1570,1403,1856,1953,1927,1788,1911,1918,1846,1760,1735,1503,1450,1561,1620,1630,1792,1802,1753,2006,1733,1878,1966,1642,1999,1935,1409,1394,1635,1495,1496,1958,1608,1236,1661,1561,1503,1651,1847,1457,1427,1681,1519,1534,1979,1811,1700,1684,1737,1768,1728,1740,1763,1790,1835,1801,1882,1805,1752,1766,1771,1792,1838,1833,1784,1870,1822,1771,1753,1766,1767,1764,1682,1752,1804,1717,1771,1766,1836,1757,1759,1755,1718,1739,1684,1732,1748,1748,1690,1620,1828,1831,1898,1852,1814,1822,1903,1880,1849,1794,1680,1612,1879,2052,1928,1912,1921,1959,1883,1893,1900,1934,1868,1862,1929,1910,1844,1748,1738,1767,1790,1829,1780,1845,1757,1883,1845,1801,1774,1772,1717,1642,1587,1581,1691,1770,1792,1727,1776,1698,1678,1738,1693,1727,1785,1795,1782,1718,1851,1934,1898,1936,1819,1819,1898,1911,1902,1938,1895,1903,1930,2056,1951,1941,2004,2010,1998,2005,1995,1944,1923,1924,1990,2015,1968,1931,1900,1967,1974,1956,1952,2020,2011,2026,1902,1930,1886,1908,1902,1798,1799,1755,1840,1924,1921,1936,1953,1983,1963,1976,1926,1968,1984,1911,1847,1834,1836,1857,1849,1811,1803,1811,1850,1804,1718,1655,1573,1465,1515,727,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,1453,1404,1430,1536,1551,1491,1419,1479,1218,1244,1440,1510,1262,1208,1391,1460,1505,1427,1480,1394,1426,1356,1519,1465,1453,1473,1495,1511,1441,1551,1509,1540,1521,1490,1597,1466,1531,1530,1460,1518,1578,1560,1368,1449,1386,1679,1652,1627,1643,1559,1573,1661,1690,1535,1569,1647,1506,2048,1146,1076,1177,1123,1020,1006,1074,1139,1100,1153,1105,1184,1204,1375,1350,1485,1559,1601,1541,1537,1636,1494,1405,1503,1593,1537,1538,1515,1371,1457,1319,1338,1354,1311,1302,1450,1426,1555,1529,1472,1466,1307,1241,1082,1003,1032,1023,1143,1151,1154,906,967,1036,947,937,987,1045,1854,1419,1059,1138,1109,1067,991,1033,1085,1093,1149,1184,1334,1259,1269,1630,1515,1420,1572,1481,1467,1595,1577,1474,1543,1588,1605,1425,1497,1500,1620,1626,1733,1827,1904,1759,1625,1807,1746,1677,1561,1589,1297,1335,1235,916,1122,1079,1157,1196,1148,980,896,1057,956,902,947,1015,1619,1859,1523,1529,1506,1545,1521,1486,1508,1519,1481,1525,1579,1692,1750,1815,1768,1683,1509,1608,1681,1722,1894,1704,1711,1804,1804,1730,1929,1550,1729,1777,1726,1692,1740,1547,1586,1653,1684,1899,1704,1788,1263,1341,1363,1223,1383,1444,1502,1450,1459,1478,1451,1505,1469,1376,1400,1429,1661,2040,1678,1669,1665,1790,1771,1751,1729,1793,1799,1811,1820,1912,1731,1744,1791,1788,1827,1835,1805,1839,1851,1794,1772,1765,1767,1772,1757,1698,1811,1754,1748,1743,1819,1813,1752,1769,1749,1697,1723,1712,1739,1717,1718,1667,1662,1858,1885,1876,1846,1819,1831,1904,1869,1800,1722,1623,1577,671,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1303,1313,1339,1463,1417,1548,1515,1413,1464,1455,1482,1428,1429,1395,1353,1134,677,1046,1228,1495,1629,1772,1838,1843,1885,1869,1771,1753,1391,1768,1747,1843,1879,1838,1821,1810,1783,1747,1473,1249,954,1106,1341,1237,1249,1378,1170,1135,1230,1329,1449,1454,1504,1461,1414,1358,1400,1954,1615,1445,1499,1538,1539,1457,1548,1505,1431,1489,1594,1638,1427,1562,1680,1665,1696,1809,1755,1660,1732,1573,1578,1556,1531,1593,1622,1586,1610,1611,1622,1592,1540,1549,1618,1662,1572,1649,1554,1574,1586,1660,1622,1585,1390,1141,1465,1500,1444,1343,1468,1525,1574,1609,1517,1416,1464,1819,1754,1419,1412,1381,1438,1384,1438,1479,1361,1398,1458,1510,1184,1368,1558,1533,1515,1651,1619,1598,1628,1534,1465,1459,1527,1539,1577,1449,1497,1534,1554,1474,1494,1527,1526,1567,1585,1591,1632,1519,1544,1558,1473,1385,1288,947,1158,1351,1364,1254,1392,1450,1470,1553,1474,1342,1357,1584,2008,1596,1653,1662,1755,1753,1709,1772,1660,1703,1732,1828,1677,1458,1643,1655,1619,1726,1800,1679,1647,1669,1542,1541,1512,1677,1684,1512,1546,1574,1625,1666,1606,1645,1713,1677,1732,1762,1777,1633,1588,1685,1660,1553,1532,1250,1533,1719,1713,1558,1617,1712,1774,1816,1839,1659,1630,1674,2048,638,562,623,669,663,684,799,991,1092,1065,842,1157,1471,1536,1618,1549,1156,1579,1518,1670,1793,1654,1535,1727,1624,1712,1730,1628,1546,1797,1687,1744,1744,1699,1619,1689,1738,1726,1767,1723,1535,1428,1407,1213,1170,1407,1380,1268,1218,1262,1338,1466,1538,1519,1509,1562,1671,923,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2043,2010,2030,2050,2048,2048,2048,2050,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2027,2016,2046,2054,2056,2048,2048,2046,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2054,2032,2008,2044,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2037,2010,2040,2053,2057,2057,2048,2049,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1608,1360,1436,1236,1140,1100,1011,1175,1084,1214,1117,1234,1162,1059,1185,1090,1137,1085,1148,1088,1175,1146,1191,963,931,913,986,946,650,1003,792,826,982,399,341,352,664,1156,1297,1446,1391,1408,1251,923,1072,856,912,880,850,1382,1384,1244,1168,1115,944,1144,1169,1064,1105,1083,1203,1286,1071,1114,1032,1247,1132,1193,1108,1128,1128,962,931,967,828,997,959,638,1082,851,869,1009,335,339,358,918,1156,1418,1465,1421,1434,958,1135,1138,905,948,833,1508,1362,50,47,45,57,120,138,193,178,165,265,235,275,613,955,1027,997,1207,1473,1579,1566,1666,1622,1788,1747,1752,1610,1551,1579,1627,1684,1680,1757,1785,1630,1646,1628,1625,1634,1540,1048,930,983,762,554,271,194,137,108,135,173,119,61,53,46,48,49,470,1909,153,196,198,205,220,389,390,385,419,432,245,337,675,824,1018,943,1093,1284,1596,1711,1796,1749,1774,1852,1815,1744,1656,1679,1695,1865,1821,1906,1871,1805,1788,1921,1853,1870,1888,1308,947,903,878,702,556,368,353,317,405,316,399,169,167,141,224,204,123,2009,1367,1313,1294,1195,1318,1400,1401,1309,1384,1312,1406,1481,1419,1383,1451,1496,1457,1448,1464,1547,1383,1367,1406,1402,1271,1106,1260,1404,1296,1367,1345,1390,1242,1383,1433,1327,1280,1381,1528,1475,1415,1513,1276,1383,1409,1437,1422,1435,1363,1312,1381,1300,1483,1349,1196,1257,1223,1821,894,1821,1138,883,1162,1593,1277,1228,1756,775,1090,1164,1869,45,45,48,133,1101,927,1030,1283,1421,1569,1281,1772,1811,1760,1659,1679,1410,836,1416,1640,1769,1819,1726,1794,1840,1804,1640,1649,1673,1739,1902,1847,1900,1851,1787,1818,1892,1855,1852,1931,1635,1601,1541,1676,1642,1355,1236,1374,1176,1199,1107,751,952,120,45,38,45,848,1008,886,791,856,1278,1267,1333,1286,867,918,668,689,724,684,731,695,958,830,942,913,871,940,836,733,581,938,968,891,882,978,465,740,735,763,727,817,861,783,938,656,710,838,825,815,827,836,914,888,873,832,800,851,810,1037,822,828,1709,1495,1529,1442,1681,1615,1534,1609,1546,1505,1511,1648,1621,1554,1531,1650,1313,1499,1585,1603,1581,1466,1549,1481,1698,1843,1460,1456,1251,1116,1234,1344,1297,1032,1162,1214,1078,1164,1236,1291,1232,1020,799,838,1152,1614,1540,1408,1460,1346,1286,1396,1165,1283,1353,1311,1185,1056,922,837,628,1296,1757,1540,1446,1515,1362,1301,1388,1131,1261,1336,1311,1149,809,855,642,968,1921,1495,1439,1469,1410,1297,1351,1285,1177,1375,1380,1313,1142,986,934,809,672,1370,1726,1452,1458,1435,1470,1542,1516,1259,1146,864,798,769,905,866,906,1865,1472,1466,1429,1399,1273,1323,1226,1185,1343,1342,1285,1148,905,904,682,803,1856,1543,1462,1374,1076,1305,1499,1411,1201,902,1087,1486,1791,1582,1569,1304,1183,1310,1486,1326,1174,1107,1272,1249,1357,882,1460,1606,1839,1788,1818,1676,1446,1519,1884,1907,1724,1795,1975,1732,1097,1404,1283,1345,1428,1645,1806,1191,1433,1309,1339,1380,1728,1211,826,897,1474,1575,926,894,1062,1853,1234,1489,1734,1554,1587,1754,1724,1685,1247,1566,1701,1524,1691,1896,1917,1325,1346,1667,1625,1562,1821,1916,1902,1256,1414,1707,1589,1616,1862,1913,1848,1218,1523,1745,1646,1527,1822,1899,1827,1321,1475,1697,1607,1523,1803,1833,1852,1259,1500,1719,1515,1582,1751,1801,1619,1216,1575,1690,1504,1680,1777,1847,1256,1403,1714,1538,1566,1760,1699,1838,1214,1568,1732,1533,1664,1851,1773,1584,1681,1556,1581,1515,1593,1563,1680,1456,1587,1609,1537,1526,1558,1601,1544,1451,1448,1450,1533,1439,1403,1140,1071,1257,1430,1225,1181,1336,1653,1482,1306,1279,1450,1437,1335,1248,1374,1126,1469,1405,47,45,44,46,49,172,482,757,753,855,964,960,1011,1012,958,1202,1143,1327,1315,1145,1327,1277,1180,1169,1045,1091,1203,1008,1196,1123,1000,915,928,704,670,767,564,191,48,49,47,45,45,1776,620,720,848,1145,1345,1164,954,1064,968,1006,700,808,773,1036,940,1198,1156,1135,1233,1278,1192,1251,1353,1354,1388,1341,1324,1320,1131,929,720,512,535,607,785,929,789,841,927,1033,943,894,1046,1606,1430,1222,1322,1318,1498,1434,1499,1650,1756,1804,1827,1836,1746,1751,1724,1601,1751,1754,1637,1635,1630,1679,1500,1524,1679,1694,1546,1594,1584,1584,1536,1378,1146,1068,1493,1573,1563,1591,1576,1402,1356,1434,1527,1799,694,826,1077,1085,1195,1307,1405,1313,1297,1537,1435,1195,720,960,1206,1340,1392,1238,1213,1193,1180,1169,1205,1200,1274,1208,1339,1402,1208,1273,1368,1339,1368,1281,1236,1218,1203,962,988,1218,1116,1318,1202,1647,624,1521,1518,1046,1557,875,1628,1358,2014,1113,958,773,1721,1607,822,847,816,1051,1094,1018,975,1071,1221,1374,1596,1638,1655,1610,1473,1337,1440,1534,1666,1609,1684,1650,1615,1595,1554,1485,1452,1683,1841,1862,1838,1814,1744,1722,1435,1389,1369,1341,1303,1281,959,606,1086,1097,1105,1204,842,1176,825,1115,1014,996,1011,951,985,1021,1021,998,951,1015,1005,1018,951,1020,1005,985,937,980,1016,1009,1023,948,1018,1002,1021,961,1012,1008,1011,952,1019,1022,1024,946,1026,1012,1455,1079,846,865,1154,851,1212,1325,1289,684,589,620,680,663,665,641,1027,1057,771,1011,818,831,817,818,846,965,937,900,975,876,813,869,905,887,950,999,900,1024,625,680,582,770,720,682,956,871,769,942,770,832,852,912,728,921,1522,1811,1377,1793,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,1868,1771,1695,1759,1712,1737,1772,1887,1958,1798,49,45,45,45,45,49,45,45,45,48,49,45,426,756,1316,1421,1455,1559,1528,1462,1495,1566,1664,1682,1716,1745,1744,1664,1721,1639,1590,1646,1635,1614,1574,1306,1333,1224,1189,1084,628,417,271,159,130,49,45,44,45,48,49,45,44,45,48,49,45,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1881,1345,1139,1178,1274,1168,1151,1209,1113,1227,1266,1291,1313,1291,1419,1280,1573,1665,1525,1481,1378,1368,1534,1577,1398,1411,1694,1603,1496,1503,1430,1642,1335,1371,1417,1510,1457,1395,1160,1272,1321,1274,1271,1039,1060,879,1098,1059,1045,881,752,690,831,767,580,656,639,888,2018,1410,1099,1056,1150,1070,1231,1386,1196,1226,1238,1203,1272,1300,1323,1565,1655,1738,1772,1768,1786,1638,1707,1328,1607,1375,1561,1613,1560,1340,1614,1638,1625,1645,1516,1658,1532,1339,1330,1363,1191,1101,1070,1007,978,1016,893,1018,1020,1037,1032,890,790,685,403,505,410,344,2003,862,663,669,636,706,685,666,683,662,661,692,670,788,1366,1634,1506,1583,1587,1681,1581,1548,1501,1356,961,810,1557,1386,1489,1545,1513,1477,1535,1345,1270,1115,963,1268,1469,1503,1437,1514,1438,1327,1176,841,677,672,649,653,690,703,660,662,652,686,653,681,1671,1214,633,694,663,705,669,671,688,690,661,617,665,685,954,1597,1594,1617,1699,1721,1625,1579,1470,1453,1402,1281,1341,1311,1317,1268,1247,1355,1297,1270,1301,1651,1688,1600,1639,1667,1578,1472,1293,1105,908,768,690,647,676,706,625,676,674,673,727,669,621,678,1325,1548,1558,1819,1603,1637,1790,1218,2030,1783,1592,351,482,623,646,693,794,878,939,1098,1056,1034,1281,1432,1541,1566,1580,1599,1526,1476,1450,1455,1463,1407,1473,1524,1416,1478,1408,1344,1275,1407,1407,1532,1652,1576,1484,1333,1165,1158,1242,1226,1231,1332,1166,1159,1068,962,987,1041,1063,967,939,914,727,630,495,527,2038,256,426,515,625,696,772,868,908,980,989,1087,1174,1315,1422,1616,1676,1693,1656,1627,1599,1424,1426,1278,1288,1328,1422,1468,1423,1435,1460,1439,1432,1417,1476,1445,1454,1673,1683,1578,1423,1309,1258,1231,1236,1198,1177,1230,1064,1042,1082,1066,962,837,751,713,578,410,1851,662,403,576,655,661,739,873,860,991,1082,996,1176,1515,1525,1532,1524,1553,1477,1369,1242,1334,1344,1351,1424,1380,1417,1437,1253,1388,1345,1395,1329,1310,1334,1314,1312,1514,1540,1570,1557,1446,1428,1390,1315,1182,1224,1187,1152,1054,1071,987,980,896,867,640,581,409,1305,1593,1657,1589,1647,1798,1429,1731,1288,1705,1423,1469,1845,1407,828,1159,1589,1657,1720,1402,1709,1159,1883,2048,1963,2048,1985,1979,1981,2048,2056,2048,2030,1866,1560,1070,1750,1724,1739,1809,1714,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1819,1117,991,790,915,933,925,1020,748,903,980,933,954,861,937,808,902,939,825,798,888,824,1289,874,1010,946,1163,1104,972,1298,1070,705,753,1360,1267,1274,1330,722,626,619,588,542,573,990,922,902,692,771,528,724,573,677,736,1063,879,598,692,723,599,1117,711,997,907,658,556,543,553,704,718,669,865,647,712,896,986,1163,816,777,938,950,638,838,827,913,787,702,975,939,921,459,501,783,702,866,474,596,993,615,676,567,608,666,810,886,674,691,713,547,1864,1682,1666,1425,1446,1411,1434,1548,1825,1834,1743,1689,1445,1438,1396,1453,1543,1929,1817,1608,1669,1711,1580,1622,1702,1746,1807,1753,1734,1735,1569,1247,1190,1171,1629,1617,1611,1779,1762,1736,1764,1684,1790,1711,1733,1665,1725,1712,1756,1784,1662,1751,1785,1722,1707,1789,1739,1618,1597,1605,1370,1292,1284,1406,1548,1501,1651,1613,1540,1658,1581,1537,1663,1620,1602,1850,1817,1422,1430,1490,1555,1456,1516,1542,1413,1478,1530,1623,1445,1476,1667,1670,1631,1742,1796,1655,1719,1649,1583,1559,1494,1580,1635,1552,1611,1617,1638,1585,1533,1548,1628,1630,1608,1629,1594,1544,1555,1613,1631,1607,1456,1140,1414,1495,1482,1363,1441,1497,1572,1599,1583,1424,1414,1622,2003,1235,1205,1239,1253,1241,1264,1228,1263,1258,1292,1281,1476,1353,1294,1289,1286,1318,1315,1308,1252,1233,1278,1281,1242,1249,1237,1215,1266,1257,1232,1209,1171,1203,1238,1221,1222,1234,1236,1271,1258,1252,1240,1290,1302,1409,1416,1277,1290,1319,1333,1297,1305,1225,1278,1293,1246,1225,2056,1796,1754,1801,1767,1771,1814,1767,1774,1778,1784,1735,1749,1710,1727,1649,1623,1652,1620,1654,1714,1656,1577,1621,1733,1712,1701,1753,1732,1771,1770,1761,1746,1753,1755,1628,1642,1707,1663,1689,1631,1670,1680,1694,1711,1698,1764,1722,1758,1760,1768,1732,1771,1745,1773,1749,1752,1788,973,1384,1751,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1458,664,568,571,594,618,677,634,595,575,602,664,1382,580,542,596,602,481,414,403,555,1739,1750,1333,1037,968,1152,1332,1434,1567,997,1151,1349,1761,1227,1023,1440,396,428,448,472,519,472,510,433,345,261,279,282,400,1679,1922,1751,1705,1697,1782,1024,1179,1135,915,900,1121,1103,886,1174,593,1104,913,970,991,1367,616,1296,1084,1057,993,1046,920,1040,1244,966,887,847,1320,610,1178,1020,1304,1161,1027,1185,585,1129,1077,1114,752,1441,1959,1447,1493,1550,1565,1605,1623,1629,1638,1678,1625,1654,1675,1589,1655,1641,1596,1615,1635,1739,1720,1690,1755,1745,1772,1695,1669,1772,1807,1813,1810,1863,1890,1900,1889,1902,1879,1761,1778,1820,1814,1818,1785,1791,1800,1752,1758,1543,1573,1635,1621,1565,1471,1495,1614,1574,1710,1678,2048,1408,1401,1502,1548,1491,1497,1547,1477,1464,1528,1633,1586,1389,1618,1651,1631,1692,1770,1741,1653,1706,1581,1596,1522,1564,1593,1601,1575,1620,1634,1587,1544,1555,1627,1604,1618,1582,1630,1564,1580,1612,1655,1625,1586,1268,1220,1480,1494,1421,1336,1484,1535,1610,1616,1432,1388,1482,1978,975,577,684,499,616,732,832,705,997,964,1126,919,1183,1247,1295,1320,1338,1343,1368,1391,1403,1470,1366,1416,1460,1562,1449,1410,1455,1320,1027,981,893,1230,1253,1260,1273,1029,1120,966,934,981,906,918,1016,877,769,867,902,849,487,644,814,648,686,654,602,1423,1416,736,753,899,964,1053,1127,1049,1116,1132,1105,948,816,748,1012,1340,1312,1419,1438,1519,1467,1522,1342,1486,1547,1600,1544,1509,1607,1654,1705,1666,1544,1503,1545,1566,1478,1486,1467,1276,1313,1198,1084,926,1016,1079,1097,1066,1158,1222,1238,1092,994,847,737,827,774,799,998,1604,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2019,1184,1295,1203,862,679,386,1269,624,1056,1051,1070,785,491,1462,1557,1397,1381,1413,1333,1334,1142,1139,1167,1133,1170,1537,1324,1355,1242,1222,1156,1224,1154,1316,1504,1395,1362,1316,1244,1249,1374,1491,1587,1664,1569,1550,1610,1562,1552,1556,1489,1540,1501,1435,1376,1368,1394,1904,2056,2048,2048,2048,2048,2055,1881,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2055,2043,2039,2017,1933,2013,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1882,1319,1390,1429,1379,1389,1386,1494,1442,1623,1681,1608,1429,1440,1364,1388,1604,1704,1750,1716,1613,1535,1460,1469,1637,1646,1654,1635,1638,1567,1539,1479,1714,2051,2048,2022,1768,1439,1590,1574,1657,1525,1396,435,214,220,215,212,527,216,216,243,214,222,367,1682,1572,1218,1282,1250,1263,1039,1161,1212,1195,1257,1232,1154,1128,1271,2056,1577,628,1561,2048,961,731,1983,1663,710,1158,971,917,926,930,938,939,946,599,956,791,732,954,973,1103,910,974,868,906,917,1118,956,1022,871,894,930,1172,1148,1069,1040,626,602,401,867,1253,923,1045,491,335,335,336,429,368,700,1245,1134,900,1218,1344,1538,1539,1302,1371,1041,1237,1516,1401,1184,1174,1177,1458,1438,1504,1484,1124,1129,1146,1241,1455,1394,1559,1514,1113,1224,1109,1294,1490,1422,1569,1495,1080,1115,1095,1379,1404,1483,1498,1374,1037,1212,1115,1392,1447,1500,1491,1049,1275,1191,1343,1339,1400,927,607,556,630,704,660,683,638,632,957,942,843,767,717,918,963,801,579,933,849,865,521,625,753,570,767,795,721,810,671,835,541,682,627,417,728,620,699,790,514,923,554,474,626,767,659,505,494,665,454,452,450,620,617,778,426,441,900,911,1065,1141,514,468,531,706,734,958,666,632,620,633,942,1058,991,1054,512,509,882,798,614,597,690,831,736,381,528,764,706,937,699,1107,628,856,787,822,896,897,833,866,889,865,862,850,946,725,795,872,829,897,826,1030,654,991,975,959,966,963,955,953,951,978,950,953,957,956,929,897,868,1152,792,829,544,830,955,833,801,821,827,672,800,844,869,686,798,719,757,815,683,615,793,1259,708,783,1651,1745,1834,1775,2009,1883,2048,2048,2048,1725,1371,1722,1776,2048,2044,1873,1810,2048,1878,1766,2052,2048,2048,1952,1824,1966,1887,1769,2053,2003,1803,1899,1280,1134,574,667,520,1872,2048,1957,1530,1398,1206,1146,1372,2010,1797,1233,1275,1038,1173,1651,1495,1380,992,487,143,496,2048,2048,2048,2048,2048,2048,2048,2057,2057,2048,2048,2057,2057,1992,1915,1437,2048,2048,2048,2055,2048,2048,2048,2048,521,205,2026,2035,2056,2048,1967,1385,1917,2001,2032,1915,2004,2048,2048,2048,2048,2024,1878,2048,1984,1955,2056,2023,2048,2048,2040,2048,2051,2040,1768,1477,1756,1886,2048,2048,2048,2048,2048,2048,2048,2048,1102,983,1192,1214,1310,1215,1676,1483,1027,1538,1166,1328,1053,1105,1074,967,1201,1331,1672,1852,1905,1902,1893,1913,1473,1152,973,1118,1191,1673,1167,1022,1023,1185,1272,1003,1079,1310,1190,1341,1049,1893,2034,2048,1976,2056,1972,2048,1963,2048,2027,1972,2057,1959,2048,2048,1973,2056,2029,1969,2031,2048,2018,2034,1970,2048,2048,1973,2048,2057,1977,2048,2048,1979,2057,2048,1971,2048,2048,1981,2036,2047,2013,2031,1972,2048,2004,2007,2045,2048,2057,1963,2056,2057,2057,2048,2048,2048,2048,2048,2007,2019,2048,2048,2057,2048,2048,2048,2048,2048,2048,1898,2048,2048,2048,2048,2048,2048,2048,2048,1896,2048,2048,2048,2048,2048,2048,2048,1891,2048,2048,2048,2048,2048,2048,1898,2048,2048,2048,2048,2048,2048,2019,1953,2048,2048,2057,2048,2048,2048,2048,1896,2048,2048,2048,2048,2048,2048,2048,2048,2048,1648,1822,1658,1655,1837,1204,988,1918,2015,2044,2052,1982,1984,2050,1833,1963,1993,2018,1964,2021,2031,1341,1391,1445,1534,1327,1933,1194,1162,1139,856,1537,1508,1495,1487,1427,645,705,690,732,724,680,661,584,496,577,532,1336,1845,1680,1702,1699,1699,1913,1725,1743,1765,1186,972,1833,1661,1538,1479,1490,818,513,266,427,426,472,271,610,1743,1693,1686,1697,1823,1783,1799,1510,1473,1618,1473,1478,1517,549,495,495,507,408,382,511,511,487,1091,1833,1677,1670,1669,1748,1842,1794,1730,1224,1641,1665,1478,1471,1488,1488,842,630,646,575,548,524,590,477,623,499,551,427,382,992,1955,1699,1671,1689,1674,1696,1857,1854,1715,1682,1770,1130,1408,1672,1714,1488,1480,1481,1135,580,585,609,567,563,620,574,536,570,549,556,1423,1881,1674,1671,1662,1688,1740,1899,1712,1700,1696,1141,1050,1759,1656,1514,1495,1486,1320,576,586,552,479,434,580,561,594,481,363,487,1257,1795,1687,1681,1675,1653,1871,1715,1741,1689,1436,833,1878,1669,1513,1480,1165,366,519,420,400,515,518,468,706,1826,1647,1696,1662,1861,1673,1689,1486,1340,1571,1508,1479,1454,1490,1488,1369,669,626,501,585,708,490,648,660,565,583,731,708,603,740,684,592,651,613,616,490,918,1989,1727,1662,1718,1679,1659,1697,1712,1712,1693,1897,1815,1754,1726,1675,1819,1822,1782,897,699,928,1821,1843,1657,1818,1567,1477,1469,1466,1462,835,442,440,533,602,631,607,604,478,461,602,514,542,586,901,2003,1693,1694,1681,1688,1687,1675,1920,1719,1771,1792,1776,1398,665,1283,1968,1696,1704,1537,1483,1495,1466,1460,623,642,665,623,624,540,467,575,665,605,425,527,478,497,489,1869,1798,1686,1686,1696,1706,1706,1750,1944,1693,1703,1789,1815,1515,769,1524,1864,1770,1564,1488,1497,1479,1403,569,546,634,631,637,562,499,247,240,179,226,236,220,1582,1965,1728,1682,1706,1718,1728,1707,2030,1779,1738,1794,1789,1753,1005,1684,1624,1574,1458,1041,693,611,693,649,1666,1688,1766,1734,1246,1588,1458,1469,1182,544,573,564,506,449,495,430,511,1148,1797,1660,1675,1659,1865,1687,1686,885,1648,1684,1463,1470,1465,1313,578,604,618,534,569,579,569,338,595,588,567,1796,1689,1672,1679,1684,1682,1878,1692,1755,1720,722,1558,1827,1564,1467,1458,1208,567,581,340,487,545,443,300,296,418,538,1831,1694,1695,1669,1629,1692,1828,1728,1665,1478,821,1853,1685,1466,1445,1428,900,257,364,317,386,445,477,316,309,445,410,403,1751,1649,1633,1645,1673,1644,1839,1735,1629,1594,1169,1685,1542,1486,1500,564,467,500,565,589,629,604,640,476,1388,1738,1673,1653,1686,1872,1672,1694,1729,783,1837,1625,1463,1479,1487,1391,558,497,572,539,615,580,615,412,454,547,438,482,474,1935,1722,1672,1678,1671,1679,1675,1953,1664,1642,1732,1649,773,1548,1767,1724,1422,1482,1491,1466,1485,1497,1493,1490,1480,883,658,753,670,546,646,554,732,533,623,474,652,694,620,626,617,604,639,348,692,660,692,514,418,551,562,260,275,746,2023,2035,1740,1726,1714,1689,1705,1666,1694,1692,1673,1666,1705,1692,2022,1917,1678,1727,1659,1660,1712,1701,1688,1678,1512,751,834,1486,1889,1824,551,730,942,343,1677,1659,1672,1486,1510,1498,1511,1505,1508,1485,1478,1492,1475,997,682,815,680,629,752,651,712,769,661,589,705,689,587,670,662,783,653,659,598,463,548,526,338,277,365,513,555,414,343,247,142,1241,2045,1950,1796,1689,1694,1710,1670,1687,1697,1714,1647,1681,1665,1668,1695,1700,1892,2048,1793,1743,1721,1714,1728,1647,1684,1649,1638,1719,1738,1342,911,1035,1821,1900,1656,1775,1787,1588,1490,1478,1480,1490,487,548,540,545,473,533,436,477,418,548,73,607,588,1121,1925,1663,1687,1668,1689,1695,1877,1705,1734,1681,1718,1229,1192,1773,1737,1439,1452,1461,1478,1508,1502,1479,1467,1393,585,621,647,611,535,631,675,684,704,607,490,705,622,670,570,693,581,470,580,610,577,426,494,585,1370,2024,1826,1697,1666,1680,1699,1697,1707,1694,1656,1698,1805,2029,1711,1653,1661,1698,1726,1726,1743,1595,853,1144,1819,1637,1515,1643,1638,1520,1469,1472,1480,1488,1496,633,517,472,563,715,596,702,581,691,677,565,463,608,724,689,416,404,1559,1957,1676,1662,1658,1680,1715,1687,1676,1926,1787,1697,1702,1817,1756,1742,1071,1544,1747,1840,1568,1480,1501,1480,1507,1486,1485,1483,1497,1502,1513,1504,1495,736,664,695,561,665,623,489,632,648,637,592,585,605,592,552,570,593,497,507,602,609,360,618,612,633,552,539,482,638,558,538,579,586,487,577,396,492,557,467,602,1357,2042,2040,1963,1712,1719,1712,1705,1721,1687,1712,1705,1722,1712,1727,1698,1715,1690,1717,1713,1702,1947,2048,1818,1673,1740,1716,1705,1700,1739,1722,1668,1747,1732,1781,1479,913,911,851,991,1700,1677,1638,1573,1572,1549,1405,1097,641,1742,1772,1773,1651,1480,1478,1484,1485,1265,694,661,596,521,451,359,379,496,232,477,515,380,837,1971,1691,1688,1673,1689,1667,1684,1965,1731,1748,1718,1707,929,1689,1763,1525,1459,1482,859,438,525,384,393,281,427,324,824,1838,1675,1674,1669,1881,1733,1731,1511,1434,1630,1459,1477,1462,1466,991,576,598,598,632,534,543,598,617,333,491,420,523,310,1506,1833,1650,1656,1675,1655,1683,1692,1890,1695,1702,1699,1245,453,1115,1358,1376,1613,1512,1486,1332,388,180,447,341,331,258,245,423,1825,1649,1648,1652,1797,1644,1540,975,1545,1490,1449,1443,570,593,392,480,518,465,902,1776,1662,1663,1828,1745,1087,1646,1497,1490,1465,1480,1455,1475,1481,839,619,648,669,589,489,522,569,631,313,559,475,561,432,481,386,344,508,246,996,1921,1798,1657,1693,1691,1693,1685,1660,1671,1668,2040,1702,1729,1767,1729,1661,1659,1041,858,1511,1582,1490,1666,1667,1502,1484,1484,1483,704,462,350,529,439,437,291,480,495,475,419,349,346,575,1921,1679,1659,1656,1668,1652,1669,1956,1640,1706,1675,1567,632,1100,1554,1691,1528,1482,1246,520,509,332,167,595,319,683,1762,1709,1692,1848,1792,1745,1059,1688,2033,2052,2049,2051,2052,1634,1612,1521,1370,976,817,844,757,851,865,1476,2011,2017,1906,1941,1558,1124,1326,1261,1441,1256,881,1352,727,862,1130,1172,1014,1081,971,1101,1044,988,899,1101,1132,1094,1012,799,977,993,891,890,907,857,995,902,956,1023,1017,937,1092,1029,954,886,850,915,1010,856,1010,942,933,943,876,1016,1048,983,1061,857,999,1057,1044,1036,999,1003,1100,1107,1096,1195,1092,1114,1131,1128,1091,1147,1133,1200,1038,1098,978,648,1071,1185,1075,974,1099,1189,1124,1017,1126,1029,1032,1063,1037,1272,1120,1087,1039,1091,1152,1078,1178,1098,1199,1109,1061,1138,1170,1155,1149,1112,1184,1232,1118,1060,1213,1124,1414,2048,1463,1080,1061,962,958,978,1104,1031,999,889,1196,1144,826,1072,1002,1003,1041,692,833,747,841,1017,1421,1459,1490,1469,1972,2048,2048,1923,1384,2045,2039,2048,2048,2024,1773,2048,1678,1912,2053,2048,2048,2048,2048,2048,2048,2055,2027,2042,2021,2048,2036,2005,1955,1849,1691,1923,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2014,1956,1832,1817,1462,1608,1941,1906,1815,1884,2038,2053,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1994,1567,999,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2054,2046,1720,1887,2048,2048,2048,1931,1605,1378,1221,1039,731,528,1760,2048,2048,2048,2056,2057,2054,2057,2057,2048,1909,1480,840,1923,2048,2020,1975,1864,1723,1531,1245,907,618,292,133,1880,2048,2048,2053,2049,2048,2048,2048,2057,2048,2055,2048,2053,2010,1835,1633,1512,1245,2023,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2043,2021,1943,1771,1506,1061,1057,1801,1873,2000,2048,2056,2057,1973,1723,1345,827,2054,2047,2048,2027,1890,2048,2057,1835,734,50,220,33,548,2048,2048,2048,2048,2048,2048,2048,2044,1930,2029,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2056,2048,2048,1965,1518,1978,1994,1535,1598,2057,2014,1630,1330,1486,1853,2024,2057,2057,2048,2046,2055,1914,1483,480,833,2048,2048,2056,2048,2051,2056,2048,2048,2048,2049,2012,1857,1839,1977,1586,1936,2057,2048,2048,2048,2057,2048,2057,2050,1910,2057,2057,2048,2048,2057,2048,2048,2014,1636,2006,1959,1935,1023,2046,2048,2049,1911,1651,2048,2048,2048,2048,2054,2048,2048,2048,2048,1869,1375,1561,1932,1975,2019,2035,2054,2047,2032,2042,2050,2051,2038,2015,2021,1983,1989,1970,2057,2045,2055,2035,2038,2025,2046,2046,2037,2047,2041,2022,1897,1823,1618,1427,1322,1167,1186,1205,1081,1023,1140,1007,1015,942,889,902,810,658,625,463,189,185,141,59,63,1686,2026,2047,2048,2056,1940,1749,1671,1279,748,2048,2048,2048,2048,1901,2048,2048,2048,1977,2048,2048,2048,2055,2002,2048,2055,2053,2053,2038,2056,2048,2057,2036,2053,2056,1970,1935,1841,1705,1765,1665,1860,2054,2048,2045,2048,2057,2053,1902,1896,2051,2048,2057,2057,2048,2053,2056,1909,2048,2048,1950,1627,1794,2056,2055,1613,1745,2048,2056,2048,2048,2048,2048,2057,2048,2032,1958,1720,1487,1484,1256,1216,1388,2057,2048,2055,2057,2041,1933,1755,1156,303,938,1460,1678,1883,1940,1907,1935,1996,1943,1766,1579,1357,1164,652,396,1449,2007,2043,1557,1018,1568,2048,2048,2048,2048,2048,2048,2048,2048,1933,2041,2051,1867,1548,1067,1345,2048,1899,1467,1606,2048,2048,2053,2055,2048,2049,2056,2053,1930,1909,1605,2035,1746,1202,1042,2047,2048,2048,2048,2048,2048,2048,1911,1847,2057,2048,2048,2048,2048,2048,1984,1098,1372,1839,2023,2057,2048,2055,1406,1535,1922,1948,2048,2048,2048,2053,2040,1889,1338,1080,793,513,423,244,112,1668,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1330,2050,2048,2048,2048,2048,2048,2048,2048,1227,237,1242,1680,1945,2057,2048,2048,2057,2048,2048,2048,2048,2048,2048,1912,1636,1507,1408,1194,1097,963,937,719,797,950,939,774,1558,2041,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1953,1306,781,675,1413,2048,2048,2057,2052,1541,1684,2048,1777,1333,1007,578,792,933,2048,1920,1269,461,1783,1934,2002,2054,2057,2048,2051,2047,2043,1515,1804,1793,1951,1974,2052,2056,2048,2048,2057,2056,2057,2044,2019,1771,1512,927,669,1510,2045,2048,2048,2048,2048,2048,2048,2057,2055,1989,1764,1481,1121,989,223,326,2031,2052,1971,1930,1802,1703,1724,2057,2057,1792,1572,1276,1767,1764,1997,2048,1925,2048,994,2048,1704,1854,1872,2048,1678,1915,1412,1436,1110,1566,1996,2054,2050,1935,1963,1997,1914,2048,2057,2030,1768,1053,1201,2048,2048,2048,2048,2048,1305,1001,2048,2048,2056,2048,1554,388,1779,2048,2053,2048,2048,2048,2056,1956,2050,2048,1491,2035,2048,1736,2057,2057,1617,2022,2048,1466,1293,1881,1579,694,2040,2048,2048,2051,1417,122,124,1288,2036,2057,2048,2056,2056,2048,2055,1909,2048,2048,1947,2045,2056,1948,2048,2042,2048,2048,2041,2024,1912,1817,1769,1820,1556,1771,1208,1657,1694,1572,1304,1297,2025,1917,1876,1928,2048,2048,2048,2027,1486,1020,719,1362,1933,1302,1572,1809,2048,2048,2048,2048,2048,2048,2048,2057,2054,2048,1984,1790,1592,1412,1181,927,1271,2048,2048,2048,2048,2048,1608,652,1984,2047,2056,2013,1879,2021,2048,2056,2048,2057,2057,2048,2044,1979,1807,1435,784,886,2048,2048,2048,2048,1449,211,933,2038,2048,2048,2048,2048,2057,2048,2048,1939,1584,261,522,1371,1949,2056,2048,2048,2048,2048,2057,2048,2057,2056,2048,2006,1907,1773,1774,1730,1566,1411,1237,1247,1223,1048,817,540,547,512,487,461,414,391,431,494,418,556,521,223,390,837,1175,1199,1206,1146,1095,923,851,753,493,273,148,164,996,1659,1855,2053,2048,2048,2013,1958,2009,1817,1993,1761,2022,1956,1711,1539,2049,2048,2047,2022,2033,2041,2030,2053,2012,1998,2000,2049,1885,1985,2052,2048,2043,1704,1828,2021,1769,1869,2047,1789,1264,1638,2037,2052,2018,1889,1915,1916,1875,1927,2005,2048,2056,2056,1840,2048,2047,1634,1513,1595,1384,1139,442,615,396,453,739,663,1068,1619,1382,1430,1359,1282,1425,1678,1715,1789,1790,1934,1990,2020,2044,2048,2054,2048,2055,2048,2055,2056,2039,1990,1969,2003,1982,1909,1777,1731,1724,1686,1675,1522,1444,1464,1417,1435,1349,1245,1211,1202,1177,1143,1046,949,954,922,1507,1453,1499,1504,1449,1430,1555,1545,1498,1547,1470,1566,1612,1708,1562,1621,1528,1509,1591,1695,1741,1803,1768,1713,1803,1873,1905,1856,1985,1949,1947,2052,2045,2057,2048,2057,2054,2055,2016,1942,1751,1628,1099,1281,1801,1975,2057,2055,2056,1485,212,897,2048,2048,2048,1388,2053,1171,1926,2048,1673,1460,2057,2048,2048,2048,1598,2048,2007,1609,1217,2048,2057,2048,2057,2048,2056,2014,2018,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2021,2056,2055,2057,2048,2048,2033,1969,2003,2048,2048,2048,2033,2048,2057,2048,2048,2048,2048,1802,1245,2054,2051,2053,2057,2057,2048,2057,1921,1916,1853,1541,1630,1475,1698,1835,1642,1461,1371,1139,949,428,1384,2048,2048,2048,2048,1997,1690,1216,226,815,2016,2048,1979,1656,1415,1734,1851,1192,200,639,961,375,391,344,391,446,397,384,288,821,897,852,777,534,527,497,448,694,476,687,801,510,528,683,823,1004,226,462,594,331,454,1023,661,705,488,396,868,735,877,683,879,1008,822,1074,1023,1300,1213,389,425,478,194,320,383,280,527,610,631,208,290,256,333,135,211,333,190,286,310,277,362,296,208,120,181,239,122,257,819,657,443,435,702,783,917,676,922,1092,837,751,802,360,436,315,340,361,230,409,589,373,307,522,1014,589,1222,651,657,785,916,442,461,622,380,741,1741,1656,995,1192,1391,1414,1479,841,1053,969,802,887,1267,464,1172,829,1055,606,1034,291,527,586,297,803,365,514,813,755,505,624,534,429,606,1205,1309,931,867,931,1323,926,815,1272,1574,1027,1102,780,1269,1030,1460,921,1168,814,1264,824,939,900,994,1043,1073,999,407,429,259,360,422,203,277,86,318,303,560,450,519,310,577,602,887,791,796,778,620,1062,1376,1087,1257,1406,1117,931,896,497,446,766,983,1074,621,946,405,331,543,623,491,1070,1208,1124,361,570,453,516,543,550,382,534,324,546,443,475,329,589,255,393,723,579,826,291,1429,517,543,569,555,449,702,419,353,546,167,444,534,502,840,759,1133,894,971,551,470,429,201,247,491,660,639,478,631,529,382,377,481,386,409,390,711,219,329,234,334,264,364,136,217,257,361,106,110,110,184,109,97,140,109,97,249,318,465,274,173,839,832,808,631,1014,814,570,619,503,498,242,1398,1329,1104,1087,1139,1217,1423,1603,1702,1344,1189,873,945,954,1358,1709,1667,1234,1531,1426,1150,991,611,569,716,279,689,617,832,812,436,426,398,337,362,357,325,614,205,414,205,501,432,338,223,257,181,156,179,487,653,1210,895,760,325,155,491,541,654,393,592,618,229,473,690,1063,895,686,613,466,484,760,482,476,426,760,534,567,649,706,491,266,428,401,388,354,146,37,36,135,186,187,222,282,153,236,181,164,136,427,313,305,394,210,47,898,1154,1176,1135,1065,1185,772,1276,793,351,392,1217,1225,566,1036,1811,1462,1428,1489,1534,1425,1547,1382,1478,1447,1554,1417,1442,1467,1585,1472,1533,1402,1503,1400,1362,1368,1540,1511,1618,1402,1561,1626,1534,1704,1643,1681,1714,1582,1028,928,1113,1110,1272,1873,1719,1763,1739,1671,1710,1730,1712,1718,1728,1699,1727,1752,1771,1770,1702,1653,1688,1686,1649,1690,1718,1705,1739,1683,1702,1650,1639,1673,1649,1584,1577,1637,1906,1530,1730,1678,1602,1656,1646,1730,1736,1823,1847,1827,1817,1810,1798,1707,1787,1663,1767,1822,1849,1746,1644,1754,1834,1704,1788,1768,1759,1719,1674,1647,1623,1648,1734,1645,1630,1581,1582,1660,1658,1650,1703,1700,1717,1663,1721,1688,1756,1729,1621,1746,1718,1700,1730,1676,1649,1690,1683,1614,1660,1592,1604,1543,1509,1525,1500,1663,1124,1072,848,651,908,1324,1439,1472,1288,1131,1166,1206,1138,1390,1369,1237,1296,1271,1276,1182,978,882,757,889,907,742,623,838,1052,1090,1060,1171,1593,1558,1402,1439,1378,1621,1436,1490,1539,1576,1355,1293,1268,1255,684,240,208,249,223,220,887,1389,1414,1184,1578,1645,1399,1272,1526,1115,738,1375,1306,798,1435,1563,1445,1639,1573,1623,1473,1355,1316,1630,1270,1447,1546,1721,1408,1400,1397,1482,1366,1635,1155,1565,1702,1567,1730,1491,1547,1715,1185,1721,1274,1652,1441,1134,1543,1513,1679,1507,1387,1469,1485,1357,1556,1645,1587,1431,1221,1587,1474,1539,1595,1355,1373,1480,1691,1262,1650,1197,1454,1500,1662,1233,1360,1504,1655,1583,1669,1113,1561,1336,1621,1040,1566,1417,1704,953,1486,1446,1469,1334,1484,1562,1623,1602,1614,1534,1341,1363,1711,1479,1651,1732,1416,1512,1586,1510,1640,1095,1683,1661,1383,1788,1296,1668,1737,1548,1643,1227,1655,1742,1235,1733,1775,1335,1471,1615,1360,1579,1634,1471,1576,1590,1511,1544,1592,1683,1624,1625,1532,1276,1579,1803,1454,1588,1867,1887,1899,1943,2047,1997,2055,2019,2022,2012,2036,2025,2037,2023,2044,2053,2047,2046,1990,2014,2002,2034,2026,2038,2049,2048,2028,2045,2050,2013,2021,2030,2052,2050,2033,2046,2048,2037,2015,2023,1871,1990,2036,2038,2051,2033,2029,2023,2040,2015,1987,1989,1984,1985,2009,1995,2030,2042,2022,2048,2031,1990,1971,1991,2001,2006,1988,2045,2018,2029,2046,2031,1988,1968,1996,2018,1976,2008,2045,2049,2048,2028,2014,1975,1990,2035,2017,2033,2032,2047,2052,2053,2039,2027,2051,2018,2044,2003,2052,1993,2036,2041,1928,1979,1968,1985,1970,2013,1937,1953,1985,1992,1977,1940,2009,1992,1994,1916,1967,1958,1980,1978,1995,1931,1988,2011,1963,1939,2010,1974,1990,1946,1973,1997,1992,1979,1978,1967,1984,2029,1986,2007,1993,1974,2009,1960,2019,1906,2002,1965,1985,1998,1978,1978,1946,1981,1977,2013,1952,2005,2002,1997,2003,2021,1994,1999,1996,1972,1992,1970,1972,2017,1994,1952,1952,1996,2024,1966,1976,2040,2024,2000,1977,2044,2039,1946,2057,2004,2022,2024,2048,2000,2013,2034,2034,1994,1975,1979,2009,2021,1993,1976,1831,1977,2056,2048,2033,1936,1972,1910,1908,1745,1908,1887,1919,1762,1931,1823,1970,1995,1973,1849,1929,1940,1837,1864,1850,1987,1950,1959,1912,1941,1891,1927,1885,1859,2001,1956,1951,1977,1800,1983,1838,1876,1836,1890,1961,1981,1894,2031,1974,1903,1860,1845,1917,1862,1960,1961,1912,1931,2009,1956,1991,1738,1954,1727,1992,1948,1953,1932,1860,1969,1939,1954,1816,2017,1958,2000,1780,1707,1858,1729,1905,1866,1878,1822,1822,1862,1837,1964,1931,1905,1936,1920,1877,1944,1912,1905,1918,1895,1892,1950,1903,1987,1908,1942,1882,1878,1923,1834,1897,1796,1919,1919,1799,1939,1533,1772,1350,1729,1824,1744,1862,1960,1934,1976,1979,1990,1997,1922,1975,2009,1955,1968,1978,1790,1416,1427,1415,1438,1464,1525,1394,1601,1478,1436,1533,1684,1768,1637,1629,1908,2019,1980,1931,2039,1967,1810,1957,1917,1999,1985,1930,1976,1922,1965,1826,1865,1967,2010,2009,1907,2019,1904,1958,1897,1866,1988,1966,2018,1892,2018,1933,1916,1888,1849,2022,1919,2022,1888,1973,1851,1906,1898,1859,1962,1976,2026,1905,1969,1939,1868,1899,1878,1998,2016,1987,1935,1998,1922,1845,1921,1929,1964,1952,1919,1946,1940,1912,1961,1922,1892,1739,1745,1637,1658,1669,1687,1773,1704,1681,1678,1701,1722,1702,1726,1702,1653,1693,1690,1694,1716,1715,1721,1645,1637,1657,1708,1737,1778,1689,1603,1594,1651,1782,1719,1658,1642,1625,1667,1654,1750,1735,1724,1670,1634,1643,1759,1793,1762,1655,1600,1642,1761,1884,1875,1773,1717,1776,1791,1853,1850,1847,1796,1786,1834,1739,1783,1719,1704,1675,1720,1732,1651,1581,1763,1737,1709,1623,1845,1631,1633,1782,1705,1524,1714,1725,1728,1642,1765,1747,1775,1673,1774,1783,1823,1657,1742,1757,1700,1746,1736,1775,1967,1905,1989,1999,1987,1963,1909,1946,1930,2013,1969,1984,2009,1991,1977,2002,1971,1991,1981,1981,1964,1995,2001,1994,1982,1961,1997,1964,1950,1970,2013,1997,1988,1961,1986,1971,1984,1971,1982,1969,1965,1980,1963,1969,1959,1986,1960,1975,1953,1983,1948,1976,1947,1949,1964,1956,1969,1958,1975,1978,1956,1960,1958,1965,1963,1959,1963,1956,1972,1952,1973,1952,1966,1954,1965,1967,1890,1928,1904,1897,1918,1920,1888,1922,1899,1902,1926,1905,1904,1910,1914,1899,1935,1865,1903,1916,1834,1889,1927,1837,1880,1951,1843,1867,1953,1841,1852,1955,1841,1833,1958,1849,1809,1965,1837,1820,1971,1832,1834,1886,1804,1830,1896,1779,1846,1893,1756,1874,1898,1745,1876,1892,1760,1880,1864,1788,1885,1836,1799,1895,1811,1865,1909,1821,1869,1916,1805,1892,1856,1847,1912,1837,1852,1911,1809,1886,1872,1838,1912,1849,1839,1918,1851,1916,1879,1846,1904,1887,1859,1902,1884,1855,1903,1884,1855,1898,1884,1851,1893,1883,1849,1893,1886,1845,1894,1886,1847,1906,1910,1832,1916,1905,1836,1916,1904,1846,1935,1886,1846,1933,1859,1855,1926,1858,1867,1919,1864,1872,1904,1859,1854,1925,1909,1913,1931,1908,1925,1909,1920,1926,1917,1917,1926,1923,1905,1915,1915,1924,1921,1978,1976,1983,1982,1980,1992,1994,1986,1975,1976,2005,1908,1959,1889,1924,1885,1919,1889,1928,1845,1922,1904,1875,1940,1971,1967,1960,1969,1957,1957,1982,1924,1988,1927,1981,1940,1968,1939,1981,1890,1955,1831,1980,1836,1950,1871,1908,1889,1894,1935,1853,1972,1827,1976,1844,1936,1859,1858,1870,1818,1902,1805,1940,1812,1877,1855,1843,1880,1822,1929,1782,1911,1829,1878,1859,2039,2057,2030,2005,2017,1995,2025,2017,2046,2041,2027,2045,2034,2031,2022,2001,1835,2016,2004,2047,2057,2051,2026,2034,2021,2014,2004,2012,2041,2029,2025,2052,2038,2039,2025,2017,1972,1937,2031,2002,2016,2052,2048,2019,2016,1989,1995,1989,1972,1997,2019,2046,2020,2021,2014,2012,1976,2007,1997,1973,1980,2017,2044,2016,2012,2017,2008,1978,2000,1990,1974,1972,2012,2040,2025,2051,2047,2032,2006,2034,2015,2014,1959,2050,2035,2048,2041,2055,2045,2050,2017,2028,2027,2032,2045,2048,2000,2016,1960,1997,1974,2005,2001,1972,2016,1995,1961,2005,1978,1945,1941,1972,1990,2019,1969,2005,1998,1929,1943,1958,1930,1793,1905,2001,1999,1953,2010,1980,2008,1976,1981,1988,1963,1903,1894,1916,1975,1968,1921,1905,1947,1999,1945,1935,1836,1891,1986,2003,1908,1852,1918,1970,1955,1867,1880,1878,1848,1900,1956,1927,1938,1945,1848,1892,1860,1893,1980,1909,1967,1959,1886,1876,1891,1896,1953,2003,1945,1891,1818,1837,1882,1930,1972,1865,1876,1824,1630,1930,1927,1899,1920,1912,1841,1880,1931,1842,1876,1877,1898,1854,1865,1822,1849,1972,1959,1919,1913,1894,1842,1844,1880,1824,1841,1924,1968,1963,1906,1959,1818,1896,1958,1934,2031,2025,2007,1953,1929,2003,1972,2009,1953,1952,1934,2049,2013,1987,1835,1970,2002,2014,1987,1961,1983,2015,2008,1989,1967,1983,2001,2018,2016,1982,1919,1970,1975,1979,2037,1953,2013,2040,2015,1991,2008,1927,2020,2002,1982,1980,2025,2028,2004,1930,1750,1792,1886,2016,2013,1975,2024,2002,1973,1963,1954,1957,1956,1890,1954,1956,1972,1935,2002,1972,2026,1996,1993,1955,1947,1993,1977,1969,1854,1948,1941,1978,1880,1897,1949,1941,1873,1915,1990,1985,1992,1981,2008,2012,1997,2027,1902,1907,1984,1922,1704,1912,1945,1947,1952,1936,1943,2015,1985,2003,1994,1974,1956,2028,1990,1963,1994,1949,1928,1961,1945,1974,1935,1970,1980,1994,2012,2016,1991,1973,1973,2023,1967,1972,1963,1983,1949,1992,1948,1943,1997,1967,2009,1982,1923,1995,2022,1984,1963,1956,1937,2041,1949,1995,1997,1979,2014,1977,1979,2032,1980,1960,2022,1925,2047,1948,1942,1990,1967,1984,1988,2002,1957,1900,1961,1997,1939,1949,2002,1956,1912,1978,1984,2011,1984,1938,1955,1959,1938,1988,1912,1953,1956,1836,1866,1955,1973,1893,1902,1929,1910,1974,1943,1906,1995,1976,1946,1996,1972,1937,2028,1829,2015,1965,1992,2012,1997,2014,2051,2036,1864,2020,1968,2040,2023,2029,2054,2035,2027,1960,2007,1999,1999,2031,2024,2025,1994,2041,1984,2055,2001,2023,2045,2033,2056,2030,2045,1972,2017,1995,2014,2039,2023,2050,2056,2048,1984,2006,1969,2048,2041,2033,2047,2040,2048,1940,1949,1948,1927,1886,2001,1962,1982,2001,1993,2034,2026,1934,1997,1962,2029,1957,2000,1934,1887,2000,1981,2005,1981,2010,1937,1802,1986,1968,1624,1867,1800,1653,1618,1642,1533,1797,1365,1517,1538,1381,1591,1270,1502,1477,1144,1516,1156,1417,1305,1228,1412,1149,1426,1153,940,1594,1398,1182,1238,1324,1356,949,1273,1387,1126,1610,1098,1368,1169,1511,1274,1271,1445,1532,1181,1627,1428,1465,1587,1336,1622,1314,1494,1541,1178,1638,1162,1437,1158,1551,1241,1365,1370,1047,1174,1519,1471,1121,1257,1338,1346,961,1303,1439,1170,1541,1081,1367,1086,1664,1216,1455,1461,1401,1472,1465,1578,1445,1598,1479,1290,1447,1520,1378,1216,1593,1262,1341,1147,1615,1209,1422,1303,945,1331,1442,1430,1093,1340,1454,1133,982,1276,1395,1165,1505,1123,1395,1136,1602,1257,1502,1473,1358,1498,1432,1540,1486,1523,1562,1215,1498,1479,1193,1378,1494,1312,1380,1147,1564,1151,1401,1325,862,1564,1327,1289,1175,1217,1602,867,1212,1400,1169,1509,1033,1374,1291,1321,1383,1207,1432,1525,1241,1615,1470,1494,1564,1324,1655,1286,1529,1529,1274,1640,1158,1384,1271,1360,1416,1281,1456,1095,962,1631,1416,1165,1244,1349,1510,901,1251,1451,1192,1629,1043,1369,1114,1624,1239,1394,1452,1418,1338,1476,1578,1433,1566,1463,1412,1369,1475,1504,1201,1649,1172,1422,1165,1609,1164,1413,1274,906,1311,1406,1432,1089,1306,1500,1060,1045,1322,1289,1204,1545,1168,1372,1174,1612,1259,1462,1495,1380,1410,1460,1610,1514,1599,1552,1259,1512,1556,1343,1053,1691,1167,1349,1142,1576,1196,1297,1365,1006,1171,1495,1438,1084,1293,1516,1031,1034,1356,1245,1080,1517,1142,1398,1127,1635,1111,1382,1509,1450,1420,1539,1578,1497,1556,1599,1334,1443,1556,1389,1108,1701,1198,1363,1148,1589,1205,1258,1392,1096,930,1604,1455,1178,1239,1337,1387,932,1279,1402,1139,1571,1065,1348,1288,1588,1257,1209,1538,1554,1385,1660,1423,1515,1564,1414,1716,1242,1507,1524,1221,1591,1268,1379,1357,1246,1510,1225,1477,1208,876,1680,1300,1233,1219,1195,1657,823,1262,1450,1264,1628,1054,1330,1221,1398,1484,1316,1441,1524,1246,1691,1479,1542,1614,1408,1695,1298,1548,1521,1184,1650,1238,1427,1370,1216,1524,1240,1504,1229,850,1663,1293,1279,1239,1218,1621,913,1178,1419,1437,1427,1327,1264,1372,1281,1641,1220,1519,1567,1284,1648,1535,1656,1557,1561,1583,1408,1216,1242,1296,1437,1584,1594,1451,1331,1221,1561,1517,1381,1743,1564,1314,1241,1424,1464,1413,1711,1543,1466,1358,1256,1496,1383,1370,1629,1605,1581,1444,1201,1374,1376,1231,1469,1714,1252,1099,1308,1289,1727,1385,1273,1471,1669,1142,1698,1677,1887,1946,1895,1846,1928,1798,1757,1829,1906,1775,1834,1598,1258,1730,1695,1759,1726,1705,1713,1461,763,1311,1997,1986,1812,1546,1136,1308,1804,1564,1743,1735,1916,1709,1754,1703,1889,1703,1773,1889,1893,1864,1656,1694,1950,1654,1979,1821,1940,1973,1959,1932,1844,1773,1565,1891,1812,1896,1927,1814,1644,1724,1517,1687,1768,1663,1589,1690,1570,1419,1679,1785,2021,2011,1980,1902,1995,2030,2013,1943,2013,2032,2005,1953,2000,2046,1975,1983,1927,1953,1909,1995,1945,1970,1952,2043,2001,2007,2007,2014,2036,2003,1982,1836,2007,2048,2057,2038,1978,1931,1835,1599,1964,1856,1950,1884,1907,1913,1919,1890,1887,1895,1944,1861,1902,2002,1888,1911,1934,1877,1887,1296,1735,1947,1697,1508,1493,1243,1561,1741,1626,1620,1851,1550,1575,1594,1583,1514,1575,1644,1646,1569,1259,1305,1666,1627,1279,1372,1970,1848,1763,1765,1785,1699,1781,1868,1730,1672,1655,1737,1631,1616,1838,1742,1265,1498,1691,1467,1455,1235,1342,1765,1503,1236,1197,1420,1649,1264,1537,1977,2000,1972,1972,1974,1912,1823,1550,1922,1867,1882,1597,1809,2000,1882,1878,1890,1792,1785,1868,1674,1915,1528,1429,1710,1466,1405,1565,1626,1414,1736,1374,1733,1451,1712,1616,1856,1496,1731,1544,1749,1492,1445,1613,1502,1887,1263,1244,1345,1764,1831,1825,1716,1407,1453,1657,1768,1546,1444,1655,1627,1643,1665,1550,1562,1658,1597,1368,1576,1424,1699,1620,1451,1602,1543,1633,1655,1496,1240,1602,1511,1255,1309,1360,1215,1314,1364,1554,1215,1238,1427,1336,1309,1411,1372,1285,1598,1585,1573,1895,1482,1483,1863,1828,1859,1934,1544,1964,1765,1639,1920,1628,1934,1230,1867,1916,1480,1699,1726,1695,1668,1589,1464,1619,1465,1574,1506,1555,1590,1548,1515,1427,1607,1549,1512,1416,1593,1470,1811,1876,1899,1863,1842,1776,1466,1499,1586,1500,1892,1940,1931,1852,1901,1904,1896,1977,1029,511,590,478,734,618,563,556,660,1769,1970,1981,1950,1927,1955,1973,1947,1949,1627,1664,1605,1645,1780,1553,1729,1585,1685,1542,1546,1650,1492,1517,1483,1377,1505,1350,1617,1519,1258,1152,1424,1353,1574,1450,1418,1350,1580,1469,1597,1447,1391,1388,1433,1460,1422,1378,1428,1855,1772,1812,1877,1887,1897,1798,1739,1815,1673,1701,1785,1834,1824,1751,1707,1656,1087,799,817,849,1481,1705,1669,1626,1647,1654,1593,1599,1665,1772,1666,1683,1644,1673,1823,1802,1871,1393,1795,1497,1725,1607,1778,1504,1623,1934,1660,1845,1842,1861,1533,1840,1829,1765,1057,1062,970,1080,1069,1078,969,1080,1659,1556,1601,1519,1582,1568,1572,1506,1678,1428,1539,1616,1662,1259,1079,1039,994,1343,1416,1581,1768,1613,1448,1102,1429,1558,1139,1261,1516,1524,1447,1604,1611,1534,1562,1635,1518,1281,908,838,1032,528,982,722,1021,1394,1485,780,532,857,563,805,538,664,753,696,871,482,812,714,945,518,524,882,690,870,501,879,696,857,458,449,901,582,761,297,578,202,217,578,183,610,210,599,170,471,188,144,475,40,555,166,582,253,173,1530,1426,1434,1199,1204,1172,1408,967,1006,993,978,985,968,992,998,1517,1390,1411,1436,1505,1473,1398,1356,1585,1444,1495,1519,1591,1580,1505,1531,1494,1571,1399,1433,1371,1415,1452,1427,1400,1526,1389,1394,1398,1379,1124,944,948,966,1097,937,968,905,1094,901,952,920,952,1434,1375,1409,1416,1131,933,928,951,1450,1618,1579,1566,1515,1520,1548,1604,1617,1553,1332,1338,1325,1264,1305,1334,1331,1541,1551,1523,1318,1526,1307,1251,1258,1554,1650,1692,1567,1594,1515,1813,1710,1810,1608,1211,1172,1503,1427,1491,1216,1281,1397,1429,1640,1430,1563,1445,1440,1685,1700,1640,1670,1539,1665,1650,1634,1765,1618,1713,1653,1598,1601,1647,1641,1522,1714,1662,1595,1695,1476,1647,1614,1632,1667,1598,1698,1678,1663,1606,1665,1658,1556,1790,1639,1626,1629,1781,1708,1618,1634,1630,1825,1673,1677,1678,1764,1703,1660,1686,1654,1240,949,965,953,1360,1502,1548,1488,1592,1328,1316,1376,1291,1293,1160,1243,1257,1321,1193,940,940,1439,1209,1150,1106,1229,1120,927,985,963,1587,1521,1513,1553,1498,1512,1529,1540,1686,1400,1383,1374,1389,1363,1403,1372,1386,1708,1529,1563,1563,1560,1530,1533,1532,1626,1694,1612,1610,1651,1621,1601,1595,1660,1771,1456,1433,1409,1439,1468,1414,1383,1429,1889,1761,1709,1681,1753,1739,1699,1692,1901,1754,1705,1689,1701,1728,1668,1675,1689,1352,1022,1220,1018,1105,1061,1234,1157,1113,1072,930,806,635,718,656,1604,1648,1725,1700,1716,1688,1720,1694,1761,1829,1733,1696,1604,1713,1679,1737,1694,1882,1750,1774,1757,1752,1795,1768,1773,1737,1857,1718,1684,1618,1684,1651,1720,1675,1709,1450,1508,1368,1610,1010,1027,1020,1026,1844,1799,1814,1836,1666,1843,1789,1841,1811,1428,1169,1222,1539,1506,1007,1052,1304,1753,1606,1619,1586,1536,1633,1616,1576,1733,1533,1448,1424,1491,1407,1476,1425,1475,1436,1798,1359,1760,1319,1489,1441,1476,1419,1700,1638,1619,1606,1527,1588,1589,1586,1675,1516,1478,1430,1377,1527,1451,1447,1421,1788,1822,1834,1835,1681,1823,1799,1826,1783,1681,1640,1618,1690,1585,1656,1600,1698,1593,1463,1447,1490,1363,1507,1440,1430,1568,1841,1801,1852,1896,1683,1843,1804,1880,1672,1617,1639,1621,1543,1668,1640,1599,1665,1618,1452,1416,1479,1399,1491,1462,1435,1573,1835,1821,1838,1735,1871,1792,1863,1835,1307,1039,1706,667,682,1172,695,1034,791,679,1467,1078,645,722,1163,1257,986,1226,1392,1276,594,1174,1295,1163,1342,1260,1744,1167,989,958,1619,1580,1580,1744,1633,1724,1551,1767,1499,1489,1265,822,1236,1568,1513,1018,994,1017,1013,1337,1079,1039,1091,1346,1872,2033,2047,2011,2028,2017,2018,1977,2028,2040,2030,2021,1983,2009,2012,1998,1981,2029,2029,2027,2008,2026,2009,2011,1947,2025,2039,2031,1994,1996,2007,2002,1998,1975,2044,1925,1907,1913,1870,1898,1923,1860,1868,1885,1914,1871,1893,1825,1868,1827,1881,1941,1674,1670,1655,1672,1666,1658,1663,1626,1795,1653,1659,1646,1627,1670,1643,1609,1666,1569,1427,1461,1408,1424,1451,1401,1387,1568,1516,1492,1512,1502,1342,1536,1528,1620,1419,1518,1473,1690,1443,1460,1550,1628,1408,1348,1482,1467,1959,1678,1493,1681,1606,1587,1511,1594,1706,1547,1576,1633,1677,1734,1626,1586,1533,1664,1549,1549,1559,1557,1539,1586,1521,1425,1602,1461,1727,1544,1647,1566,1677,1667,1643,1779,1744,1488,1694,1938,1847,1710,1729,1889,1944,1935,1938,1978,1943,1938,1910,1928,1819,1851,1868,1980,1874,1892,1870,1831,1801,1778,1784,1779,2004,1955,1970,2002,1955,1915,1901,1889,2004,1939,1888,1892,1855,1808,1833,1823,1783,1999,1987,1991,1969,1946,1948,1926,1903,1967,1922,1821,1812,1741,1778,1766,1772,1764,1917,1843,1849,1765,1804,1822,1809,1805,1771,1702,1418,1442,1465,1408,1432,1406,1398,1596,1963,1934,1948,1971,1941,1908,1906,1916,1901,1862,1911,2000,1936,1939,1899,1898,1888,1927,1881,1920,1717,1497,1536,1616,1586,1615,1569,1500,1827,1793,1817,1802,1749,1763,1724,1716,1722,1584,1337,1302,1319,1400,1268,1357,1340,1557,1507,1467,1491,1558,1580,1489,1477,1465,1649,1704,1459,1668,1644,1585,1581,1488,1370,1339,1317,1235,1287,1164,1264,1713,1886,1866,1874,1904,1887,1877,1868,1869,1959,1897,1874,1869,1895,1877,1887,1874,1920,1432,1414,1379,1399,1467,1480,1471,1467,1763,1663,1705,1735,1692,1601,1590,1539,1709,1529,1538,1572,1612,1728,1720,1702,1635,1710,1457,1475,1463,1459,1373,1394,1418,1513,1546,1486,1501,1558,1200,1527,1519,1432,1673,1494,1534,1487,1319,1507,1501,1519,1512,1998,1958,1928,1708,1413,1421,1421,823,1409,1402,1411,1606,1192,1121,1128,1121,1055,1074,1139,1182,1499,1448,1431,1887,1906,1891,1909,1890,1909,1899,1927,1697,1594,1524,1502,1489,1394,865,975,790,912,786,978,684,905,886,1017,751,888,911,1000,977,906,1376,1228,1336,1289,863,361,581,470,449,260,490,626,1352,958,826,789,1108,1331,744,1332,811,184,460,264,330,1335,1376,1506,1661,1849,1728,1814,1828,1801,1769,1755,1786,1767,1642,1635,1573,1618,1589,1649,1598,1637,1401,1313,1320,1324,1594,1677,1664,1669,1648,1688,1641,1676,1683,1674,1673,1669,967,1554,1824,1866,1770,1793,1797,1883,1831,1773,1642,1453,1470,1447,1633,1860,1841,1863,1855,1860,1872,1848,1861,1850,1074,1753,1247,1104,1259,1065,1170,2048,2007,1978,1919,1958,1954,1899,1904,1889,1963,1949,1949,1903,1924,1888,1924,2009,1792,1665,1766,1805,1816,1797,1689,1609,1856,2054,2050,2052,2041,2038,2043,2043,2054,2057,2051,2042,2043,2054,2042,2039,2039,2055,1868,1916,1856,1850,1822,1858,1850,1869,1951,1898,1867,1847,1860,1828,1868,1837,1943,1316,1486,792,850,784,727,714,521,813,899,792,389,678,773,873,647,407,753,838,898,495,499,788,830,904,564,479,1238,1047,1120,517,644,1168,1093,1066,380,876,1138,1037,928,391,1070,1146,1097,719,1389,1288,1599,1304,1757,1411,993,1137,1136,1137,1157,1095,1100,1126,1190,1119,1173,1176,1089,1064,1035,1177,1430,1126,1114,1218,1065,1077,1118,1039,985,1013,913,1014,1039,846,857,790,852,1342,420,548,513,559,549,467,569,560,458,519,473,505,499,530,559,512,1435,1457,1510,1482,1550,1507,1510,1535,1516,1141,965,989,1463,1566,1382,1396,1329,1359,1474,1735,1649,1668,1654,1607,1619,1658,1640,1663,1695,1493,1452,1547,1468,1525,1505,1457,1586,1025,1165,1238,1340,1332,1312,1320,1127,1381,1430,1385,1446,1553,1522,1539,1561,1697,1354,1015,1130,1168,1137,1130,1084,1112,1093,1151,1116,1220,1191,1091,1039,1051,1259,1356,1115,1090,1216,1055,1049,1102,1018,1010,1031,881,1034,1020,846,823,803,866,1295,425,554,499,563,539,483,572,545,468,506,478,496,499,523,570,519,1735,1808,1791,1810,1797,1778,1731,1766,1399,1427,1381,1392,1635,1246,1221,1215,1527,1457,1334,1290,1529,1317,1011,1013,996,1460,1681,1459,1683,1679,1365,1161,1170,1205,1454,1343,1717,1660,1601,1691,1701,1585,1675,1632,1694,1175,1417,1426,1522,1948,1683,1971,1784,1699,1647,1712,1724,1622,1751,1758,1700,1584,1490,1534,1550,1568,1511,1583,1268,1739,1627,1613,1591,1569,1565,1575,1607,1783,1480,1747,1797,1493,1403,1737,1793,1584,1709,1081,1083,1118,1169,1150,1151,1066,1160,1108,1155,1121,1206,1161,1085,1072,1097,1310,1034,1266,1115,866,692,1094,1200,1078,973,942,1225,1129,953,549,1153,1216,1168,994,912,1243,1120,980,482,1152,1241,1203,940,827,1156,1111,1035,425,1223,1194,1152,959,729,1114,1173,1085,411,1138,1176,1142,911,1354,1156,1078,1163,1054,1047,1127,1019,997,1024,895,1040,1024,847,830,823,888,984,1180,1207,1201,345,991,1247,1089,932,1266,1136,1228,1161,1225,1181,1108,1237,1193,1329,1116,1134,1186,1193,1261,1120,1154,1236,1098,1339,1191,1012,1021,1139,1321,1106,1018,1009,1142,1352,1084,980,1058,1291,1217,1071,979,1096,1477,709,486,564,1245,1557,1739,1871,1880,1816,1614,1404,552,510,515,517,560,900,1328,1051,1273,1511,1187,1074,1444,1369,1069,1252,1496,1208,1078,1408,1798,1871,1734,1731,1898,1678,1808,1891,1701,1879,1803,1842,1705,1851,1749,1777,1890,1751,1727,1883,1735,1815,1793,1753,1928,1742,1832,1736,1898,1734,1864,1754,1738,1914,1668,1823,1892,1751,1744,1809,1832,1714,1858,1853,1728,1902,1721,1751,1897,1748,1753,1804,1760,1914,1824,1834,1675,1910,1742,1838,1782,1749,1882,1741,1831,1827,1798,1748,1824,1871,1702,1752,1883,1707,1910,1765,1759,1404,1189,1244,1190,1279,1159,1212,1132,1050,562,795,874,795,390,696,795,851,630,408,750,851,895,457,525,793,828,936,605,1472,980,1172,1149,1128,1156,1099,1080,1105,1158,1134,1177,1166,1134,1097,1066,1103,1528,1483,1609,1074,1097,1195,1084,1096,1107,1061,1013,1014,864,1021,1047,910,887,783,881,1436,1431,1485,1243,436,564,487,556,548,480,551,535,474,515,492,493,514,525,584,528,1644,1653,1684,1550,1712,1633,1665,1669,1708,1689,1767,1644,1632,1605,1673,1572,1007,487,989,630,427,313,845,1018,2039,2035,2009,2021,2015,2007,1977,1977,2021,2024,2015,2035,2009,2027,2021,1969,2022,1398,1344,1565,1528,1404,1298,1307,1121,1120,1125,1124,1127,1122,849,70,824,1990,2048,1862,1875,1913,1856,1835,1897,1904,1860,1961,1912,1937,1942,1864,1916,1920,1924,1875,1786,2002,1879,1889,1922,1897,1864,1761,1813,1762,1904,1901,1896,1877,1863,1879,1907,1917,1842,2010,1771,1884,1861,1916,1846,1668,1410,253,575,629,666,622,579,598,734,748,649,782,833,976,619,862,223,1113,329,398,1548,695,996,242,344,337,914,1582,1457,1592,1639,1596,1562,1440,1504,1615,1607,1634,1601,1473,1588,1562,1524,1732,1522,1696,1579,1497,1857,1851,1792,1764,1828,1868,1836,1840,1854,1734,1338,1278,1355,1364,1333,1320,1314,1441,1520,1474,1466,1465,1490,1442,1463,1428,1609,1459,1444,1430,1465,1505,1487,1433,1472,1613,1468,1454,1473,1493,1469,1464,1433,1594,1468,1412,1422,1438,1485,1449,1420,1410,1605,1369,1406,1415,1491,1458,1413,1430,1614,1427,1392,1366,1467,1477,1428,1413,1407,1606,1385,1364,1428,1460,1477,1407,1379,1589,1461,1390,1450,1489,1471,1472,1444,1422,1643,1451,1417,1463,1486,1484,1441,1455,1479,1491,1337,1312,1380,1370,1382,1309,1266,1563,1351,1320,1364,1391,1362,1348,1323,1285,1536,1314,1292,1337,1323,1334,1318,1256,1575,1453,1439,1455,1486,1492,1467,1443,1398,1639,1408,1398,1492,1495,1491,1447,1387,1626,1423,1365,1382,1462,1471,1417,1458,1394,1611,1423,1382,1432,1473,1462,1421,1374,1508,1524,1377,1395,1441,1501,1450,1422,1416,1608,1464,1401,1431,1438,1466,1439,1410,1384,1832,1764,1824,1724,1865,1593,1751,1797,1838,1834,1770,1629,1726,1789,1758,1739,1796,1847,1820,1881,1824,1892,1840,1902,1845,1886,1833,1825,1760,1820,1826,1789,1769,1813,1934,1793,1781,1726,1778,1726,1773,1722,1801,1856,1812,1780,1752,1781,1748,1742,1772,1958,1879,1823,1822,1814,1794,1845,1792,1800,1882,1726,1790,1737,1736,1725,1760,1772,1849,1797,1837,1823,1817,1823,1762,1770,1794,1808,1794,1752,1757,1626,1621,1749,1732,1615,1823,1789,1718,1779,1654,1650,1640,1698,1807,1880,1660,1597,1627,1660,1695,1683,1669,1664,1764,1686,1629,1648,1710,1691,1691,1678,1809,1810,1757,1775,1795,1834,1790,1844,1780,1841,1786,1674,1750,1796,1795,1768,1766,1867,1753,1822,1880,1869,1879,1939,1896,1806,1802,1673,1697,1724,1761,1745,1804,1726,1794,1724,1664,1820,1806,1796,1852,1815,1708,1717,1403,1519,1506,1514,1515,1520,1501,1563,2050,1960,1924,2004,1999,1936,1994,1932,1910,1965,1985,2003,1968,1945,2010,1988,2017,1593,461,38,40,40,319,40,38,40,713,1862,1784,1827,1849,1816,1820,1768,1849,1767,1462,1467,1441,1450,1438,1424,1430,1596,1836,1834,1801,1759,1780,1780,1766,1804,1186,802,40,40,39,294,36,40,40,39,1101,1118,1762,1726,1737,1758,1754,1713,1711,1747,1768,1818,1067,1241,1452,1185,880,1576,1424,1224,1079,1814,1608,1653,473,33,40,40,319,40,32,40,556,1421,1425,1202,1197,1692,1654,1618,1703,1689,1667,1676,1609,1565,40,38,40,40,1114,308,114,1245,1853,2014,1722,1656,1602,1652,1687,1661,1707,1734,1677,1733,1749,1753,1736,1715,1712,1692,1748,1055,1101,355,1094,1819,1753,1719,1739,1721,1804,1668,1746,1870,1848,1835,1882,1771,1928,1789,1857,1883,1839,1682,1649,1744,1655,1812,1791,1709,1882,1781,1974,1774,1956,1803,1942,1863,1881,1938,1245,1155,1135,1009,1222,1418,1348,1371,1347,1399,1145,1157,1095,1127,1144,1260,1643,662,854,927,1035,1405,1707,1111,775,664,822,1498,1618,1743,1557,828,1347,1650,1356,1232,957,775,949,730,500,883,1211,1381,1193,1255,1349,1358,1408,1298,1424,1922,1903,1876,1931,1838,1878,1900,1893,1851,1898,1936,1944,1827,1892,1885,1944,1199,935,925,980,1574,1962,1704,1922,1883,1136,1220,1191,1238,2010,2017,1997,2026,1941,1918,1894,1891,1948,2043,2038,2038,2042,1759,1818,1782,1834,1813,1795,1708,1809,1849,1953,1935,1929,1976,1587,1280,1314,1627,1296,1155,1259,1278,1326,1171,1277,1229,1603,1391,1212,1170,1716,1591,787,800,1562,1648,852,744,1300,1277,1089,780,965,1569,1605,1365,1402,1606,1844,1747,1796,1782,1833,1758,1857,1852,1811,1659,1669,1666,1749,1768,1808,1817,1732,1620,1429,1416,1428,1565,1444,1432,1439,1601,1527,1449,1506,1540,1568,1506,1465,1542,1914,1984,1948,1924,2016,1980,1978,1971,2003,1761,1776,1754,1760,1792,1571,1541,1571,1893,1915,1798,1906,1931,1774,1831,1766,1840,1949,1864,1854,1899,1917,1814,1782,1818,1901,1432,1493,1584,1600,1213,1233,1602,1290,1167,1263,1207,1719,1128,1248,1300,1874,1778,1788,1768,1802,1807,1804,1777,1805,1881,1831,1800,1809,1452,870,852,812,965,1145,1183,1144,1185,1293,1210,1188,1224,1324,1390,1408,1306,1604,1839,1869,1843,1882,1851,1799,1856,1824,1955,1901,1936,1913,1939,1915,1925,1959,1895,1833,1859,1826,1725,1864,1807,1714,1591,1647,1790,1853,1853,1890,1892,1796,1894,1876,1466,1462,1400,1525,1551,1595,1787,1566,1559,1638,1644,1717,1678,1758,1746,1790,1795,1891,2054,2053,1953,1967,1973,1988,1977,1990,1937,1963,1919,1913,1104,1332,1383,1043,1748,1791,1741,1759,1729,1506,1645,1522,1646,1770,1771,1775,1731,1871,1778,1813,1759,1782,1696,1713,1733,1633,1688,1819,1789,1636,1165,1029,1051,1155,1341,900,900,894,1291,945,1219,932,1306,518,690,448,621,968,723,813,689,767,1182,1201,1197,1007,1324,1380,1447,1424,1295,1456,1595,1643,1351,1425,1651,1492,1471,1726,1612,1657,1487,203,224,191,393,766,501,427,471,1766,2035,2048,2052,2050,2034,2040,2039,2017,1982,1935,1940,1935,1878,1911,1932,1916,1700,1425,1349,1508,1451,1128,1205,1132,1082,1441,1458,1394,1437,1754,1845,1824,1824,1886,1857,1790,1787,1901,1804,1735,1742,1772,1684,1774,1804,1691,1603,1395,1491,1436,1485,1425,1446,1569,1427,1856,1844,1861,1883,1578,1228,1220,1202,1640,1853,1790,1773,1859,1387,1429,1468,1421,1951,2037,2026,2022,2041,1999,2005,1971,1973,1525,1494,1481,1493,1746,1672,1654,1681,1969,1967,1984,1984,2005,1732,1708,1711,1821,2048,2046,2052,2053,1484,1293,1030,530,526,531,785,1206,1461,1468,1160,1242,1511,1401,1393,1312,1550,1497,1619,1451,1397,1687,1727,1812,1847,1616,1229,1335,1251,1363,940,1001,1022,1131,861,916,991,1023,1007,1999,1968,1947,1946,2034,2011,1972,2014,1964,1556,1486,1634,1714,1643,1665,1690,1628,1802,1499,1520,1609,1844,1599,1732,1674,1683,1521,1697,1568,1464,1443,1606,1544,1424,1875,1906,1860,1858,1887,1892,1865,1863,1901,1615,1517,1425,1666,1980,1978,1969,2001,1996,1815,1795,1799,1831,1870,1931,1929,1826,1369,1480,1435,1349,1493,1500,1528,1479,1520,1553,1756,1688,1594,1482,1603,1499,1481,1757,1723,1639,1737,1675,1736,1660,1769,1671,1669,1536,1693,1687,1651,1651,1528,1688,1585,1579,1552,1485,1511,1784,1367,1740,1664,1475,1509,1531,1527,1517,1515,1652,1615,1318,1319,1362,1512,1614,1841,1404,1548,1677,1460,1746,1747,1691,1646,1580,1300,1220,1239,1304,1363,1215,1340,1741,1357,1460,1283,1366,1121,1163,1264,1186,1312,1408,1410,1365,1435,1585,1214,1282,1577,1734,1851,1666,1362,1151,1005,906,894,1074,1171,1247,1291,1432,1640,1576,1638,1858,1469,1170,978,1018,970,692,877,1304,1132,1285,1250,1273,1293,1486,1683,1731,1876,1840,1784,1774,1723,1386,1263,1203,1323,1262,1328,1329,1264,1248,1282,1286,1297,1305,1744,1580,1706,1592,1518,1451,1668,1644,1650,1396,1211,1168,1302,1282,1242,1439,1468,1871,1447,1244,1388,1229,1270,1097,1254,1401,1619,1706,1660,1612,1429,1391,1456,1316,1827,1453,1425,1244,1221,1270,1152,1250,1388,1673,1706,1707,1667,1509,1637,1728,1511,1677,1544,972,257,1059,1572,1008,257,994,1562,992,257,1005,1555,1004,249,991,1543,1035,252,945,1538,1032,252,859,1256,1282,1291,1410,1332,1229,1333,1257,1424,1305,1322,1277,1446,1299,1290,1310,1317,1457,1385,1237,1297,1231,1254,1276,1239,1270,1542,1147,1147,1256,1216,1212,1197,1190,1195,1501,1264,1231,1311,1238,1260,1244,1261,1619,1725,1737,1757,1654,1662,1709,1790,1858,1186,1338,1296,1424,1286,1417,1253,1345,1354,1350,1362,1357,1336,1403,1374,1372,1840,1679,1612,1574,1667,1561,1517,1480,1261,1384,1394,1444,1584,1526,1444,1514,1694,1922,1673,1597,1560,1657,1550,1593,1503,1266,1423,1346,1417,1549,1487,1486,1510,1669,1911,1674,1624,1579,1670,1575,1583,1526,1284,1389,1351,1382,1531,1487,1513,1505,1653,1853,1730,1605,1630,1607,1575,1588,1478,1315,1354,1383,1379,1523,1500,1549,1465,1601,1814,1489,1202,1130,961,859,940,1083,946,1127,1191,1272,1231,997,964,1038,1065,1150,1599,1223,1183,1043,843,927,1072,1026,1114,1138,1273,1210,1058,904,1041,1032,1089,1986,1922,1893,1935,1966,1997,1926,1936,1877,1823,1779,1805,1906,1908,1952,1941,1956,1467,1978,1926,1965,1994,1977,1955,1974,1973,1897,1749,1762,1781,1777,1751,1834,1773,1730,1780,1763,1786,1752,1710,1725,2013,1946,1880,1884,1905,1968,1524,720,903,1991,1970,2014,1978,1933,1981,1986,1965,2000,1949,1945,1975,1980,1978,1949,1959,1954,1769,1566,1562,1582,1564,1580,1546,1573,1680,1788,1635,1706,1567,1673,1844,1808,1842,1812,1648,1536,1555,1464,1709,1647,1734,1572,1749,1627,1704,1687,1773,1836,1834,1840,1877,1829,1658,1700,1575,1822,1826,1825,1831,1844,1536,1609,1585,1540,1673,1671,1738,1652,1755,1718,1794,1725,1819,1550,1579,1692,1732,1652,1564,1853,1604,1784,1668,1814,1655,1698,1586,1671,1714,1523,1525,1745,1644,1631,1348,1638,1938,1772,1037,1898,1924,1601,1732,1558,2027,2004,2015,1749,1407,1251,1201,1300,1196,1557,1598,1593,1505,1423,1489,1489,1510,1560,1445,1209,982,901,992,1363,1095,989,1161,1057,1795,1820,1870,1879,1805,1844,1774,1792,1980,1735,1559,1644,1665,1708,1775,1757,1688,1852,1834,1885,1867,1777,1875,1767,1809,1955,1810,1608,1658,1660,1751,1778,1803,1681,1846,1789,1897,1794,1924,1775,1945,1786,1926,1980,1870,1996,1965,1899,1944,1996,1930,2021,1842,1682,1775,1828,1789,1822,1852,1836,1671,1604,1275,1324,1663,1568,1631,1129,1205,1086,1070,357,343,1294,1263,1296,1297,1325,1439,1297,1309,1275,1459,1357,1296,1364,1270,1434,1360,1285,1367,1307,1458,1594,1085,1498,1365,1905,1917,1973,2046,2033,2008,1993,1946,1983,1615,1576,1544,1495,1733,1560,1743,1721,1556,1751,1774,1595,1779,1553,1592,1634,1642,1656,1812,1913,1899,1806,1625,1740,1836,1932,1932,1856,1661,1771,1847,1922,1813,1752,1658,1871,1921,1901,1877,1601,1790,1916,1956,1935,1908,1698,1719,1909,1884,1869,1758,1268,977,1000,993,1419,1499,1599,1592,1647,1622,1692,1632,1614,1619,1818,1696,1743,1737,1617,1703,1622,1636,1674,1714,1932,1724,1702,1745,1708,1766,1731,1601,1731,1663,1753,1651,1606,1697,1628,1530,1984,1895,1866,1923,1951,1933,1868,1693,1760,1645,1667,1787,1941,1854,1902,1894,1902,1992,1928,1951,1940,1921,1813,1783,1785,1801,1904,1955,1882,1878,1926,1898,1856,1852,1626,1368,1265,1435,1687,1598,1651,1628,1924,1875,1847,1848,1852,1835,1826,1879,1875,1879,1891,1919,744,563,616,1042,1000,997,1341,1255,1286,1016,1799,1694,1631,1555,1763,1571,1649,1695,1561,1507,1626,1454,1297,1279,1588,1673,1663,1715,1720,1719,1686,1603,1699,1344,1373,1541,1455,1533,1449,1522,1428,1497,1381,1365,1314,1874,1806,1827,1873,1866,1852,1865,1804,1889,1818,1811,1844,1911,1906,1876,1856,1873,1995,2007,1962,1913,1904,1880,1940,1915,1932,1897,1937,1895,1870,1853,1883,1906,1876,1745,1478,1476,1622,1632,1608,1610,1636,1624,1630,1637,1600,1751,1647,1650,1658,1657,1626,1656,1645,1743,1649,1653,1632,1659,1622,1639,1645,1638,1919,1860,1883,1821,1861,1851,1842,1863,1850,1926,1867,1828,1837,1835,1847,1847,1846,1965,1872,1840,1857,1868,1845,1837,1880,1870,1547,1396,1427,1420,1306,1448,1392,1578,1367,1317,1493,1465,1431,1420,1878,1880,1836,1813,1802,1841,1838,1900,1952,1623,1743,1717,1682,1707,1629,1850,1563,1728,1601,1720,1756,1722,1729,1772,1709,1622,1642,1898,1828,1833,1854,1599,1845,1848,1854,1835,1869,1639,1752,1768,1767,1799,1729,1666,1763,1671,1691,1826,1589,1741,1751,1794,1739,1779,1704,1675,1697,1615,1679,1719,1332,1207,1286,1226,1244,1277,1150,1408,1665,1532,1489,1645,1673,1547,1565,1588,1532,1580,1535,1580,1881,1873,1919,1865,1888,1646,1584,1424,1657,1748,1797,1789,1705,1755,1475,1474,1703,1702,1777,1464,1365,1509,1861,1915,1473,1460,1608,1439,1545,1551,1447,1680,1507,1459,1530,1512,1485,1593,1444,1467,1561,1473,1602,1483,1497,1501,1649,1556,1450,1541,1353,1487,1424,1527,1902,1847,1844,1778,1816,1807,1762,1726,1699,1582,1797,1689,1764,1788,1607,1773,1784,1624,1885,1936,1856,1876,1903,1743,1923,1703,1752,1743,1615,1754,1741,1783,1602,1751,1758,1763,1681,1795,1643,1856,1688,1657,1672,1645,1713,1717,1831,1639,1690,1667,1798,1686,1731,1665,1711,1722,1776,1507,1424,1670,1756,1668,1734,1766,1595,1475,1588,1519,1505,1401,1520,1507,1544,1659,1790,1680,1756,1780,1662,1684,1743,1629,1613,1701,1629,1711,1595,1609,1632,1709,1642,1639,1599,1697,1633,1651,1649,1645,1705,1621,1652,1622,1679,1618,1640,1628,1716,1635,1638,1649,1668,1681,1642,1609,1598,1759,1629,1709,1709,1790,1633,1631,1631,1741,1618,1615,1705,1690,1796,1600,1613,1641,1712,1666,1886,1749,1662,1641,1789,1777,1626,1731,1826,1799,1699,1929,1860,1868,1950,2003,1933,1954,1958,1993,1708,1864,1944,1982,2004,2004,1996,1814,1944,1814,1812,1921,2008,2024,2006,2001,1975,1919,1959,1913,1872,1905,1917,1946,1948,1957,1794,1884,1905,1891,1857,1728,1605,1632,1956,1776,1820,1552,1614,1628,1622,1565,1800,1418,1415,1318,1367,1374,1513,1531,1309,1448,1544,1451,1414,1466,1481,1515,1489,1449,1680,1764,1797,1653,1733,1703,1757,1718,1676,1710,1689,1753,1643,1665,1658,1672,1659,1695,1673,1665,1643,1748,1697,1654,1639,1729,1624,1646,1651,1764,1916,1881,1903,1933,1891,1918,1875,1899,1911,1780,1781,1797,1942,2004,1978,2052,2047,2040,2048,2017,2030,2042,2043,2039,2040,2057,2048,2028,2042,2039,1823,1849,1875,1919,1919,1893,1865,1896,1709,1453,1497,1385,1685,1613,1635,1528,1587,1647,1568,1612,1531,1430,1548,1607,1564,1535,1689,1423,1387,1543,1426,1770,1868,1778,1729,1660,1654,1845,1847,1881,1833,1801,1774,1669,1819,1855,1778,1654,2003,1996,2009,1909,1905,1931,1587,1676,1744,1731,1719,1768,1806,1740,1649,1775,1693,1683,1676,1605,1540,1524,1502,1510,1547,1523,1531,1496,1554,1511,1501,1534,1490,1553,1527,1501,1486,1474,1332,1291,1297,1217,1955,1952,1915,1890,1938,1949,1943,1925,1835,1331,1284,1301,1323,1332,1322,1290,1451,1623,1462,1471,1615,1658,1464,1593,1560,1733,1691,1666,1694,1613,1694,1644,1660,1723,1603,1227,1261,1309,1275,1306,1284,1185,1485,1228,1068,1039,1108,1211,1173,1011,1399,1473,1276,1307,1225,1259,1242,1274,1370,1316,1533,1305,1296,1384,1333,1320,1284,1345,1761,1581,1628,1734,1703,1609,1508,1212,1935,1988,1442,1057,1254,1168,1347,1098,1608,1970,1913,1569,1757,1842,1806,1733,1581,1944,1091,443,598,497,547,537,520,464,887,466,1156,1315,1425,1339,1180,1112,420,872,618,1414,1467,1513,1517,1403,996,689,1394,1113,1423,1155,1481,1352,1191,1180,1829,1779,1710,1733,1820,211,129,1218,521,636,676,555,504,765,594,525,1302,913,959,1436,1419,1395,1408,1417,1570,1584,1704,1589,1623,1550,1601,1850,1551,1103,1135,1188,1251,1334,1277,1301,1259,1444,1535,1613,1624,1694,1570,1372,1385,1378,790,25,29,25,545,619,1290,631,1514,1632,1683,1609,1628,1151,1684,1494,1583,1528,1731,1914,1947,1908,1957,1901,1669,870,1163,1494,1300,945,960,1264,1312,1421,1430,1479,1547,1558,1643,1714,1745,1543,1597,1506,1565,1599,1511,1553,1732,2051,2048,2039,2009,1884,1954,2027,1945,1748,1937,1880,1952,2008,2040,1992,2040,1996,2028,1981,2033,2046,1996,1712,1872,1993,2038,2000,1917,1670,1563,1229,1222,1178,1482,1993,1893,1723,1759,1892,1875,1754,1786,1773,1862,1941,1969,1960,1970,1964,1960,2011,1848,1536,1547,1560,1509,1500,1581,1507,1519,1384,1393,1318,1324,1314,1319,1359,1587,2016,2007,1994,1967,2005,1947,1936,1945,2016,1816,1726,1657,1669,1713,1661,1216,218,516,1247,1296,1275,952,1055,935,1101,1188,1655,1701,1568,1719,1741,1670,1528,1594,1548,1626,1538,1608,1486,1473,1216,1356,1102,1174,1256,1319,1240,1376,1431,1542,1583,1600,1435,1449,1413,1229,957,1119,1589,1505,700,1210,1252,1387,1500,1461,1503,1461,1184,1304,1441,1524,1715,1728,1851,1818,1789,1785,1565,1641,1599,1644,1584,1610,1499,1572,1517,1450,1227,1411,1519,1564,1374,1384,1392,1432,1368,1215,525,662,434,805,1416,1538,1548,1535,1426,1478,1551,1461,1365,1326,1145,1182,1332,1403,1510,1334,1079,810,286,987,1742,1904,1796,1766,1561,1359,1029,1188,1539,1579,1571,1561,1564,1573,1542,1745,1749,1829,1712,1834,1763,1890,1749,1714,1397,1418,1352,1411,1427,1525,1662,1714,1537,1562,1502,1476,1538,1549,1472,1685,1911,1784,1549,1204,728,845,858,1218,1504,1594,1666,1727,1488,1607,1323,1348,1228,951,569,840,807,872,613,1027,1414,1156,503,552,485,1070,1763,1620,1091,1126,1006,1199,1394,1343,1085,1153,949,1080,1443,1471,1443,1430,1435,1577,1680,1773,1637,1812,1869,1812,1561,1362,1005,1181,1160,1210,967,1014,865,1159,990,1183,1230,1109,449,573,625,674,484,547,602,658,470,569,619,705,517,592,616,656,414,503,565,1145,1864,1632,1036,1139,1028,1134,1026,1086,1112,1389,1789,1627,1697,1712,1646,1665,1723,1520,1142,1364,1653,1673,1697,1765,1866,1335,265,393,269,361,182,291,229,357,48,253,25,190,141,266,280,295,227,727,1460,1505,1643,1469,1087,1127,1088,1148,1153,1360,1496,1534,1449,1676,1854,1876,1691,1720,1367,1625,1636,1636,1384,1430,1245,1273,1657,1558,1534,1234,1612,1461,1483,1473,1359,1263,1446,1461,1416,1518,1521,1513,1261,1145,1305,1349,1345,1225,1331,1073,1131,1034,1513,1502,1499,1482,1537,1533,1525,1516,992,776,570,532,776,698,757,674,632,557,538,700,691,676,725,708,748,683,758,816,767,668,613,476,1038,2027,1936,1761,1762,1690,1672,1696,1713,1712,1700,1695,1690,1903,1927,1820,1775,1692,1700,1767,1712,1751,1000,980,1330,1803,1465,1715,1838,1550,1441,1475,1484,1473,1469,1494,1471,1497,1227,592,526,580,648,582,435,586,621,570,593,580,609,568,516,300,409,561,376,250,498,612,327,345,421,390,439,1362,1932,1827,1670,1654,1681,1673,1672,1672,1662,1699,1683,1692,1685,1917,1839,1646,1695,1673,1756,1775,1666,1685,1012,698,711,1406,1893,1646,1748,1555,1769,1806,1558,1529,1476,1515,1481,1487,1502,1504,1504,1491,1506,1499,1488,1482,1501,1484,1508,1502,1492,1465,1423,620,302,550,592,669,520,577,669,571,293,616,467,429,445,488,275,379,630,649,640,628,720,546,680,628,525,676,443,545,301,574,480,471,315,475,483,437,461,501,432,444,488,554,557,595,538,335,562,363,591,451,385,377,555,409,534,516,225,332,560,1997,1989,2046,1995,2007,2043,1705,1671,1700,1686,1703,1713,1714,1678,1695,1670,1686,1694,1680,1687,1692,1699,1692,1707,1736,1711,1699,1688,1699,1712,1684,1689,1668,1965,2048,2048,1827,1585,1696,1742,1679,1729,1766,1649,1695,1729,1713,1660,1678,1650,1736,1761,1693,1656,1669,1702,1601,948,929,936,795,693,978,1082,1038,1007,1226,1141,1167,896,1118,886,1084,809,923,1253,876,1989,1965,1879,1759,1572,1458,1569,1480,1520,1535,1487,1456,1520,1501,1481,1412,496,520,386,439,439,403,503,357,639,667,538,555,587,513,567,246,233,138,392,500,673,471,505,496,424,443,496,375,206,287,1871,2039,1912,1704,1715,1667,1700,1706,1708,1684,1703,1681,1780,1711,1672,1715,2048,1828,1752,1650,1700,1770,1741,1678,1807,1816,1632,1555,1021,1160,1401,1508,1927,1671,1470,1565,1480,1503,1494,1480,1488,1494,1485,1447,1480,279,252,226,206,498,440,224,268,348,440,290,416,334,324,112,215,106,395,280,445,509,272,287,401,513,547,307,363,1591,1996,2034,1674,1682,1724,1663,1700,1689,1658,1658,1690,1710,1711,1723,1886,2048,1762,1866,1755,1803,1717,1665,1745,1809,1809,1875,1357,596,505,871,1075,815,1406,1706,1710,1741,1466,1484,1503,1498,1479,1467,740,415,397,342,336,467,284,411,460,458,306,466,387,275,233,439,469,1307,1963,1761,1686,1700,1664,1681,1696,1684,1716,1999,1790,1740,1650,1711,1773,1827,1816,881,1264,1394,1546,1627,1549,1487,1503,1368,570,510,445,466,544,503,546,535,355,403,313,1044,1919,1661,1657,1645,1677,1667,1978,1689,1613,1706,1403,1390,1622,1614,1553,1450,1517,1493,1497,1502,1487,1492,1484,1514,1492,1523,1487,1492,1499,1490,1340,523,470,514,315,281,480,467,360,273,509,480,496,435,392,418,393,447,391,481,304,166,189,428,262,313,199,194,339,324,309,349,263,366,239,366,418,391,411,334,420,338,480,325,401,309,278,349,388,285,458,501,440,763,1988,1935,1956,1981,1910,1651,1675,1678,1683,1684,1681,1663,1678,1720,1719,1676,1677,1666,1680,1668,1684,1670,1684,1669,1685,1670,1683,1672,1930,2048,2002,1618,1619,1634,1640,1641,1706,1809,1694,1731,1687,1687,1595,1624,1666,1701,1692,1650,929,626,681,603,630,573,1036,1343,1543,1134,1156,996,1442,1493,1500,1265,1507,1417,1452,1881,1814,1825,1791,1578,1554,1474,1467,1483,1498,1473,1513,1506,1485,1496,1503,1176,522,500,658,686,526,524,439,466,377,161,500,277,461,473,610,444,280,444,580,577,701,605,584,322,546,288,382,534,700,724,665,409,361,387,558,319,194,1389,1986,1978,1984,1702,1720,1664,1712,1692,1688,1683,1710,1702,1694,1712,1750,1690,1722,1703,1716,2038,2048,1787,1740,1742,1759,1794,1776,1752,1758,1729,1794,1765,1774,1766,1526,956,874,1225,1396,1612,1465,1560,1954,1769,1588,1569,1694,1538,1490,1484,1502,1495,1489,1496,1491,1481,1488,1496,1508,1493,1487,1464,1487,1467,1474,1482,1508,1496,1305,593,676,679,556,612,582,524,635,640,546,522,372,427,543,563,465,426,479,570,465,680,431,576,606,358,418,574,480,507,592,346,569,365,419,465,505,362,301,383,491,467,552,537,356,260,491,419,296,467,350,225,332,344,443,528,476,434,212,597,470,312,297,361,496,412,298,316,599,492,399,460,462,362,611,598,658,2055,2052,2050,2048,2048,2053,2011,1744,1722,1744,1745,1783,1769,1750,1697,1746,1727,1736,1739,1692,1733,1750,1749,1766,1744,1759,1755,1750,1765,1715,1721,1720,1773,1755,1783,1744,1731,1759,1768,1727,1752,1825,2048,2048,2048,2048,1943,1705,1798,1822,1860,1885,1770,1803,1792,1825,1779,1703,1781,1841,1803,1813,1826,1806,1823,1849,1849,1801,1761,1831,1852,1877,1836,1840,1835,1840,1870,1856,1800,1388,868,796,860,687,921,1375,1302,1427,1115,1214,1477,1219,932,831,872,1214,1315,1514,1272,1983,1946,1859,1756,1636,1450,1639,1568,1590,1528,1484,1500,1508,1522,1514,1503,1438,1473,1497,1500,1461,1493,1482,1527,1501,1486,1504,1506,1482,1492,864,524,664,599,502,456,340,582,566,598,674,573,598,678,493,514,458,587,591,464,392,456,488,565,598,364,531,444,378,596,433,221,237,396,439,415,330,408,209,477,379,495,290,284,464,373,523,273,347,153,471,410,331,168,218,193,279,276,547,494,472,569,417,482,534,2040,1990,1937,1979,1979,1931,1635,1680,1688,1680,1663,1714,1713,1694,1684,1679,1644,1656,1691,1717,1696,1674,1708,1709,1692,1678,1676,1689,1660,1684,1666,1672,1669,1710,2048,2048,1992,1599,1694,1708,1738,1778,1777,1671,1630,1688,1794,1729,1788,1708,1735,1728,1727,1705,1710,1688,1758,1405,843,696,586,523,752,730,990,1054,913,696,738,618,735,715,674,765,682,734,412,333,763,649,953,705,562,513,725,1565,614,1609,1666,1792,1788,1770,1666,1667,1505,1635,1620,1532,1482,1485,1480,1479,1478,1476,1487,1473,1460,1481,1494,1462,1480,1465,1472,1469,1482,1481,1459,1471,1492,1488,1483,1475,1489,1502,1467,1476,1448,1481,1440,1477,1466,1461,1471,1484,1449,1456,1474,1465,1489,1490,1487,1465,1456,1473,1488,1437,1454,1425,1411,1430,1477,1496,1473,1432,1454,1483,1458,1484,1462,1483,1487,1458,1488,1425,1471,1472,1472,1494,1476,1472,1439,1369,551,497,427,635,458,470,290,489,495,251,287,601,574,475,623,428,506,642,632,483,680,435,601,543,378,535,627,614,572,461,450,463,522,551,519,445,506,551,505,534,627,557,706,520,330,277,531,477,457,579,579,659,529,521,567,462,560,382,395,525,450,463,398,523,516,340,449,479,391,578,379,526,366,603,611,590,646,591,612,533,552,555,497,599,523,281,416,331,526,449,500,502,348,307,492,428,315,478,496,506,341,382,524,595,507,537,586,389,240,467,394,218,214,400,562,532,528,355,361,481,319,342,285,361,332,571,403,442,514,445,567,631,510,553,542,575,495,440,418,448,557,583,549,490,462,543,536,318,247,456,466,438,576,509,484,549,465,310,345,555,529,522,430,464,480,412,463,638,584,460,480,499,459,467,597,624,515,388,361,533,470,389,536,609,363,383,485,301,306,292,361,391,343,344,213,589,530,618,545,498,296,361,593,506,509,462,518,496,478,500,501,478,547,313,351,384,394,631,540,529,413,402,538,511,373,592,558,484,499,464,482,526,496,402,495,499,144,186,522,541,533,611,468,558,518,488,520,379,728,1910,1938,1948,1913,1925,1948,2000,1954,1982,2007,1940,2005,1945,1948,1999,1964,1932,2014,2052,1877,1669,1628,1638,1673,1686,1716,1714,1726,1694,1664,1699,1668,1705,1686,1693,1669,1686,1685,1677,1673,1675,1684,1693,1697,1683,1692,1666,1693,1675,1673,1687,1688,1676,1679,1686,1684,1696,1673,1693,1685,1666,1659,1644,1675,1705,1648,1695,1664,1675,1641,1663,1681,1675,1658,1674,1709,1695,1681,1689,1686,1672,1667,1687,1668,1648,1715,1725,1683,1677,1666,1659,1664,1691,1652,1661,1673,1647,1638,1662,1671,1688,1658,1675,1680,1654,1689,1722,1678,1708,1693,1688,1731,1671,1659,1703,1722,1690,1687,1675,1694,1674,1678,1683,1704,1692,1666,1895,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,1876,1627,1581,1704,1755,1780,1751,1724,1750,1729,1665,1659,1666,1695,1712,1657,1734,1752,1674,1721,1702,1751,1735,1713,1669,1592,1738,1717,1720,1642,1718,1606,1700,1660,1708,1679,1599,1733,1721,1735,1770,1775,1714,1653,1714,1703,1709,1756,1743,1687,1611,1716,1777,1685,1531,1452,1570,1620,1711,1754,1654,1787,1822,1708,1735,1702,1664,1795,1767,1686,1638,1746,1722,1775,1795,1717,1718,1028,867,741,918,879,699,801,748,587,725,554,611,602,709,221,343,677,665,777,655,894,623,656,771,778,787,794,707,792,866,670,849,878,780,772,808,887,683,767,694,725,782,687,751,756,671,833,638,844,836,593,613,304,422,654,565,844,588,386,716,579,840,832,935,750,607,456,509,614,631,829,568,537,645,500,615,514,615,769,797,616,746,885,528,478,951,484,528,490,916,761,896,644,695,726,623,754,622,747,755,561,660,704,557,806,578,481,555,439,807,788,885,938,593,736,787,754,281,857,817,658,635,694,768,675,630,654,780,716,576,718,472,640,709,803,432,369,333,290,311,275,392,423,282,300,306,275,313,438,481,509,725,484,345,544,727,535,750,688,546,713,788,565,682,688,948,563,411,368,492,460,311,478,353,199,543,328,309,322,246,197,601,592,469,662,736,698,387,218,204,251,254,149,182,226,575,1277,1894,1311,1915,1888,1947,1916,1911,1931,1942,1936,1915,1974,1911,1912,1863,1807,1905,1841,1877,1515,1528,1466,1488,1473,1493,1486,1476,1498,1493,1369,458,503,495,520,452,417,503,462,473,245,498,441,518,429,455,600,257,376,440,312,413,326,337,352,403,305,479,267,255,389,422,722,1984,1943,1972,1684,1682,1712,1710,1694,1720,1676,1719,1712,1692,1679,1677,1673,1675,1798,2048,1841,1789,1702,1819,1755,1712,1763,1808,1776,1734,1693,1725,1226,773,815,1094,1568,1336,1328,1169,1611,1647,1750,1530,1452,1527,1499,1468,1443,1501,1495,1503,1488,1483,363,302,460,463,383,711,548,599,532,601,523,496,399,346,267,437,451,366,272,404,313,459,565,346,301,517,260,225,1229,2001,2056,1711,1683,1709,1710,1734,1706,1713,1674,1709,1705,1688,1705,1684,1879,2048,1671,1621,1796,1848,1849,1730,1738,1790,1854,1762,1779,1774,957,733,865,1152,983,1379,1329,1577,1673,1711,1590,1594,1586,1496,1487,1490,1485,1483,1503,1488,1488,1469,1471,1463,1497,1468,1452,1482,1491,1487,1483,1480,1472,1449,1469,1467,1501,1471,1471,1489,1480,1481,1480,1485,1485,1505,1489,1466,1494,757,659,568,646,678,665,625,537,574,552,570,647,568,623,589,640,619,606,542,557,662,655,577,560,517,672,612,603,612,568,518,470,501,689,617,528,543,522,539,567,540,553,550,631,556,428,381,199,352,428,361,512,470,420,442,532,704,546,348,186,194,385,149,218,344,468,459,510,472,520,657,492,589,616,609,624,565,492,522,407,570,468,627,585,572,277,512,497,533,490,281,257,352,589,552,624,547,472,415,591,607,483,580,574,611,559,573,450,583,1592,2009,1984,1989,2050,1900,1971,1947,1980,1994,1714,1713,1707,1710,1706,1705,1692,1702,1719,1666,1717,1690,1684,1695,1713,1692,1695,1681,1697,1708,1639,1661,1663,1651,1679,1674,1674,1686,1708,1675,1680,1676,1694,1689,1700,1691,1657,1666,1672,1694,1677,1667,1655,1698,1663,1660,2010,2048,2048,2048,1998,1752,1771,1707,1664,1660,1714,1736,1789,1747,1744,1743,1668,1726,1719,1623,1741,1620,1704,1703,1745,1730,1701,1750,1749,1714,1602,1609,1708,1742,1712,1723,1662,1060,914,883,883,743,825,858,770,911,775,1031,994,947,823,993,892,1321,1043,1148,1185,1074,1121,1248,1109,1160,1218,1447,1377,1380,965,1071,1278,754,821,733,497,783,511,426,751,941,943,1138,1127,1131,884,579,512,847,1259,989,925,1104,1450,1856,1853,1858,1868,1916,1932,1902,1951,1845,1562,1519,1485,1481,1490,1486,1492,1467,1465,1487,1495,1489,948,410,241,463,537,333,395,519,475,366,168,163,240,311,267,375,488,341,509,416,315,391,371,460,432,251,363,330,332,438,242,457,345,365,917,1984,1978,2024,1651,1703,1645,1710,1681,1676,1701,1702,1711,1688,1698,1713,1706,1688,1712,2048,1941,1673,1699,1771,1745,1735,1781,1808,1776,1736,1753,1715,1667,631,818,1333,1487,724,767,1080,1622,1833,1801,1538,1620,1494,1484,1499,1494,1508,1494,648,487,565,625,483,418,581,488,335,428,445,452,169,331,378,490,409,294,422,400,370,304,747,1925,1949,1700,1703,1714,1686,1711,1664,1664,1682,1696,1713,2044,1745,1791,1802,1749,1732,1718,1757,1845,1519,771,785,1631,1746,1512,1373,1572,1664,1467,1475,1349,1488,1484,1479,1504,1461,1477,1472,1476,1510,1510,1481,1491,1487,1261,599,388,561,603,449,593,406,500,532,483,483,684,567,561,277,425,375,315,444,437,561,386,496,308,230,238,602,619,644,564,622,524,462,575,344,467,577,422,662,581,438,453,536,294,634,1977,1970,2015,2027,1686,1734,1706,1697,1694,1676,1673,1662,1710,1726,1670,1674,1666,1723,1719,1711,1728,1728,1724,1705,1988,2048,1909,1727,1683,1751,1753,1694,1679,1685,1638,1684,1729,1780,1753,1769,1763,1780,1219,905,744,1001,1608,1603,1348,1513,1414,1623,1432,1805,1830,1757,1627,1414,1446,1490,1481,1489,1465,1492,1482,1482,1473,1473,1483,1498,1476,1475,1440,492,517,596,512,504,400,549,577,564,361,418,481,353,392,242,429,470,554,551,409,528,554,396,439,213,232,204,467,444,350,224,75,210,349,266,231,342,536,392,458,426,238,299,348,242,1762,1958,1913,2028,1743,1700,1689,1669,1683,1682,1686,1719,1677,1653,1666,1674,1702,1684,1674,1675,1672,1668,1681,1679,1933,2048,1982,1705,1710,1657,1775,1723,1775,1729,1660,1693,1708,1607,1765,1634,1675,1803,1346,690,732,498,951,886,670,857,839,819,774,509,1212,1288,1778,1713,1605,1643,1665,1488,1472,1495,1498,1509,1494,1474,1451,1490,1488,1507,1482,1521,1480,1517,1496,1492,1430,1474,1503,1533,1521,651,568,602,338,394,509,497,580,548,423,427,461,554,478,116,563,583,532,453,435,426,322,184,161,496,576,522,513,587,499,493,442,363,386,521,526,530,463,305,315,514,349,358,192,143,204,581,490,458,513,393,321,449,426,386,366,294,169,344,408,414,388,459,487,377,334,461,426,450,400,1336,2013,2038,1984,2000,2051,1882,1714,1675,1639,1660,1690,1708,1641,1685,1716,1674,1710,1698,1683,1667,1694,1680,1683,1703,1706,1699,1690,1661,1667,1692,1707,1695,1678,1691,1707,1708,1721,2017,2048,2048,1990,1667,1725,1608,1654,1759,1518,1809,1733,1787,1758,1715,1703,1734,1701,1701,1767,1712,1693,1719,1752,1858,1622,1772,1792,1835,1054,637,540,628,539,715,712,723,660,397,218,499,733,697,384,514,427,268,496,432,342,237,342,1089,1233,492,1622,1689,1771,1790,1787,1737,1538,1422,1487,1492,1520,1506,1130,493,241,231,263,428,289,157,253,245,198,524,435,346,338,476,511,1586,1970,1663,1675,1699,1698,1677,1662,1677,1883,1866,1775,1745,1777,1698,1625,970,848,1151,1278,1661,1663,1628,1519,1513,1503,1495,1471,1496,1473,1500,1489,1475,1478,1491,1503,1488,1481,1487,1475,1506,730,627,618,558,546,539,520,532,552,518,528,562,423,623,593,485,634,400,471,606,584,524,498,597,610,308,499,581,511,375,324,503,461,543,546,394,413,432,552,455,444,641,347,603,590,607,666,431,342,637,522,419,513,592,383,619,564,591,604,597,1432,2048,2020,2042,2031,1838,1711,1711,1716,1702,1686,1706,1711,1710,1699,1678,1673,1693,1678,1713,1679,1727,1678,1715,1672,1666,1684,1661,1708,1712,1720,1809,2048,2048,1861,1751,1770,1736,1744,1644,1716,1682,1769,1822,1788,1841,1825,1667,1642,1752,1804,1797,1439,724,765,853,714,928,1670,1599,1277,1338,1730,1670,1533,1397,1075,1712,1834,1849,1738,1846,1588,1542,1542,1502,1485,1485,1476,1479,1491,1474,1473,1478,1502,1463,1494,1487,1485,1502,1520,1484,1495,1493,1507,1384,454,71,276,176,492,550,500,455,464,504,622,623,237,391,474,340,439,288,558,576,558,316,380,164,401,331,208,557,356,618,541,446,481,507,552,288,307,552,400,500,600,606,556,502,246,235,457,380,462,492,453,547,605,538,629,572,493,500,474,332,461,483,184,114,466,362,488,314,339,1582,2034,1995,2028,2044,1991,1664,1703,1688,1685,1648,1690,1670,1644,1662,1696,1688,1666,1691,1698,1714,1674,1710,1672,1683,1701,1690,1697,1696,1715,1709,1676,1688,1683,1656,1759,2048,2048,2048,1744,1736,1760,1731,1755,1708,1630,1728,1728,1671,1689,1800,1763,1805,1700,1749,1722,1652,1774,1722,1645,1577,1730,991,840,713,776,794,713,707,713,558,726,783,1005,1022,1048,822,731,879,988,1166,992,928,1015,1004,899,808,954,836,560,626,704,71,619,1192,1478,1748,1864,1813,1833,1777,1583,1516,1553,1498,1487,1489,1498,1497,1506,1483,1496,1516,951,388,403,212,325,562,550,273,502,404,490,487,379,274,496,375,284,536,408,326,302,536,405,355,394,360,200,381,193,279,353,522,358,235,264,240,1673,1983,1953,1832,1700,1675,1689,1693,1634,1693,1667,1684,1651,1667,1694,1694,1712,1684,1674,2048,2048,1718,1740,1744,1772,1647,1766,1698,1623,1675,1771,1730,1764,1653,1123,610,651,787,1197,1163,915,1154,1727,1893,1882,1637,1514,1529,1491,1500,1489,1491,1500,1510,1494,1487,1496,1503,1486,1507,1531,1494,1484,1485,1490,1499,1515,1476,1492,1499,1494,1472,1523,1513,1510,1469,1522,1496,1479,1462,585,540,551,453,515,531,538,647,594,589,607,484,411,445,555,465,438,555,579,621,599,560,513,591,475,442,509,568,589,530,313,521,430,552,504,439,508,495,496,554,424,506,546,418,301,293,370,425,396,294,288,531,385,407,485,431,649,544,467,309,524,602,627,583,550,563,370,537,438,552,500,412,457,528,367,485,526,489,401,372,430,528,484,361,474,468,366,403,212,555,552,355,422,406,397,339,610,321,452,442,260,197,323,416,370,325,364,341,214,409,290,1357,2000,2044,1991,1976,2013,2023,1992,2052,2054,1747,1684,1692,1683,1690,1689,1672,1698,1723,1699,1705,1737,1725,1737,1711,1723,1722,1755,1735,1732,1708,1691,1695,1692,1680,1689,1670,1676,1702,1682,1715,1712,1650,1663,1689,1689,1691,1714,1713,1737,1751,1748,1729,1665,1686,1715,1700,1665,1652,1682,1906,2048,2048,2048,2048,2002,1692,1723,1686,1686,1608,1665,1764,1716,1791,1736,1767,1765,1748,1682,1716,1697,1707,1714,1727,1635,1662,1616,1625,1759,1738,1640,1742,1604,1679,1640,1727,1769,1761,1690,1816,1616,1545,1598,1020,782,725,794,876,556,758,733,618,882,879,966,967,975,493,564,636,656,946,800,647,748,634,676,816,636,610,565,439,183,872,870,842,942,1012,1111,824,1036,929,795,700,519,1304,1409,1727,1868,1826,1868,1840,1789,1824,1901,1648,1669,1578,1491,1508,1484,1489,1501,1476,1486,1483,1481,1247,466,501,507,428,530,448,492,361,443,346,269,339,126,61,443,563,600,564,594,543,592,329,176,56,307,446,235,374,385,168,62,343,1968,2048,2050,1690,1677,1697,1694,1698,1729,1717,1716,1677,1657,1709,1708,1704,1738,2023,2048,1807,1843,1821,1793,1777,1720,1807,1765,1721,1813,1828,1858,917,765,713,888,942,571,1444,676,1343,1569,1638,1618,1502,1573,1534,1479,1523,1498,1508,1484,1491,1488,1490,1477,1496,1480,1497,1484,834,399,248,272,353,454,383,398,397,233,224,618,480,563,574,432,500,418,289,265,418,391,257,438,508,388,274,385,442,369,393,254,468,415,464,446,476,259,734,2020,2011,2031,1706,1656,1653,1698,1710,1690,1687,1697,1713,1706,1692,1687,1659,1650,1661,1650,1673,2048,2050,1604,1644,1803,1893,1890,1812,1815,1808,1838,1828,1696,1674,1604,950,680,600,726,586,300,353,461,371,371,412,481,517,1617,1153,477,710,1498,1523,1485,1498,1712,1670,1601,1633,1509,1529,1507,1530,1518,1536,1521,1528,1494,1513,1519,1513,1505,1513,1503,1519,1529,1507,1518,1494,1507,1520,1515,1505,1504,1539,1493,1511,1540,1533,1532,1540,1519,1520,1519,1517,1515,1512,1494,1500,1497,1493,1475,1483,1497,1490,1502,1481,539,545,452,485,524,494,557,429,530,674,661,646,722,665,685,728,683,643,654,753,748,724,590,524,596,338,623,543,613,689,720,626,643,661,668,598,651,589,620,628,479,599,653,560,601,571,579,499,517,592,590,608,622,521,560,638,591,519,546,533,625,510,391,519,572,520,546,629,564,609,599,578,638,487,616,543,655,589,528,511,559,529,472,551,501,603,599,476,421,581,604,558,682,571,745,758,680,650,683,657,678,711,601,564,631,672,634,629,556,530,516,611,586,616,621,616,541,627,588,605,585,551,556,539,282,594,560,543,536,551,520,485,541,483,518,606,624,505,397,372,591,513,521,557,393,428,484,540,570,528,508,365,1324,2057,2053,2042,2041,2041,2054,2039,2048,2057,2048,2018,2053,1980,1710,1729,1682,1702,1708,1729,1704,1674,1713,1695,1705,1696,1698,1697,1693,1704,1736,1726,1699,1723,1722,1730,1742,1732,1759,1758,1762,1755,1736,1710,1693,1719,1720,1693,1682,1671,1705,1732,1691,1683,1706,1708,1697,1714,1713,1748,1741,1762,1745,1747,1712,1721,1720,1740,1721,1735,1733,1761,1733,1731,1747,1760,1751,1744,1722,1760,2053,2048,2048,2048,2048,2048,2048,1981,1696,1635,1742,1739,1695,1673,1721,1771,1704,1777,1799,1769,1842,1784,1829,1820,1788,1802,1788,1761,1772,1799,1606,1573,1706,1726,1681,1636,1621,1803,1671,1731,1700,1693,1729,1844,1833,1805,1813,1820,1822,1676,1717,1589,1659,1785,1821,1800,1792,1847,1853,1815,1783,1074,948,911,935,956,920,746,786,891,873,1163,1305,1380,1237,1165,1241,1222,1281,1316,1299,1205,1092,1237,763,716,742,926,960,948,1070,1323,970,490,628,1598,1360,1785,1966,1693,1819,1876,1910,1808,1820,1820,1828,1890,1861,1529,1484,1552,1492,1503,1484,1500,1511,1491,1460,1461,150,119,284,122,111,278,260,426,261,323,324,294,143,363,265,155,168,174,521,399,288,210,543,397,380,445,282,158,1203,2025,2055,1742,1700,1691,1688,1726,1701,1673,1709,1717,1741,1704,1662,1681,1852,2048,1850,1806,1665,1631,1814,1709,1781,1822,1776,1885,1747,1712,719,823,1794,1419,1621,1604,1623,1529,1443,1154,1517,1490,477,422,493,550,553,480,442,1711,1733,1693,1683,1853,1800,1665,645,792,1432,1556,1487,1500,1489,1064,202,454,431,543,464,112,207,583,348,296,275,506,671,1941,1724,1668,1692,1682,1677,1647,1963,1606,1738,1783,1678,1267,855,1670,1776,1658,1476,1473,1495,1507,1486,1016,490,451,371,393,466,247,293,499,499,437,375,498,445,451,563,977,2022,1661,1663,1652,1698,1682,1678,1681,1965,1665,1703,1730,1763,1361,562,974,1264,902,1283,1623,1912,2054,2057,2041,2053,1861,1625,1590,1474,1122,800,800,753,833,907,1083,2043,2020,1987,1919,1853,507,997,1119,1471,1130,1454,1373,1336,1142,803,672,1100,1090,1215,1094,1045,776,963,844,1075,1034,1026,1070,1102,1125,829,741,723,834,1011,703,918,774,765,1270,2048,1351,1076,1086,942,947,995,1133,994,999,905,1216,1108,832,1059,992,990,1020,720,802,721,842,1135,1416,1508,1419,1600,1990,2048,2056,1870,1417,2028,2056,2048,2048,1980,1825,2056,1653,1944,2056,2048,2048,2048,2048,2048,2048,2048,2028,2033,2029,2027,2031,1998,1947,1802,1675,1970,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2055,2000,1937,1825,1776,1308,1797,1928,1893,1768,1939,2055,2052,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,1478,1104,2042,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2034,1559,2056,2048,2048,2053,1860,1552,1368,1203,990,696,491,2031,2054,2048,2048,2055,2048,2056,2048,2048,2056,1814,1433,819,2048,2050,2003,1942,1876,1689,1486,1144,877,555,248,404,1948,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,2052,1976,1810,1606,1474,1365,2053,2048,2048,2048,2054,2048,2048,2048,2048,2057,2057,2051,2019,1896,1694,1438,1009,1218,1811,1885,2023,2056,2054,2051,1917,1681,1261,1037,2048,2046,2048,1786,2041,2048,2057,1751,478,90,186,34,888,2048,2048,2048,2048,2048,2056,2052,2044,1902,2055,2048,2048,2048,2018,2057,2048,2048,2056,2048,2048,2052,2057,2048,1939,1536,1988,1988,1588,1628,2048,1995,1543,1275,1603,1888,2037,2054,2057,2056,2048,2027,1855,1400,318,1174,2048,2048,2057,2048,2055,2048,2056,2048,2048,2029,2006,1831,1864,1947,1541,2030,2048,2056,2048,2048,2057,2057,2048,1987,1981,2048,2048,2048,2048,2056,2048,2057,1939,1700,1991,1970,1828,1122,2055,2052,2018,1862,1745,2048,2048,2048,2048,2052,2048,2048,2048,2048,1775,1305,1697,1943,1975,2018,2037,2053,2029,2025,2051,2042,2055,2049,2022,2051,2002,1964,1978,2048,2038,2057,2040,2037,2015,2046,2049,2042,2042,2031,2025,1910,1806,1598,1395,1280,1225,1158,1182,1020,988,1106,1017,991,882,893,868,785,628,561,432,184,155,119,46,63,2026,2023,2051,2055,2032,1911,1739,1620,1176,938,2048,2048,2048,2048,1923,2048,2048,2048,1970,2048,2048,2048,2017,2053,2048,2048,2048,2052,2035,2048,2048,2042,2033,2056,2039,1965,1883,1833,1736,1755,1613,1936,2057,2056,2048,2051,2048,2054,1833,1975,2055,2048,2057,2056,2054,2054,2054,1929,2057,2050,1927,1515,1939,2057,2053,1532,1844,2048,2048,2048,2048,2048,2048,2056,2053,2013,1905,1726,1522,1377,1305,1157,1562,2057,2048,2057,2052,2040,1894,1683,1033,321,1006,1493,1719,1891,1959,1898,1931,1983,1954,1732,1549,1347,1095,591,414,1633,2049,2046,1405,875,1885,2048,2048,2048,2048,2048,2048,2048,2024,1979,2038,2028,1805,1497,979,1589,2055,1817,1423,1730,2048,2048,2049,2048,2048,2055,2048,2048,1937,1869,1684,2051,1485,1134,1367,2057,2048,2048,2048,2048,2048,2044,1851,1893,2057,2048,2048,2048,2048,2048,1948,1042,1493,1896,2030,2057,2048,2046,1312,1622,1817,2047,2048,2048,2057,2050,2012,1817,1290,979,775,497,362,247,107,1971,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1303,2048,2048,2048,2048,2048,2048,2048,2048,944,343,1338,1700,1970,2054,2048,2048,2048,2048,2048,2048,2048,2048,2042,1860,1628,1461,1344,1185,1082,1023,922,730,834,999,805,914,1674,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1848,1231,764,709,1620,2048,2048,2048,2048,1380,1859,2013,1742,1278,1029,569,750,1200,2048,1847,1082,634,1816,1939,2012,2049,2040,2048,2050,2035,1951,1616,1752,1857,1934,1973,2053,2056,2048,2048,2048,2056,2048,2048,1985,1781,1444,735,786,1741,2056,2048,2048,2048,2048,2048,2048,2048,2054,1978,1713,1423,1014,943,184,606,2048,2049,1966,1909,1788,1720,1799,2048,2009,1794,1614,1317,1710,1801,2039,2048,1930,2001,1065,2048,1665,1818,1951,2056,1655,1893,1348,1428,1113,1706,1967,2044,1996,2048,2014,1976,1912,2048,2053,2050,1643,941,1474,2048,2048,2048,2048,2049,1012,1304,2048,2048,2048,2048,1359,381,1977,2048,2038,2048,2056,2048,2048,1941,2056,2010,1509,2048,2020,1804,2057,2011,1676,2028,2023,1388,1316,2007,1396,868,2054,2048,2056,2040,1106,117,198,1520,2055,2048,2048,2057,2056,2056,2053,1946,2048,2048,1894,2057,2037,2021,2048,2012,2048,2052,2054,1942,2012,1706,1892,1627,1725,1613,1251,1650,1720,1512,1315,1355,2054,1909,1817,1987,2048,2048,2048,1984,1399,1154,659,1621,1821,1403,1916,1804,2048,2048,2048,2048,2048,2048,2048,2057,2056,2038,1956,1764,1596,1420,1147,872,1504,2048,2048,2048,2048,2048,1324,876,2031,2049,2048,1964,1911,2031,2055,2048,2048,2048,2048,2057,2038,1932,1750,1398,614,1227,2048,2048,2048,2048,1160,171,1232,2049,2048,2048,2048,2048,2048,2048,2048,1871,1371,253,641,1471,1989,2048,2048,2048,2048,2048,2048,2048,2055,2048,2057,2000,1861,1793,1799,1698,1511,1386,1251,1268,1214,1014,720,553,545,519,444,471,397,415,454,499,455,578,438,195,419,968,1165,1173,1221,1125,1037,906,902,670,450,272,108,216,1226,1638,1891,2050,2048,2057,2005,1956,1956,1848,2024,1761,2002,1983,1559,1683,2050,2045,2051,2003,2038,2045,2029,2043,2022,1944,2057,1987,1894,2022,2052,2048,2029,1680,1868,2004,1743,1911,2034,1670,1296,1691,2056,2054,1979,1916,1908,1872,1933,1876,2056,2048,2054,2037,1855,2048,2006,1556,1557,1565,1354,1021,439,577,377,535,684,736,1189,1638,1366,1435,1294,1275,1469,1709,1788,1804,1782,1933,2015,2017,2046,2057,2052,2048,2056,2057,2048,2048,2040,1983,1984,2000,1988,1871,1738,1721,1735,1699,1650,1526,1451,1438,1442,1436,1306,1242,1183,1206,1188,1110,1045,918,989,940,1526,1421,1515,1544,1390,1473,1535,1559,1428,1595,1438,1580,1616,1701,1535,1678,1491,1508,1643,1646,1799,1733,1783,1774,1823,1869,1921,1871,1980,1933,1968,2050,2052,2056,2048,2055,2048,2053,2034,1910,1748,1573,1043,1440,1780,2024,2048,2057,2053,1177,167,1237,2056,2048,2048,1430,2054,1042,2056,2048,1521,1611,2057,2048,2048,2048,1530,2048,1937,1538,1375,2048,2048,2048,2048,2048,2056,1958,2046,2048,2057,2048,2057,2048,2048,2048,2048,2048,2048,2048,2008,2054,2054,2048,2057,2048,1999,1950,2023,2056,2048,2053,2057,2055,2056,2057,2048,2048,2048,1683,1385,2048,2049,2048,2057,2057,2043,2056,1900,1925,1791,1559,1624,1431,1751,1817,1571,1451,1352,1141,893,295,1724,2048,2057,2057,2056,1956,1588,990,204,1070,2048,2048,1957,1657,1471,1759,1856,865,199,854,948,373,421,345,416,335,378,311,413,664,897,841,659,537,640,1128,841,594,1462,1426,1430,1266,1199,1385,643,616,811,371,274,473,429,324,981,951,359,343,404,614,794,517,521,653,372,379,647,761,822,756,536,1066,803,615,973,794,589,899,426,608,625,808,908,526,286,300,242,283,450,355,333,283,179,423,595,751,732,600,422,202,479,573,496,549,452,480,482,218,638,822,298,279,478,339,875,910,598,123,196,274,387,789,315,408,278,447,191,735,277,319,992,723,193,272,412,415,297,239,272,319,859,621,527,409,710,409,556,431,335,760,493,331,600,673,944,221,205,354,375,777,353,572,470,501,534,551,402,599,342,514,483,530,583,265,783,503,531,237,634,791,601,869,1208,1122,1114,1074,1057,1084,397,435,1162,1058,992,699,584,1410,270,441,333,147,348,228,210,139,250,284,417,133,133,133,306,458,638,316,696,537,422,883,555,542,146,326,634,278,350,272,733,408,613,465,300,316,273,285,569,186,292,205,256,335,167,482,282,316,188,286,181,208,520,308,456,369,703,1098,290,435,453,446,628,644,343,577,1104,809,819,622,509,356,362,356,339,453,445,256,246,269,150,203,761,793,854,791,583,623,522,300,486,294,457,768,183,388,344,567,805,868,767,497,405,557,267,366,204,302,239,558,390,613,407,655,493,592,756,559,66,333,459,578,821,437,424,387,350,364,349,326,1235,1285,1202,1351,1117,1370,1975,1814,516,122,158,452,567,158,194,123,481,190,386,588,464,1140,820,658,222,249,411,225,372,231,174,342,204,497,378,607,459,490,682,686,914,183,616,226,340,363,428,444,272,224,496,303,343,275,284,303,272,558,243,406,193,458,414,398,120,420,600,550,539,179,266,451,398,466,250,458,669,299,758,401,502,673,359,557,898,163,178,155,238,156,155,430,173,162,151,165,190,329,150,182,333,308,334,697,107,226,252,219,432,443,366,547,493,174,193,177,494,294,378,667,224,382,192,188,218,371,119,446,555,163,239,294,158,315,120,141,674,511,471,390,395,424,216,243,279,445,312,249,901,341,382,355,417,418,635,930,739,997,809,737,1597,1014,1125,1302,1384,1439,1481,1444,1543,1522,1550,1572,1481,1519,1491,1492,1603,1487,1576,1468,1523,1509,1461,1304,1322,1199,1260,1369,1353,1229,1199,1123,1090,1418,1326,1670,1909,1727,1760,1734,1665,1713,1739,1719,1714,1743,1690,1712,1764,1768,1771,1700,1695,1686,1675,1651,1675,1719,1693,1756,1691,1701,1642,1644,1668,1651,1586,1589,1638,1898,1555,1722,1690,1595,1650,1650,1724,1728,1811,1830,1810,1811,1851,1804,1712,1772,1672,1765,1827,1849,1758,1638,1760,1844,1707,1775,1768,1757,1716,1657,1615,1646,1636,1749,1657,1626,1576,1584,1666,1649,1642,1718,1690,1713,1652,1720,1681,1759,1710,1630,1758,1721,1698,1726,1658,1651,1685,1688,1612,1659,1602,1615,1567,1513,1509,1473,1698,1125,1088,852,690,873,1310,1405,1471,1304,1129,1157,1204,1133,1359,1368,1233,1320,1288,1277,1151,1005,859,726,867,952,726,640,840,1035,1088,1056,1200,1575,1560,1413,1465,1360,1616,1436,1467,1550,1531,1374,1295,1294,1241,736,239,207,249,223,223,897,1428,1438,1196,1580,1646,1418,1212,1484,1090,737,1363,1326,860,1461,1618,1414,1651,1562,1593,1423,1349,1316,1650,1315,1437,1573,1696,1430,1413,1361,1605,1399,1657,1194,1614,1702,1576,1738,1480,1500,1735,1206,1713,1259,1685,1439,1175,1540,1534,1685,1484,1373,1501,1436,1381,1573,1641,1613,1423,1257,1634,1435,1567,1600,1364,1383,1512,1681,1237,1610,1151,1463,1495,1612,1211,1433,1469,1648,1593,1669,1134,1564,1339,1559,1028,1589,1450,1699,1006,1511,1488,1479,1377,1467,1549,1608,1595,1623,1543,1358,1410,1702,1512,1756,1266,1808,1280,1842,1371,1599,1223,1803,1674,1524,1507,1456,1884,1397,1392,1781,1674,1203,1611,1720,1730,1836,1424,1683,1761,1734,1534,1713,1762,1269,1686,1307,1599,1561,1728,1329,1717,1688,1574,1579,1607,1571,1844,1471,1800,1515,1891,1885,1912,1943,2054,1996,2056,2030,2024,2010,2036,2028,2034,2023,2048,2056,2044,2053,1991,2011,1996,2027,2024,2040,2049,2056,2028,2040,2050,2014,2018,2025,2042,2044,2032,2049,2057,2028,2015,2021,1831,1991,2034,2042,2041,2038,2031,2023,2041,2014,1990,1995,1991,1982,2018,1997,2023,2042,2026,2043,2026,1989,1965,1990,2000,2005,1984,2042,2010,2025,2056,2028,1990,1963,2000,2021,1985,2005,2052,2052,2047,2030,2006,1976,1988,2037,2022,2033,2031,2048,2052,2048,2038,2030,2052,2029,2031,2002,2051,1989,2040,2003,1927,1974,1963,1980,1971,2020,1936,1951,1992,1993,1977,1936,2007,1988,1994,1921,1966,1962,1990,1976,1994,1930,1982,2010,1960,1944,2012,1968,1990,1950,1973,1996,1992,1964,1978,1969,1984,2031,1983,2008,1993,1977,2009,1957,2016,1918,1999,1965,1998,1997,1978,1975,1947,1982,1972,2009,1959,2009,2001,1990,2042,2019,1996,2001,1996,1973,1991,1969,1973,2009,2004,1946,1955,1992,2038,1962,1974,2039,2025,2011,1980,2044,2024,1949,2057,2003,2023,2026,2032,2000,2022,2033,2035,1997,1978,1981,2010,2018,1991,2005,1822,2001,2057,2046,2049,1967,1973,1911,1903,1747,1910,1883,1922,1754,1932,1826,1965,1991,1978,1835,1927,1945,1845,1870,1858,1984,1947,1958,1911,1937,1913,1929,1885,1835,2007,1964,1907,1969,1811,1976,1853,1890,1846,1890,1961,1988,1886,2031,1982,1901,1863,1841,1918,1859,1951,1964,1908,1940,2006,1959,1986,1760,1946,1733,1985,1940,1960,1930,1868,1967,1945,1958,1819,2017,1959,1983,1779,1708,1847,1743,1908,1864,1885,1818,1838,1860,1845,1967,1927,1912,1934,1916,1888,1946,1912,1901,1915,1898,1905,1947,1894,1991,1904,1953,1889,1876,1927,1842,1905,1792,1918,1922,1796,1950,1523,1776,1334,1738,1825,1740,1875,1968,1932,1972,1981,1992,1996,1925,1973,2010,1958,1955,1978,1774,1420,1432,1424,1439,1487,1525,1388,1612,1488,1448,1548,1676,1776,1619,1631,1899,2017,1980,1926,2017,1973,1815,1940,1933,2009,1983,1929,1983,1920,1956,1834,1861,1961,2012,2011,1897,2020,1904,1941,1901,1867,1990,1963,2025,1891,2029,1938,1912,1884,1849,2006,1921,2024,1892,1977,1851,1905,1901,1864,1967,1976,2032,1906,1958,1939,1863,1899,1877,1999,2020,1983,1936,2001,1919,1848,1926,1927,1965,1945,1916,1941,1939,1910,1960,1919,1890,1739,1754,1631,1664,1666,1682,1795,1705,1688,1663,1703,1724,1706,1726,1709,1652,1691,1681,1699,1731,1716,1721,1629,1647,1658,1709,1741,1751,1691,1613,1589,1665,1789,1709,1663,1636,1648,1657,1650,1761,1743,1724,1663,1637,1663,1761,1791,1765,1651,1597,1638,1763,1888,1856,1764,1736,1781,1794,1863,1843,1842,1790,1783,1838,1742,1790,1720,1712,1679,1719,1727,1637,1601,1762,1733,1718,1612,1844,1643,1622,1798,1706,1531,1707,1710,1730,1648,1763,1748,1769,1682,1786,1785,1816,1660,1751,1752,1726,1745,1749,1775,1967,1899,2002,2008,1991,1961,1912,1938,1923,2015,1973,1985,2013,1989,1990,2001,1967,1995,2003,1978,1964,1990,2000,1992,1985,1957,1996,1974,1946,1974,2015,1999,1989,1961,1982,1968,1986,1971,1979,1965,1962,1986,1963,1965,1972,1998,1964,1966,1955,1988,1947,1972,1954,1955,1975,1957,1975,1960,1975,1980,1963,1959,1963,1956,1972,1952,1973,1952,1966,1954,1965,1953,1965,1952,1973,1966,1885,1933,1899,1903,1911,1920,1890,1926,1899,1907,1924,1902,1901,1910,1909,1902,1938,1856,1916,1911,1842,1897,1925,1836,1887,1940,1840,1872,1951,1842,1852,1950,1838,1840,1959,1855,1814,1963,1837,1819,1971,1829,1826,1885,1797,1831,1900,1768,1844,1888,1756,1865,1897,1747,1879,1889,1766,1880,1863,1779,1889,1835,1808,1890,1805,1873,1915,1818,1878,1910,1804,1892,1861,1848,1912,1827,1849,1915,1804,1886,1865,1836,1914,1842,1848,1912,1850,1902,1884,1855,1903,1884,1855,1898,1884,1851,1893,1883,1849,1893,1886,1845,1894,1886,1845,1891,1889,1846,1891,1893,1842,1901,1911,1840,1910,1909,1837,1915,1909,1846,1920,1890,1848,1927,1875,1856,1920,1855,1860,1921,1864,1877,1907,1854,1859,1925,1919,1914,1925,1924,1925,1911,1920,1927,1913,1915,1919,1917,1907,1911,1902,1928,1926,1979,1973,1995,1985,1979,1989,1996,1985,1978,1978,2003,1909,1963,1893,1926,1885,1917,1894,1931,1840,1929,1904,1878,1923,1969,1966,1958,1971,1963,1945,1984,1922,1986,1932,1976,1940,1965,1940,1974,1887,1957,1826,1991,1831,1958,1868,1909,1890,1877,1924,1854,1972,1822,1987,1844,1939,1846,1874,1868,1812,1899,1806,1929,1809,1884,1861,1840,1881,1817,1921,1779,1920,1819,1875,1863,2050,2055,2030,2008,2022,1993,2027,2020,2013,2041,2023,2049,2035,2033,2024,2000,1829,1993,2001,2037,2043,2055,2026,2032,2027,2009,2006,2013,2038,2026,2032,2052,2034,2035,2026,2026,1965,1953,2005,2003,2016,2050,2039,2017,2020,1993,1992,1999,1972,1994,2029,2037,2015,2016,2013,2019,1978,2011,1996,1979,1986,2017,2043,2012,2020,2019,2007,1978,2016,1989,1968,1974,2012,2040,2013,2051,2050,2027,2005,2032,2013,2021,1959,2039,2045,2053,2042,2053,2046,2049,2017,2026,2022,2050,2048,2048,1999,2016,1968,2005,1972,2003,2004,1968,2011,1992,1961,2007,1980,1943,1944,1969,1988,2009,1980,2007,1996,1922,1941,1979,1927,1800,1910,2030,1996,1952,2012,1984,2011,1974,1985,2003,1963,1893,1895,1918,1983,1971,1914,1902,1972,2007,1943,1935,1843,1878,1978,1996,1907,1855,1928,1967,1950,1869,1875,1874,1846,1903,1955,1926,1941,1953,1847,1882,1862,1888,1981,1898,1973,1962,1885,1870,1887,1893,1958,2002,1933,1894,1815,1833,1888,1931,1975,1857,1876,1825,1661,1941,1926,1895,1921,1915,1844,1879,1933,1838,1890,1879,1887,1865,1861,1820,1854,1965,1965,1918,1941,1892,1841,1849,1879,1832,1843,1927,1960,1968,1913,1951,1821,1897,1957,1937,2037,2029,2007,1953,1947,2003,1971,2010,1955,1944,1935,2053,2010,1987,1813,1971,2001,2010,2017,1959,1990,2016,2008,2002,1974,1983,1999,2023,2014,1969,1873,1967,1981,1970,2022,1969,2013,2041,2008,1992,2010,1900,2014,2006,1982,1984,2020,2024,1997,1924,1748,1781,1887,2017,2011,1989,2025,2001,1973,1963,1960,1961,1957,1890,1962,1967,1978,1940,2003,1965,2025,1999,1993,1960,1952,1993,1975,1964,1856,1943,1941,1969,1882,1893,1943,1944,1873,1915,1994,1975,1986,1988,2006,2013,1993,2024,1899,1902,1989,1926,1711,1908,1954,1949,1956,1945,1944,2017,1984,2002,1983,1981,1955,2026,1982,1961,1996,1945,1929,1964,1947,1976,1933,1969,1973,1994,2010,2024,1992,1977,1969,2021,1964,1973,1968,1971,1947,1999,1946,1948,1989,1969,1996,1973,1931,1990,2019,1985,1952,1957,1928,2041,1949,1987,2004,1983,2013,1974,1966,2028,1985,1972,2020,1921,2043,1945,1942,1982,1958,1985,1987,1992,1948,1904,1959,1994,1936,1953,2004,1964,1918,1966,1984,2014,2004,1936,1955,1965,1936,1996,1911,1942,1958,1838,1879,1950,1969,1894,1898,1926,1911,1964,1951,1909,2003,1975,1945,1995,1973,1935,2029,1810,1989,1960,2000,2027,1986,2015,2051,2055,1862,2015,1963,2048,2022,2028,2054,2033,2028,1947,2007,1998,2013,2033,2024,2025,1994,2040,1983,2039,2003,2035,2045,2028,2055,2030,2045,1957,2016,1983,2024,2039,2024,2045,2050,2050,1978,2007,1968,2056,2041,2028,2040,2044,2036,1936,1951,1954,1916,1892,2005,1963,1983,2000,1995,2034,2025,1917,1996,1955,2027,1960,1999,1931,1866,1991,1973,1976,2011,1997,1935,1795,1967,1954,1635,1861,1794,1663,1614,1634,1551,1801,1362,1507,1541,1369,1597,1280,1490,1471,1158,1519,1168,1405,1309,1254,1392,1146,1415,1136,958,1586,1395,1148,1249,1333,1335,941,1278,1380,1124,1617,1114,1387,1164,1510,1246,1291,1430,1512,1147,1645,1464,1466,1589,1351,1599,1306,1502,1528,1165,1631,1164,1446,1165,1578,1218,1390,1384,1014,1209,1510,1442,1111,1269,1354,1327,958,1313,1434,1160,1561,1089,1365,1092,1658,1217,1457,1465,1387,1492,1462,1561,1444,1596,1490,1277,1444,1505,1396,1236,1576,1272,1358,1164,1615,1227,1432,1310,946,1346,1432,1403,1083,1324,1481,1108,999,1272,1385,1173,1489,1132,1378,1132,1612,1231,1504,1476,1347,1516,1426,1536,1471,1515,1584,1211,1498,1482,1187,1397,1473,1329,1380,1152,1572,1151,1410,1337,842,1560,1321,1297,1206,1216,1599,858,1224,1381,1185,1515,1030,1353,1287,1336,1365,1213,1426,1522,1244,1616,1486,1485,1555,1315,1651,1283,1517,1520,1276,1645,1151,1386,1256,1384,1401,1296,1443,1095,971,1600,1405,1163,1252,1355,1487,904,1266,1448,1187,1608,1045,1384,1084,1636,1245,1400,1454,1415,1355,1466,1583,1428,1567,1463,1385,1387,1477,1490,1224,1660,1166,1413,1163,1612,1164,1429,1286,927,1335,1396,1433,1079,1319,1507,1034,1049,1317,1278,1210,1527,1172,1378,1185,1606,1257,1477,1497,1386,1422,1450,1599,1539,1597,1572,1251,1514,1558,1325,1050,1684,1192,1345,1148,1558,1216,1299,1362,988,1201,1482,1436,1087,1307,1519,1009,1028,1372,1245,1087,1495,1135,1400,1144,1631,1122,1405,1530,1452,1427,1533,1593,1494,1555,1601,1312,1453,1553,1357,1100,1708,1192,1379,1140,1592,1186,1260,1401,1101,916,1598,1471,1158,1256,1357,1367,930,1296,1382,1136,1547,1078,1365,1289,1598,1242,1231,1518,1540,1378,1664,1437,1511,1574,1413,1702,1252,1509,1532,1207,1627,1245,1376,1335,1273,1496,1211,1476,1195,907,1662,1306,1249,1230,1211,1661,819,1252,1456,1258,1656,1050,1331,1213,1425,1466,1328,1434,1505,1251,1685,1498,1531,1595,1403,1695,1305,1560,1509,1182,1654,1243,1422,1354,1237,1517,1242,1498,1225,835,1672,1300,1256,1227,1199,1628,900,1188,1407,1437,1427,1312,1269,1358,1294,1643,1211,1532,1562,1294,1637,1550,1656,1566,1549,1613,1389,1227,1233,1293,1433,1594,1589,1448,1321,1223,1564,1524,1374,1751,1553,1317,1236,1440,1476,1427,1717,1530,1469,1347,1250,1488,1387,1373,1647,1590,1590,1436,1202,1391,1357,1224,1465,1714,1234,1122,1297,1290,1732,1385,1270,1458,1667,1170,1703,1675,1885,1945,1892,1860,1927,1784,1754,1832,1908,1766,1836,1592,1269,1738,1695,1776,1740,1704,1698,1451,733,1315,2004,1990,1812,1549,1149,1350,1802,1600,1749,1739,1910,1723,1735,1675,1891,1701,1779,1898,1893,1859,1663,1675,1943,1680,1981,1811,1937,1969,1951,1925,1867,1760,1563,1901,1817,1892,1919,1812,1645,1732,1549,1713,1756,1666,1594,1688,1543,1413,1696,1794,2016,2007,1983,1908,1994,2029,1998,1942,2018,2032,2005,1949,2004,2034,1974,1983,1922,1957,1921,2000,1947,1970,1960,2024,2004,2005,2008,2016,2031,2002,1996,1824,2005,2048,2057,2055,1984,1934,1848,1623,1964,1857,1951,1886,1911,1907,1913,1895,1896,1895,1965,1857,1903,1977,1895,1911,1926,1876,1894,1329,1746,1957,1702,1498,1485,1250,1587,1727,1609,1618,1846,1560,1584,1598,1591,1514,1551,1636,1650,1572,1259,1288,1667,1614,1260,1359,1970,1852,1759,1763,1771,1707,1791,1867,1721,1666,1668,1746,1623,1619,1850,1745,1298,1505,1703,1476,1457,1234,1356,1758,1492,1234,1190,1444,1629,1241,1544,1982,1997,1973,1974,1970,1910,1824,1529,1890,1880,1892,1594,1813,1985,1881,1881,1888,1785,1774,1825,1706,1908,1520,1423,1714,1462,1377,1562,1617,1416,1745,1383,1735,1428,1710,1600,1849,1501,1739,1529,1771,1473,1460,1607,1499,1885,1270,1256,1323,1786,1835,1810,1713,1395,1468,1667,1759,1559,1442,1653,1632,1634,1668,1552,1555,1664,1611,1348,1579,1430,1699,1619,1409,1615,1531,1628,1657,1496,1230,1592,1533,1232,1297,1364,1230,1322,1342,1544,1210,1239,1442,1352,1350,1386,1372,1315,1600,1594,1565,1893,1462,1479,1857,1832,1852,1914,1554,1973,1776,1617,1939,1643,1958,1232,1851,1910,1497,1713,1716,1692,1654,1584,1466,1619,1476,1566,1489,1564,1587,1549,1524,1436,1604,1545,1504,1417,1589,1481,1807,1874,1917,1860,1838,1750,1463,1498,1607,1506,1908,1942,1925,1843,1904,1874,1908,1968,1001,553,592,486,737,650,553,588,626,1808,1971,1993,1957,1931,1968,1976,1959,1942,1648,1661,1608,1643,1773,1563,1726,1581,1693,1543,1549,1647,1499,1509,1490,1378,1491,1366,1602,1519,1235,1141,1430,1345,1577,1453,1408,1357,1572,1442,1607,1443,1402,1389,1391,1445,1409,1366,1457,1844,1769,1822,1882,1880,1892,1797,1753,1808,1662,1712,1780,1831,1819,1748,1710,1664,1083,786,827,876,1500,1715,1662,1619,1661,1639,1593,1593,1657,1767,1665,1690,1653,1674,1838,1802,1874,1366,1783,1499,1729,1583,1785,1504,1660,1928,1686,1835,1836,1851,1561,1840,1847,1739,1064,1066,956,1101,1050,1082,973,1064,1685,1550,1606,1534,1574,1581,1550,1520,1666,1434,1551,1589,1654,1262,1104,1030,1050,1320,1428,1603,1764,1602,1433,1103,1436,1546,1126,1283,1513,1526,1460,1598,1615,1530,1565,1644,1515,1325,882,842,1040,584,990,717,1050,1389,1469,757,575,876,561,820,537,699,724,717,863,473,820,701,935,511,525,870,692,859,499,858,704,879,427,444,902,579,750,298,590,260,212,576,164,597,193,612,187,479,147,166,473,39,561,153,578,227,226,1539,1430,1437,1203,1228,1171,1374,980,1009,999,1003,973,977,999,990,1532,1376,1392,1446,1500,1476,1378,1349,1574,1450,1500,1521,1576,1598,1486,1539,1509,1576,1411,1431,1400,1419,1433,1394,1414,1498,1384,1404,1366,1375,1111,941,968,942,1109,925,935,930,1079,918,944,908,1000,1408,1399,1394,1402,1144,909,951,935,1453,1613,1577,1565,1521,1526,1533,1621,1599,1566,1352,1336,1320,1220,1321,1330,1345,1547,1545,1522,1325,1522,1324,1261,1242,1564,1643,1708,1561,1611,1504,1783,1705,1810,1595,1207,1174,1501,1409,1486,1214,1308,1382,1438,1652,1420,1578,1434,1459,1652,1703,1640,1671,1571,1668,1633,1643,1752,1633,1711,1655,1615,1594,1655,1634,1507,1743,1672,1623,1696,1475,1644,1615,1646,1655,1610,1700,1685,1663,1604,1662,1650,1554,1812,1639,1613,1621,1794,1702,1613,1635,1635,1849,1677,1674,1674,1770,1697,1658,1691,1652,1211,969,957,952,1382,1493,1551,1480,1596,1320,1322,1379,1273,1317,1175,1244,1267,1323,1174,954,951,1448,1220,1147,1089,1229,1136,898,978,988,1585,1507,1526,1555,1482,1512,1520,1543,1684,1412,1391,1378,1382,1381,1376,1342,1418,1718,1538,1538,1567,1564,1532,1545,1510,1640,1666,1612,1624,1646,1634,1613,1606,1662,1766,1463,1435,1409,1429,1478,1437,1403,1431,1883,1754,1726,1684,1745,1745,1690,1701,1902,1753,1708,1694,1695,1729,1670,1683,1691,1324,998,1235,1045,1105,1056,1237,1149,1117,1068,948,775,625,720,645,1620,1641,1734,1688,1724,1683,1726,1693,1769,1804,1733,1685,1614,1719,1679,1740,1693,1889,1744,1771,1754,1757,1791,1773,1775,1749,1848,1715,1679,1622,1684,1653,1720,1660,1717,1464,1514,1383,1623,1009,1020,1017,1039,1848,1826,1819,1824,1669,1844,1789,1850,1809,1416,1173,1214,1568,1496,998,1045,1312,1752,1597,1612,1583,1536,1643,1615,1588,1750,1522,1447,1415,1477,1400,1472,1426,1461,1423,1793,1361,1753,1296,1493,1435,1498,1410,1686,1647,1610,1619,1526,1588,1591,1573,1667,1524,1473,1443,1365,1524,1446,1435,1403,1794,1815,1830,1850,1674,1827,1801,1820,1750,1703,1634,1628,1693,1598,1660,1600,1701,1587,1501,1456,1486,1389,1515,1467,1445,1574,1837,1801,1862,1900,1687,1834,1803,1879,1668,1622,1638,1618,1551,1657,1639,1597,1675,1607,1444,1442,1486,1405,1489,1442,1458,1567,1831,1813,1849,1705,1869,1804,1852,1820,1310,1051,1680,676,680,1184,705,1064,768,686,1497,1066,646,713,1161,1269,998,1249,1382,1296,604,1160,1274,1178,1317,1283,1746,1213,960,955,1642,1587,1572,1735,1653,1723,1562,1768,1491,1481,1268,862,1196,1576,1497,1013,994,1015,1021,1320,1058,1044,1089,1335,1886,2030,2026,2009,2029,2017,2015,1979,2028,2042,2024,2018,1985,2015,2002,1994,1977,2026,2022,2030,2010,2027,2016,2015,1945,2026,2039,2040,1986,2002,2009,2008,1999,1983,2049,1925,1912,1908,1873,1903,1917,1838,1871,1880,1916,1874,1885,1825,1871,1827,1890,1945,1677,1665,1661,1675,1673,1650,1655,1629,1789,1642,1670,1655,1631,1665,1648,1611,1669,1546,1432,1453,1421,1430,1435,1405,1383,1567,1500,1503,1519,1498,1336,1534,1525,1631,1427,1547,1480,1686,1428,1465,1529,1629,1378,1373,1481,1478,1965,1669,1499,1664,1598,1576,1513,1585,1709,1541,1575,1622,1676,1736,1627,1600,1539,1670,1550,1569,1562,1553,1519,1579,1535,1427,1590,1464,1738,1547,1646,1586,1671,1649,1643,1786,1711,1484,1716,1930,1849,1706,1734,1891,1944,1931,1942,1987,1951,1935,1910,1934,1834,1837,1874,1982,1856,1860,1870,1828,1796,1776,1792,1784,2013,1954,1965,1964,1925,1901,1902,1882,1984,1939,1883,1891,1851,1820,1840,1823,1782,2002,1991,1989,1968,1944,1942,1923,1902,1970,1937,1815,1814,1735,1774,1763,1771,1762,1911,1841,1856,1768,1801,1825,1814,1804,1771,1695,1435,1476,1439,1419,1433,1415,1427,1603,1959,1931,1967,1978,1941,1903,1908,1917,1903,1859,1916,1998,1936,1958,1888,1902,1889,1932,1881,1933,1706,1488,1527,1603,1579,1605,1577,1505,1841,1801,1809,1796,1754,1748,1732,1734,1724,1572,1343,1266,1296,1415,1260,1362,1363,1567,1485,1490,1493,1572,1579,1502,1472,1450,1656,1688,1481,1682,1635,1573,1561,1485,1359,1340,1317,1253,1302,1172,1262,1701,1888,1854,1878,1915,1888,1876,1866,1874,1990,1907,1879,1859,1891,1879,1887,1877,1902,1450,1420,1375,1405,1474,1482,1463,1469,1783,1671,1701,1743,1678,1606,1589,1551,1677,1525,1549,1579,1624,1727,1714,1698,1634,1717,1461,1464,1478,1452,1359,1388,1402,1513,1558,1497,1483,1533,1217,1525,1505,1434,1670,1502,1537,1497,1302,1509,1486,1509,1535,1979,1951,1921,1693,1401,1411,1429,807,1422,1393,1405,1589,1185,1153,1122,1132,1086,1063,1165,1183,1494,1419,1433,1901,1901,1889,1905,1899,1906,1895,1943,1689,1610,1525,1530,1450,1393,881,962,785,874,786,975,704,902,898,1044,741,915,890,1028,952,921,1390,1248,1356,1285,869,358,591,491,409,277,493,669,1354,920,852,818,1101,1317,746,1353,788,176,442,265,324,1357,1389,1490,1666,1850,1729,1819,1824,1801,1764,1757,1791,1756,1643,1643,1564,1613,1587,1661,1580,1643,1391,1299,1325,1330,1593,1679,1660,1670,1665,1671,1650,1677,1690,1681,1665,1665,965,1564,1822,1864,1777,1796,1798,1892,1818,1768,1641,1450,1484,1443,1638,1857,1846,1856,1851,1864,1884,1845,1873,1850,1069,1753,1220,1084,1280,1098,1178,2050,2007,1976,1924,1973,1956,1897,1900,1896,1962,1945,1949,1913,1924,1889,1925,2010,1782,1658,1778,1799,1819,1802,1672,1613,1863,2056,2052,2047,2040,2037,2056,2042,2051,2048,2053,2045,2046,2052,2049,2047,2050,2053,1874,1912,1855,1852,1817,1857,1861,1865,1955,1899,1872,1843,1864,1836,1859,1845,1942,1304,1460,778,863,739,701,745,560,802,870,796,390,700,799,857,629,405,749,844,898,461,519,796,837,935,597,445,1243,1050,1117,503,659,1184,1084,1058,385,899,1113,1040,902,386,1064,1149,1097,675,1397,1299,1579,1315,1760,1395,967,1160,1114,1123,1152,1103,1086,1124,1170,1125,1163,1197,1070,1045,1023,1205,1409,1110,1096,1189,1030,1044,1115,1079,1006,998,909,1012,1041,842,846,809,844,1342,410,560,515,559,557,455,564,564,464,517,475,501,500,532,558,507,1445,1475,1485,1487,1564,1492,1521,1526,1491,1106,974,994,1472,1556,1368,1395,1347,1377,1470,1735,1642,1664,1657,1615,1619,1672,1649,1657,1669,1492,1459,1522,1466,1529,1501,1451,1567,1021,1147,1249,1348,1314,1317,1317,1118,1397,1413,1391,1441,1558,1519,1532,1549,1706,1330,985,1141,1162,1134,1129,1109,1097,1094,1160,1096,1213,1193,1080,1075,1063,1251,1331,1124,1103,1199,1047,1068,1109,1025,1031,1002,920,1039,1025,858,835,841,902,1267,429,553,503,564,540,476,556,543,475,513,494,493,512,532,581,508,1757,1802,1797,1785,1801,1775,1735,1762,1387,1419,1389,1406,1633,1222,1213,1228,1537,1438,1324,1303,1513,1309,1028,1019,970,1479,1695,1449,1674,1670,1363,1175,1167,1200,1458,1370,1713,1660,1597,1693,1703,1595,1669,1640,1684,1153,1430,1436,1535,1921,1706,1968,1776,1697,1653,1716,1732,1612,1746,1770,1692,1584,1493,1532,1541,1562,1515,1583,1243,1741,1630,1601,1584,1567,1564,1588,1619,1783,1455,1750,1791,1511,1420,1725,1791,1557,1710,1066,1111,1118,1146,1164,1142,1069,1176,1129,1116,1108,1197,1164,1101,1034,1070,1308,1038,1243,1133,829,704,1137,1167,1089,987,952,1253,1108,944,577,1136,1209,1149,992,914,1266,1152,951,495,1179,1245,1227,947,860,1159,1124,1019,408,1219,1196,1154,977,717,1132,1165,1102,414,1146,1177,1151,901,1332,1146,1084,1200,1046,1041,1080,1026,1027,1018,918,1038,1059,854,828,821,908,965,1156,1245,1207,346,999,1240,1130,883,1246,1117,1213,1199,1234,1162,1104,1260,1174,1300,1109,1134,1181,1199,1270,1100,1146,1243,1128,1309,1194,991,1024,1141,1349,1106,1008,988,1163,1332,1059,978,1055,1286,1217,1076,967,1124,1489,669,509,559,1255,1556,1754,1869,1869,1831,1603,1378,528,524,516,529,553,933,1297,1051,1278,1515,1187,1094,1458,1355,1047,1253,1502,1199,1073,1424,1737,1873,1737,1729,1894,1671,1798,1885,1708,1852,1803,1830,1710,1852,1751,1763,1889,1751,1727,1893,1733,1805,1800,1754,1968,1780,1828,1698,1892,1736,1859,1761,1736,1887,1663,1821,1887,1775,1793,1813,1826,1713,1857,1879,1720,1908,1724,1761,2031,1745,1743,1806,1795,1778,1820,1824,1676,1913,1716,1846,1779,1761,1879,1778,1832,1795,1797,1748,1817,1890,1707,1736,1886,1706,1888,1770,1753,1379,1213,1233,1218,1277,1158,1226,1157,1030,558,784,881,779,403,732,793,880,612,413,771,862,909,459,534,772,848,918,642,1451,992,1175,1119,1121,1145,1101,1090,1104,1124,1129,1193,1185,1088,1075,1019,1114,1492,1501,1583,1112,1099,1181,1109,1067,1077,1074,1003,1019,872,995,1018,897,860,776,893,1460,1434,1496,1207,445,568,508,548,548,476,536,530,485,526,499,482,519,524,576,536,1672,1649,1685,1565,1717,1629,1658,1652,1702,1695,1781,1640,1624,1598,1684,1589,977,489,1003,595,427,303,847,1044,2037,2032,2026,2011,2023,1991,1987,1973,2023,2024,2023,2027,2009,2024,2020,1965,2024,1392,1361,1590,1532,1384,1342,1291,1121,1121,1125,1121,1122,1122,826,70,842,1988,2048,1858,1865,1924,1853,1847,1891,1921,1858,1939,1917,1925,1948,1861,1894,1922,1921,1869,1791,2002,1871,1895,1927,1902,1849,1765,1813,1758,1916,1899,1894,1874,1866,1899,1892,1920,1837,2006,1758,1876,1857,1914,1843,1656,1830,1436,1504,1619,1612,1584,1536,1452,1565,1591,1630,1648,1537,1518,1588,1573,1537,1883,1635,1585,1501,1635,1958,1819,1768,1761,1855,1859,1843,1846,1908,1460,1293,1287,1342,1320,1363,1325,1244,1615,1459,1465,1460,1468,1480,1469,1469,1429,1638,1459,1435,1458,1494,1470,1448,1423,1598,1461,1433,1452,1460,1505,1471,1439,1431,1638,1429,1419,1401,1522,1436,1430,1416,1614,1413,1428,1384,1432,1493,1462,1421,1389,1588,1406,1359,1445,1493,1436,1417,1383,1541,1489,1362,1400,1466,1456,1418,1426,1398,1628,1419,1396,1453,1476,1469,1452,1416,1460,1636,1473,1453,1479,1502,1516,1476,1396,1613,1338,1341,1338,1374,1343,1336,1316,1277,1554,1326,1322,1369,1358,1340,1312,1261,1549,1324,1254,1294,1371,1324,1346,1351,1253,1642,1442,1432,1476,1483,1502,1461,1423,1588,1471,1393,1442,1496,1478,1462,1439,1422,1602,1388,1376,1453,1442,1496,1407,1416,1482,1562,1364,1379,1482,1477,1454,1378,1424,1599,1419,1382,1404,1435,1478,1423,1417,1411,1645,1423,1413,1415,1495,1457,1428,1397,1667,1653,1832,1774,1754,1837,1638,1787,1833,1836,1813,1750,1561,1863,1727,1784,1693,1825,1815,1853,1882,1812,1923,1895,1828,1906,1932,1842,1820,1777,1840,1780,1781,1766,1882,1843,1778,1748,1730,1789,1733,1707,1744,1895,1816,1817,1721,1788,1750,1737,1731,1782,1979,1853,1826,1813,1798,1820,1811,1810,1893,1724,1745,1779,1729,1739,1719,1768,1755,1880,1881,1854,1843,1813,1809,1747,1793,1780,1847,1678,1753,1783,1492,1739,1744,1671,1739,1801,1782,1723,1781,1614,1660,1614,1793,1795,1761,1696,1604,1633,1700,1685,1684,1656,1771,1664,1633,1650,1660,1699,1682,1700,1662,1853,1815,1721,1780,1829,1800,1806,1797,1851,1751,1765,1707,1767,1803,1758,1812,1734,1850,1804,1876,1866,1886,1910,1968,1820,1838,1720,1663,1740,1724,1744,1765,1743,1736,1787,1681,1710,1830,1792,1783,1866,1737,1747,1583,1451,1517,1556,1495,1537,1542,1445,1812,2011,1944,1952,2010,1972,1948,1991,1893,1953,1989,2011,1994,1929,1970,2002,1997,1970,1348,40,38,40,47,281,40,38,40,1458,1786,1832,1819,1853,1830,1806,1805,1904,1504,1456,1432,1440,1431,1423,1440,1443,1804,1839,1817,1751,1793,1765,1808,1747,1805,783,460,40,40,39,319,32,40,40,375,1169,1275,1798,1718,1742,1768,1744,1717,1719,1752,1780,1320,1336,1395,1514,657,1341,1531,1322,1109,1499,1772,1588,1466,40,35,40,51,279,40,34,40,1014,1294,1192,1136,1217,1727,1612,1631,1701,1655,1671,1671,1631,959,40,38,40,663,929,84,441,1677,1859,2023,1643,1641,1628,1643,1647,1699,1741,1727,1694,1758,1707,1778,1712,1706,1677,1662,1725,852,1159,39,1790,1791,1709,1712,1750,1740,1753,1717,1822,1888,1834,1880,1890,1832,1874,1806,1804,1983,1752,1579,1705,1703,1734,1782,1796,1717,1872,1852,1930,1830,1920,1803,1962,1789,1973,1649,1212,1168,1093,1008,1348,1406,1333,1370,1414,1354,1149,1117,1118,1116,1193,1267,1385,706,898,949,1157,1577,1607,863,669,762,948,1592,1715,1728,1259,953,1381,1716,1254,1148,791,925,936,608,666,1035,1296,1297,1164,1301,1404,1376,1348,1293,1708,1916,1915,1906,1827,1847,1918,1859,1963,1831,1930,1906,1951,1832,1868,1912,1840,939,943,939,944,1961,1961,1597,1972,1574,1162,1218,1155,1564,1985,1999,2030,2011,1847,1934,1884,1872,2026,2046,2051,2032,1957,1805,1729,1888,1810,1829,1767,1788,1757,1970,1955,1941,1906,1993,1319,1282,1344,1764,1197,1241,1243,1392,1188,1207,1239,1276,1798,1168,1212,1354,1329,1155,741,980,1619,1533,730,854,1663,1742,853,732,1443,1442,1318,1409,1378,1956,1764,1748,1825,1806,1768,1812,1877,1785,1776,1670,1681,1650,1789,1760,1806,1810,1776,1470,1402,1461,1479,1567,1418,1436,1489,1596,1495,1441,1495,1648,1513,1473,1508,1658,1968,1984,1929,1923,2023,1993,1958,2004,1956,1761,1774,1735,1829,1655,1563,1555,1586,1957,1888,1776,1910,1888,1807,1810,1815,1943,1910,1849,1882,1946,1779,1823,1759,1832,1745,1501,1502,1492,1243,1208,1179,1686,1123,1225,1204,1293,1578,1102,1223,1558,1843,1798,1759,1767,1929,1776,1776,1770,1870,1800,1839,1816,1804,1074,871,822,743,1148,1152,1179,1152,1276,1212,1206,1192,1279,1301,1410,1365,1314,1809,1848,1867,1840,1905,1831,1855,1869,1909,1892,1940,1922,1890,1950,1916,1932,1941,1871,1835,1875,1795,1777,1834,1745,1659,1652,1589,1918,1796,1844,1922,1882,1845,1924,1750,1479,1397,1458,1562,1495,1696,1757,1527,1588,1704,1627,1712,1696,1769,1742,1770,1833,1970,2048,2056,1868,2036,1977,1981,1935,2032,1957,1940,1879,1637,1130,1397,1273,1254,1764,1784,1749,1749,1668,1499,1547,1615,1725,1800,1799,1790,1800,1809,1838,1796,1778,1712,1669,1707,1636,1629,1767,1816,1739,1512,1019,1192,916,1494,1063,892,868,1089,1244,1024,1139,934,1067,573,588,525,750,695,737,690,891,864,1246,1177,1087,1298,1351,1461,1355,1354,1421,1446,1720,1533,1253,1547,1649,1361,1632,1715,1601,1685,933,222,237,203,767,489,451,459,788,2047,2020,2046,2037,2025,2041,2032,2026,2046,1975,1925,1971,1898,1903,1976,1912,1884,1476,1387,1415,1473,1321,1165,1173,1136,1248,1445,1337,1545,1454,1846,1829,1840,1879,1875,1819,1789,1798,1891,1781,1742,1753,1807,1676,1690,1747,1709,1455,1433,1508,1444,1426,1447,1522,1485,1559,1895,1894,1851,1930,1224,1272,1212,1274,1835,1815,1784,1790,1698,1466,1368,1540,1529,2028,2040,2041,2016,2014,1997,1975,1993,1772,1507,1508,1464,1704,1703,1653,1681,1698,1998,1992,1976,2010,1851,1707,1730,1730,1960,2048,2055,2052,1986,1283,1237,788,548,538,536,897,1431,1428,1415,1146,1264,1611,1621,1224,1365,1562,1531,1505,1476,1543,1736,1642,1914,1844,1335,1200,1318,1238,1214,935,1000,958,1317,904,1000,935,843,1657,1960,1961,1969,1969,2031,2007,1968,2003,1845,1499,1496,1610,1799,1633,1691,1627,1764,1626,1480,1588,1663,1731,1677,1722,1607,1608,1640,1665,1471,1511,1521,1612,1498,1547,1887,1908,1859,1855,1904,1898,1856,1842,1892,1508,1489,1450,1888,1951,1972,1978,2003,1869,1800,1803,1790,1846,1899,1918,1907,1701,1405,1474,1396,1438,1458,1520,1489,1442,1552,1662,1715,1640,1531,1537,1560,1518,1616,1735,1626,1756,1745,1670,1751,1661,1737,1661,1666,1513,1722,1646,1652,1500,1665,1750,1435,1599,1552,1553,1424,1592,1616,1733,1511,1489,1564,1507,1509,1444,1557,1727,1491,1288,1247,1535,1514,1611,1752,1428,1673,1500,1535,1768,1716,1572,1654,1439,1230,1178,1298,1302,1348,1222,1385,1793,1321,1391,1399,1223,1152,1128,1308,1190,1388,1461,1391,1354,1580,1367,1187,1359,1857,1705,1777,1578,1275,1037,1019,881,937,1108,1196,1305,1272,1589,1618,1559,1696,1965,1107,1244,965,1016,833,617,1166,1137,1380,1204,1275,1259,1349,1552,1725,1803,1987,1710,1787,1791,1607,1301,1258,1208,1308,1297,1330,1372,1223,1229,1302,1265,1217,1623,1655,1687,1674,1509,1432,1575,1760,1537,1657,1251,1221,1219,1261,1308,1308,1457,1549,1667,1418,1306,1348,1222,1154,1183,1319,1470,1719,1714,1684,1562,1378,1447,1368,1446,1694,1550,1317,1291,1183,1254,1158,1269,1497,1749,1652,1769,1616,1533,1694,1643,1452,1693,1616,418,267,1546,1600,462,263,1465,1563,472,262,1475,1597,484,282,1485,1570,510,257,1395,1570,532,250,1205,1288,1269,1252,1454,1267,1292,1320,1395,1309,1238,1329,1293,1419,1325,1359,1286,1411,1533,1284,1240,1262,1205,1246,1246,1290,1246,1475,1195,1184,1211,1205,1198,1184,1218,1494,1251,1249,1296,1310,1278,1258,1274,1253,1867,1736,1765,1693,1673,1631,1826,1815,1494,1256,1371,1319,1350,1352,1356,1269,1407,1327,1401,1282,1373,1351,1444,1320,1459,1821,1650,1593,1570,1642,1590,1537,1411,1295,1393,1385,1497,1536,1529,1424,1562,1731,1869,1671,1583,1580,1632,1569,1507,1426,1276,1389,1378,1474,1561,1528,1440,1536,1724,1881,1694,1579,1589,1669,1576,1502,1470,1257,1357,1384,1475,1570,1523,1440,1501,1735,1867,1679,1612,1574,1667,1556,1518,1476,1263,1381,1391,1446,1579,1525,1444,1512,1695,1917,1189,1240,1101,902,876,1040,1013,1009,1115,1289,1216,1177,940,962,1081,1023,1544,1220,1229,1093,917,897,1025,1016,966,1135,1286,1221,1212,969,977,1077,1025,1424,1979,1920,1918,1964,1962,1953,1950,1911,1864,1798,1788,1852,1874,1938,1926,1960,1756,1681,1974,1935,1982,2022,1990,1912,1962,2006,1774,1742,1756,1764,1783,1751,1848,1762,1725,1780,1770,1768,1802,1532,1920,2003,1956,1870,1884,1948,1884,1103,811,1441,1929,1977,1995,1982,1939,2001,1968,1942,2047,1954,1980,1966,1936,1999,1943,1962,2004,1575,1553,1566,1576,1564,1557,1579,1565,1784,1716,1612,1691,1551,1847,1814,1835,1781,1841,1490,1563,1529,1527,1710,1666,1709,1610,1775,1615,1725,1708,1860,1802,1858,1839,1890,1667,1679,1682,1583,1868,1798,1840,1819,1818,1540,1635,1553,1611,1614,1705,1700,1669,1742,1717,1768,1750,1742,1538,1727,1685,1785,1503,1672,1813,1606,1699,1781,1757,1609,1682,1586,1757,1630,1587,1562,1737,1628,1722,1030,1871,1905,1583,1512,1939,1858,1491,1556,1712,1998,2009,1968,1690,1337,958,1142,1331,1137,1742,1590,1564,1430,1398,1499,1485,1526,1752,1152,1126,866,985,1317,1049,981,1051,1091,1302,1835,1780,1887,1805,1843,1803,1875,1783,1850,1681,1624,1776,1602,1785,1715,1691,1848,1897,1773,1874,1815,1841,1855,1855,1777,1879,1748,1602,1760,1648,1758,1747,1712,1791,1800,1867,1854,1856,1882,1823,1900,1820,1961,1925,1911,1986,1888,1949,1955,2038,1923,1938,1781,1741,1801,1750,1843,1820,1840,1763,1682,1449,1268,1534,1558,1711,1433,1092,1235,1096,780,273,714,1321,1250,1360,1246,1463,1326,1267,1382,1306,1438,1355,1305,1328,1307,1457,1322,1349,1344,1337,1484,1649,874,1652,1438,1873,1927,2011,2048,2000,2020,1978,1918,1908,1642,1556,1506,1556,1656,1658,1714,1755,1813,1731,1727,1651,1715,1557,1612,1646,1377,1660,1817,1937,1864,1734,1661,1762,1933,1986,1909,1795,1653,1836,1889,1936,1782,1713,1656,1920,1913,1886,1767,1576,1925,1932,1935,1929,1877,1605,1817,1862,1874,1880,1707,959,971,1005,954,1632,1492,1705,1569,1664,1612,1694,1650,1539,1832,1700,1686,1738,1698,1660,1659,1629,1674,1654,1747,1934,1731,1773,1709,1650,1801,1697,1611,1779,1637,1827,1610,1634,1649,1637,1728,1890,1897,1906,1893,1943,1945,1817,1687,1757,1627,1694,1902,1935,1869,1899,1938,1939,1979,1913,1956,1947,1891,1788,1776,1785,1796,1960,1914,1894,1880,1913,1851,1885,1907,1413,1287,1323,1578,1598,1641,1603,1710,1890,1848,1892,1844,1874,1829,1866,1903,1833,1901,1889,1782,616,472,624,1245,1009,1055,1379,1228,1182,1507,1697,1623,1619,1666,1766,1498,1682,1720,1316,1674,1534,1366,1245,1473,1631,1679,1724,1773,1667,1737,1676,1603,1595,1363,1503,1483,1501,1433,1446,1530,1443,1470,1375,1496,1423,1799,1803,1843,1902,1847,1855,1848,1861,1906,1825,1824,1878,1904,1880,1882,1862,1925,1958,1993,1933,1893,1905,1908,1928,1928,1895,1950,1927,1897,1860,1872,1887,1901,1878,1598,1401,1466,1781,1641,1589,1638,1586,1621,1655,1614,1687,1684,1656,1626,1658,1644,1637,1632,1631,1761,1658,1644,1657,1635,1621,1641,1650,1639,1978,1869,1868,1858,1887,1854,1863,1843,1926,1825,1838,1812,1840,1855,1833,1847,1843,1987,1846,1871,1876,1845,1836,1851,1859,1949,1315,1437,1442,1388,1312,1450,1611,1386,1364,1390,1510,1446,1456,1511,1931,1897,1804,1755,1799,1850,1853,1898,1879,1623,1755,1780,1660,1680,1707,1735,1611,1692,1695,1721,1657,1782,1715,1792,1609,1702,1704,1881,1806,1882,1729,1627,1894,1854,1937,1828,1850,1622,1785,1747,1785,1827,1657,1630,1740,1671,1756,1757,1569,1822,1721,1775,1736,1810,1616,1732,1614,1603,1754,1664,1140,1275,1248,1255,1281,1290,1026,1662,1621,1504,1571,1613,1584,1546,1584,1558,1579,1549,1586,1757,1821,1900,1930,1854,1603,1915,1433,1401,1773,1780,1849,1760,1695,1642,1465,1710,1709,1781,1687,1385,1260,1780,1836,1830,1475,1468,1493,1402,1689,1570,1406,1619,1539,1530,1498,1525,1478,1563,1432,1376,1553,1522,1594,1468,1451,1487,1698,1539,1526,1447,1330,1485,1495,1715,1806,1880,1820,1830,1850,1792,1748,1689,1637,1652,1806,1679,1800,1727,1724,1799,1740,1710,1886,1940,1822,1863,1830,1850,1850,1730,1674,1688,1705,1710,1769,1738,1684,1700,1812,1759,1614,1847,1683,1726,1705,1741,1620,1706,1666,1752,1811,1672,1704,1644,1780,1697,1753,1680,1608,1803,1758,1383,1466,1755,1784,1664,1683,1739,1435,1500,1551,1515,1493,1434,1598,1521,1483,1779,1778,1656,1739,1762,1649,1741,1755,1611,1648,1652,1663,1649,1615,1623,1638,1685,1667,1632,1594,1697,1624,1658,1634,1737,1644,1642,1637,1620,1726,1621,1670,1642,1711,1637,1651,1640,1703,1613,1642,1597,1695,1639,1615,1716,1770,1732,1655,1625,1641,1722,1619,1651,1657,1782,1680,1610,1612,1646,1750,1776,1871,1695,1649,1711,1810,1701,1699,1753,1833,1812,1729,1903,1882,1868,1990,1972,1949,1939,1970,1892,1827,1857,1973,1992,2013,1992,1922,1856,1945,1764,1825,1974,2023,2023,2003,2006,1973,1942,1913,1896,1906,1951,1926,1952,1960,1835,1820,1932,1920,1893,1826,1624,1634,1782,1852,1816,1676,1618,1605,1628,1623,1655,1583,1416,1364,1320,1450,1458,1517,1466,1399,1413,1518,1535,1329,1431,1538,1475,1399,1642,1707,1698,1750,1672,1693,1704,1785,1688,1697,1716,1807,1710,1689,1639,1683,1682,1727,1674,1687,1649,1725,1685,1721,1650,1651,1726,1636,1639,1654,1928,1889,1902,1908,1910,1901,1893,1889,1925,1804,1794,1807,1809,2005,2006,2003,2050,2041,2025,2042,2025,2038,2045,2036,2055,2050,2056,2055,2042,2044,1993,1848,1839,1908,1919,1916,1873,1852,1898,1479,1437,1475,1499,1723,1586,1559,1581,1596,1560,1578,1666,1446,1478,1598,1582,1513,1605,1588,1413,1514,1383,1578,1737,1926,1745,1707,1714,1669,1902,1869,1888,1798,1774,1777,1759,1818,1871,1545,1882,1980,2011,1982,1901,1902,1837,1627,1674,1740,1719,1771,1742,1798,1688,1688,1769,1687,1702,1700,1360,1485,1508,1515,1482,1587,1523,1528,1508,1545,1511,1529,1526,1558,1491,1506,1522,1461,1370,1295,1296,1280,1555,1914,1917,1902,1880,1958,1931,1939,1931,1611,1343,1288,1340,1356,1322,1328,1348,1558,1510,1485,1517,1657,1601,1504,1655,1508,1827,1620,1668,1731,1333,1677,1664,1659,1881,1212,1232,1228,1258,1280,1277,1234,1243,1485,1200,984,1170,1094,1281,1094,1129,1294,1351,1273,1269,1203,1261,1244,1355,1339,1591,1411,1298,1316,1324,1322,1308,1295,1373,1972,1488,1648,1749,1668,1556,1479,1419,1947,1916,1103,1193,1118,1263,1269,1133,1938,1968,1919,1463,1805,1825,1814,1527,1872,1971,425,582,480,488,594,524,578,381,872,548,1344,1416,1375,1264,1135,822,621,658,1019,1389,1527,1482,1433,1407,648,1237,954,1495,1436,1151,1340,1269,1304,1349,1932,1741,1744,1783,1292,71,470,1073,784,503,706,440,674,556,614,716,1272,788,1188,1409,1423,1419,1407,1405,1680,1610,1688,1593,1572,1548,1747,1783,1417,1091,1065,1209,1282,1359,1218,1290,1349,1457,1599,1550,1679,1682,1466,1311,1453,1250,353,25,30,25,885,638,1333,823,1651,1612,1665,1608,1609,1222,1655,1525,1558,1549,1861,1908,1939,1909,1937,1904,1165,868,1437,1510,1024,979,1094,1275,1426,1435,1487,1496,1581,1500,1708,1743,1571,1600,1518,1548,1578,1567,1503,1583,1954,2048,2052,2025,1941,1868,2029,2001,1829,1767,1943,1868,2025,1995,2042,1989,2029,1987,2039,1983,2047,2049,1848,1737,1970,2000,2016,1996,1780,1657,1386,1204,1236,1199,1812,2007,1768,1713,1858,1912,1838,1771,1755,1751,1938,1933,1976,1967,1947,2005,1976,1981,1670,1539,1564,1538,1531,1534,1552,1536,1459,1368,1350,1342,1292,1272,1361,1300,1874,2002,1998,1979,1998,1986,1950,1919,2015,1972,1724,1707,1657,1651,1692,1661,615,246,859,1338,1327,1237,1005,1033,888,1041,1450,1697,1629,1643,1741,1719,1600,1518,1616,1558,1613,1550,1576,1471,1484,1282,1191,1070,1321,1270,1295,1226,1417,1432,1570,1575,1530,1485,1384,1433,1028,1005,1396,1571,1220,769,1312,1285,1461,1488,1489,1506,1337,1156,1427,1494,1559,1708,1792,1857,1777,1836,1687,1540,1646,1611,1640,1560,1600,1491,1577,1507,1312,1304,1492,1546,1481,1362,1405,1387,1391,1365,871,490,555,449,1243,1434,1610,1504,1449,1422,1534,1515,1472,1356,1236,1138,1250,1314,1461,1488,1189,1024,540,336,1512,1798,1874,1784,1655,1531,1100,1052,1396,1545,1568,1568,1559,1569,1582,1556,1817,1751,1837,1725,1877,1795,1856,1791,1365,1377,1407,1381,1443,1411,1622,1682,1633,1536,1518,1491,1516,1514,1481,1452,1831,1934,1634,1531,815,728,935,854,1186,1499,1703,1672,1627,1466,1576,1334,1245,1216,822,584,883,817,754,606,1165,1539,793,522,614,508,1541,1806,1329,1095,1100,1033,1344,1394,1240,1053,970,894,1372,1421,1458,1419,1411,1444,1682,1698,1741,1639,1882,1910,1668,1557,1133,1030,1222,1143,1073,990,970,848,1177,998,1260,1168,772,489,623,617,603,519,631,606,576,497,661,620,600,527,655,594,565,447,570,557,1632,1870,1299,1036,1116,1027,1117,1030,1162,1113,1688,1767,1629,1727,1678,1693,1681,1696,1306,1188,1548,1678,1688,1712,1862,1864,612,163,366,306,279,185,380,195,271,55,261,25,213,131,271,264,338,247,1183,1502,1534,1682,1214,1091,1078,1074,1149,1248,1484,1463,1495,1428,1826,1854,1778,1696,1618,1375,1642,1590,1511,1392,1412,1275,1291,1769,1593,1261,1499,1484,1475,1506,1494,1220,1384,1455,1430,1455,1543,1508,1493,1073,1228,1309,1465,1121,1280,1245,1128,1062,1210,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2046,2052,1926,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2038,1859,2048,2048,1976,2048,2048,1981,2048,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,1980,2048,2048,2048,2048,1979,2048,2048,2048,2048,2056,2048,1975,2048,2048,2048,2046,1915,2048,2048,2048,2044,1915,2048,1966,2048,1966,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2056,2048,2042,2000,1813,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2047,1953,1893,2048,2048,2048,2048,2048,1958,1915,2048,2048,2048,2047,2049,1937,1956,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2043,1973,1827,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2049,2055,2039,1977,1729,2048,1978,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2031,1928,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1883,2048,2048,2048,2048,1971,2048,2048,2048,2048,1956,2048,2048,2048,2048,2048,2048,1965,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,1978,2048,1982,2048,1985,2048,2048,1975,1981,2048,1720,1963,2038,2048,1997,1873,1959,2032,2048,2022,1924,1913,2024,2048,2048,1956,1903,2015,2048,2049,1981,1888,1981,2051,2048,2026,1910,1951,2034,2048,2046,1916,1966,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1986,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,1974,2048,2048,2048,1985,2048,1981,2048,1978,1985,2048,1979,2048,2048,2048,2048,1977,2048,2048,2048,2048,1978,1977,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,1972,1977,2048,1976,1985,2048,2048,1985,2048,2048,1985,2048,1979,2048,1977,2048,1981,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1971,2048,2048,1983,2048,2048,2048,1978,2048,2048,2048,2048,1976,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,1975,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2004,2043,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2033,1831,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2050,2046,2005,2004,1981,1801,1907,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,1966,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1890,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,1896,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,1971,2048,2048,1989,2048,2014,2042,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,1974,2048,2048,1973,2048,1981,2048,2025,1977,2040,1922,2048,1982,2048,2048,1973,2048,1973,2048,1970,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,1985,2048,1979,2048,1978,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,1964,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2054,2053,2042,1935,1746,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2030,1845,1928,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2054,2041,1848,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2056,2055,1924,1933,2048,2048,2048,2048,2048,1979,1990,2048,1971,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,1967,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2025,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1931,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2056,2042,1812,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2056,1993,1860,2048,1974,2048,1975,2048,1971,1978,2048,2048,2048,2048,2048,2039,1901,2048,2048,2048,2048,2048,2048,1936,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2006,2051,1896,2048,1977,2048,1849,2043,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2045,2006,2056,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2045,2008,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,1988,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,1895,2048,2048,2048,1947,2048,2048,2048,1952,1978,1978,2048,1974,1800,1972,1976,2048,1974,2048,2048,2048,2048,2048,2048,2048,2053,1995,1952,1715,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1999,1849,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,1975,2048,2048,2048,2048,1973,2048,2048,2048,2048,2053,1894,2048,2048,2048,2048,2056,2015,1832,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1902,2039,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1990,1027,1068,1648,1403,1773,1267,981,1154,1393,1422,1463,1481,1740,1867,1883,1895,1972,1782,1889,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,1983,2048,1981,2048,1488,1330,1546,1562,1184,1328,1546,1367,898,797,875,834,886,785,2021,2048,202,25,25,1793,2054,1373,25,25,984,1164,1378,870,2048,1944,2003,2048,2048,2048,2048,2048,1942,2048,2048,2007,2048,2048,1999,2048,2048,2048,2048,2048,2048,1905,1995,1961,2008,1944,1939,1963,2006,2007,2048,2048,2048,2048,2048,1894,1874,2048,2048,2048,2048,2007,2048,1867,2048,2048,2011,2048,2048,1999,2048,2048,2048,2048,2048,2048,2056,2001,2048,2048,2048,2048,2048,2048,1999,2048,2007,2048,1873,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2004,2048,1877,2048,1976,2022,1884,1925,2005,2006,1931,1878,2004,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,1997,2004,2048,1980,1941,1992,1939,1942,1889,1971,2001,2048,2048,2007,2048,2048,2048,2003,2048,1991,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,1957,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,2048,2048,1950,1930,2048,1876,2048,2048,2048,2048,2048,2048,2048,2048,1991,2048,2048,1991,2048,2048,1957,1978,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,1950,1915,2048,1922,2002,2048,1876,2048,1874,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2006,1870,1943,2003,2048,2000,1888,1826,2048,2048,2048,2048,2048,1985,1941,2048,1872,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2002,2048,2048,1820,1957,1640,2048,2048,2048,2048,1922,2048,2048,2048,1942,2048,2048,1947,2048,1974,2048,1841,2048,1939,2048,2048,1745,2048,1872,2048,2048,2048,2048,2048,2048,1962,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,1953,2048,2048,2048,2048,1873,2048,2048,1967,2048,1903,2048,1885,2048,1941,2048,1940,2048,2048,2048,2048,2048,2048,2007,2048,1961,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,1982,2048,2048,2003,2048,1876,2048,2048,2048,2048,2004,2048,2048,2030,1998,2048,2048,1928,2048,1944,2048,1931,1957,1955,1933,2048,2004,2048,2048,2048,1814,1943,1948,2004,2048,2048,2048,2048,2056,1944,2048,1873,1944,1886,1940,2048,2048,2048,2048,2048,1958,2048,1942,2048,1942,1888,1725,2048,2048,2048,2048,2048,2048,2007,1880,2048,2048,2048,2007,2048,2048,2048,1949,2048,1931,2006,2048,2048,2048,2004,2048,2048,2048,2012,2048,2048,2002,2048,2048,2048,2048,2006,2048,2048,2009,1996,2048,2048,2048,1870,2048,2048,2048,2048,1971,2045,2048,2048,2048,1997,2048,1997,2048,1817,2048,1945,2048,2048,1756,2048,2048,2048,2001,2048,2048,2006,1971,2056,2048,2048,2048,2048,2048,2049,2048,2056,1936,2048,2048,2048,2048,2009,2048,2048,1939,2048,2048,2048,2048,2048,1873,2048,1886,1901,1966,2048,2048,2048,2048,2048,1251,1819,2048,2048,2048,1940,2048,2048,2014,1996,2048,1716,2048,1921,2048,1853,2048,1879,2048,1873,2048,2048,2048,1772,2048,2048,2048,2048,2048,1950,2048,2048,1959,2048,2048,1976,1933,2048,1973,2048,2048,2048,1953,2006,1923,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,1999,2048,2048,2041,1997,2048,2048,1198,2048,2048,2048,2048,2004,2048,2048,2048,2000,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,2003,2048,2048,2048,1953,2048,2048,2048,2048,2005,2048,2048,2048,2000,2048,1946,2048,2048,2048,2048,2048,1685,1871,2048,1999,1944,1958,2056,2001,2048,2048,2048,2048,1880,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1876,2048,1950,2003,2048,2048,2048,1872,2048,2048,2048,2048,2048,2048,2048,1870,1839,1922,2048,1868,1553,2048,2001,2004,2048,2048,1940,2048,2007,2048,1997,2048,1866,2022,1996,1939,2003,2048,1939,1947,2048,1997,2048,2048,2048,1949,2048,2048,1948,2048,2048,2048,1999,2048,1970,1967,1957,2048,2048,2048,2048,1998,2048,2048,2048,2000,2048,2048,1937,2048,2048,1938,2048,1939,1941,2048,2048,1939,2048,2014,2048,2004,2048,1947,1964,2048,2048,2006,1941,1913,2048,2048,1873,2048,2030,1924,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,1999,2048,2048,2048,1999,2048,1903,2048,2048,2048,1991,2048,1936,1939,1941,1987,2048,1814,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2005,1965,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,1940,1983,1995,2003,2048,2048,2048,1873,1941,2048,1941,2048,2048,2048,2002,2048,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,1935,2048,2048,2048,2048,1939,2053,2024,2048,1942,2048,2048,2001,2048,2048,2006,2048,2048,2002,2048,2048,1942,2010,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2048,2048,2008,1980,2007,2048,1940,2048,2048,1944,2048,2048,1600,2048,2001,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,1234,1576,2048,1961,2048,1771,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2008,2048,2048,2048,2008,1999,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2057,2048,1998,2048,2048,2002,2048,2048,2048,2048,2048,2048,1873,2048,2048,2048,2048,2048,1856,2048,2048,2048,2048,2048,2048,2048,2048,1874,2048,2048,2048,1877,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1760,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2003,2048,2048,2048,2045,2038,1942,1940,2048,2048,1823,2048,2048,2048,2048,1942,1873,1561,2048,2048,2048,1875,2048,2048,2048,2048,2048,2048,2048,2003,1963,2048,2005,1901,1982,2048,2048,1868,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2001,2048,1873,2048,2000,2048,1870,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2001,1880,2048,1870,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2001,2048,2008,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2022,2048,2048,2048,2048,2007,2048,2048,2048,2048,1915,2043,1871,1875,2048,2048,1985,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2005,2048,2048,2048,2048,1951,2048,2048,2048,2048,2018,2040,2048,2048,1959,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2007,2048,1959,2048,2048,2048,2011,2048,1875,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2056,2048,2054,2048,2048,2048,2001,2048,2048,2034,2014,2048,1960,1997,2048,2048,2048,2048,2048,2048,2048,2048,1965,2048,2048,1660,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,1945,2048,2048,2048,2048,2056,1768,1707,2048,1931,1959,2048,2048,2048,2048,2048,1975,2006,2048,1941,1934,2048,2048,2048,1934,2048,2048,2038,1979,2048,2048,2048,2057,1989,2048,2002,2048,2048,1887,1621,2048,1996,2048,2048,2048,1982,2048,2048,2048,2048,1972,2048,2048,2048,1972,2048,2048,2048,2048,2048,1826,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,1985,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2001,2048,2048,2048,1995,2048,2002,2048,2048,1996,2048,2048,2057,1836,2048,2048,1885,2048,2048,1748,1907,2048,2048,2048,2048,2019,2012,2048,2048,2048,2014,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2055,2055,1997,2048,2048,2048,2048,2001,2048,1992,2048,2048,1997,1998,2048,2048,1968,2048,2048,2057,2048,2048,2048,2004,2048,1920,2048,1995,2048,2048,1999,2048,2048,1999,2048,2048,1989,2048,1998,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2056,1942,2048,2048,2048,2048,2048,2001,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1963,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,1990,2048,2048,2048,2048,2048,2048,2048,2048,1989,2048,2048,2048,2048,2048,2048,1995,2048,2048,2057,1960,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2056,1937,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2053,1924,1924,2048,2048,2010,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,1996,2048,2048,2003,2048,2048,1995,2048,2048,1988,2048,2048,2048,2034,2048,1993,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1542,1107,1116,1135,1146,2024,719,695,1301,2048,2048,907,34,34,34,34,34,131,525,349,502,553,616,679,626,510,607,560,616,529,670,699,562,655,651,737,731,789,762,811,660,1148,1021,916,905,957,947,927,953,994,982,988,962,759,1014,1339,1167,1362,1203,1363,1176,1145,1172,1150,1195,1139,1197,1144,1162,1080,950,1327,1440,1247,800,766,757,989,1295,1215,1340,976,331,97,101,114,215,48,117,48,48,48,57,84,47,201,148,47,47,102,47,47,43,97,47,47,47,70,66,50,50,185,45,44,42,41,47,121,48,126,48,48,62,106,47,47,47,98,45,45,45,45,45,98,45,41,39,50,50,123,50,42,110,53,118,49,46,43,70,47,46,46,46,100,46,46,46,47,47,116,45,45,96,45,45,45,97,45,163,929,1198,206,47,751,1169,375,50,633,1148,521,405,1188,1262,789,822,910,370],\"successes\":[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,1,1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,0,0,1,1,1,1,1,0,1,1,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,0,1,1,1,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,1,0,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,0,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,1,1,0,0,1,0,1,1,1,0,1,0,0,0,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,0,0,0,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,1,1,0,0,0,1,0,1,1,1,0,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,0,0,0,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,0,0,1,0,0,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,1,0,0,1,1,1,1,1,1,1,0,1,0,0,1,1,0,1,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,1,0,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,0,0,0,1,0,1,1,1,0,0,0,0,0,1,1,1,0,1,0,1,0,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,1,1,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,1,0,1,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,1,0,1,1,1,1,0,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,1,0,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,1,1,0,0,1,0,1,0,1,1,1,1,0,1,0,0,0,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,1,0,1,0,1,0,0,1,0,0,0,1,0,0,1,1,1,0,0,0,0,0,1,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,1,0,0,1,0,1,0,1,0,1,1,1,1,1,0,1,1,0,1,0,0,0,1,0,0,1,0,0,0,1,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,1,0,1,0,1,0,1,1,0,0,1,1,1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,1,1,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,1,1,0,0,0,0,0,1,1,0,1,1,0,0,0,1,0,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\r\n;\r\n            compressedData['data'] = byteArray;\r\n            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');\r\n            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, false);\r\n            Module['removeRunDependency']('datafile_C:/Dev/EDGE-classic/web/site/edge-classic.data');\r\n      };\r\n      Module['addRunDependency']('datafile_C:/Dev/EDGE-classic/web/site/edge-classic.data');\r\n\r\n      if (!Module.preloadResults) Module.preloadResults = {};\r\n\r\n        function preloadFallback(error) {\r\n          console.error(error);\r\n          console.error('falling back to default preload behavior');\r\n          fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, processPackageData, handleError);\r\n        };\r\n\r\n        openDatabase(\r\n          function(db) {\r\n            checkCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME,\r\n              function(useCached, metadata) {\r\n                Module.preloadResults[PACKAGE_NAME] = {fromCache: useCached};\r\n                if (useCached) {\r\n                  fetchCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME, metadata, processPackageData, preloadFallback);\r\n                } else {\r\n                  fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE,\r\n                    function(packageData) {\r\n                      cacheRemotePackage(db, PACKAGE_PATH + PACKAGE_NAME, packageData, {uuid:PACKAGE_UUID}, processPackageData,\r\n                        function(error) {\r\n                          console.error(error);\r\n                          processPackageData(packageData);\r\n                        });\r\n                    }\r\n                  , preloadFallback);\r\n                }\r\n              }\r\n            , preloadFallback);\r\n          }\r\n        , preloadFallback);\r\n\r\n        if (Module['setStatus']) Module['setStatus']('Downloading...');\r\n\r\n    }\r\n    if (Module['calledRun']) {\r\n      runWithFS();\r\n    } else {\r\n      if (!Module['preRun']) Module['preRun'] = [];\r\n      Module[\"preRun\"].push(runWithFS); // FS is not initialized yet, wait for it\r\n    }\r\n\r\n    }\r\n    loadPackage({\"files\": [{\"filename\": \"/.gitkeep\", \"start\": 0, \"end\": 0}, {\"filename\": \"/edge_base/blasphemer/graphics/AUTOPAGE.png\", \"start\": 0, \"end\": 42807}, {\"filename\": \"/edge_base/blasphemer/graphics/M_DOOM.lmp\", \"start\": 42807, \"end\": 49300}, {\"filename\": \"/edge_base/blasphemer/graphics/M_LSCNTR.lmp\", \"start\": 49300, \"end\": 49492}, {\"filename\": \"/edge_base/blasphemer/graphics/M_LSLEFT.lmp\", \"start\": 49492, \"end\": 49684}, {\"filename\": \"/edge_base/blasphemer/graphics/M_LSRGHT.lmp\", \"start\": 49684, \"end\": 49876}, {\"filename\": \"/edge_base/blasphemer/graphics/M_SKULL1.lmp\", \"start\": 49876, \"end\": 50448}, {\"filename\": \"/edge_base/blasphemer/graphics/M_SKULL2.lmp\", \"start\": 50448, \"end\": 51020}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERML.lmp\", \"start\": 51020, \"end\": 51154}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERMM.lmp\", \"start\": 51154, \"end\": 51360}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERMO.lmp\", \"start\": 51360, \"end\": 51468}, {\"filename\": \"/edge_base/blasphemer/graphics/M_THERMR.lmp\", \"start\": 51468, \"end\": 51602}, {\"filename\": \"/edge_base/blasphemer/graphics/NULL.png\", \"start\": 51602, \"end\": 52762}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARL.lmp\", \"start\": 52762, \"end\": 55473}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARR.lmp\", \"start\": 55473, \"end\": 58184}, {\"filename\": \"/edge_base/blasphemer/graphics/_IN1.png\", \"start\": 58184, \"end\": 59371}, {\"filename\": \"/edge_base/blasphemer/scripts/anims.ddf\", \"start\": 59371, \"end\": 60849}, {\"filename\": \"/edge_base/blasphemer/scripts/attacks.ddf\", \"start\": 60849, \"end\": 102518}, {\"filename\": \"/edge_base/blasphemer/scripts/coal_hud.ec\", \"start\": 102518, \"end\": 118050}, {\"filename\": \"/edge_base/blasphemer/scripts/flats.ddf\", \"start\": 118050, \"end\": 118607}, {\"filename\": \"/edge_base/blasphemer/scripts/fonts.ddf\", \"start\": 118607, \"end\": 119655}, {\"filename\": \"/edge_base/blasphemer/scripts/games.ddf\", \"start\": 119655, \"end\": 122389}, {\"filename\": \"/edge_base/blasphemer/scripts/images.ddf\", \"start\": 122389, \"end\": 123367}, {\"filename\": \"/edge_base/blasphemer/scripts/language.ldf\", \"start\": 123367, \"end\": 131847}, {\"filename\": \"/edge_base/blasphemer/scripts/levels.ddf\", \"start\": 131847, \"end\": 144717}, {\"filename\": \"/edge_base/blasphemer/scripts/lines.ddf\", \"start\": 144717, \"end\": 149552}, {\"filename\": \"/edge_base/blasphemer/scripts/playlist.ddf\", \"start\": 149552, \"end\": 151708}, {\"filename\": \"/edge_base/blasphemer/scripts/rscript.rts\", \"start\": 151708, \"end\": 164752}, {\"filename\": \"/edge_base/blasphemer/scripts/sectors.ddf\", \"start\": 164752, \"end\": 166236}, {\"filename\": \"/edge_base/blasphemer/scripts/sounds.ddf\", \"start\": 166236, \"end\": 177432}, {\"filename\": \"/edge_base/blasphemer/scripts/styles.ddf\", \"start\": 177432, \"end\": 181906}, {\"filename\": \"/edge_base/blasphemer/scripts/switch.ddf\", \"start\": 181906, \"end\": 182319}, {\"filename\": \"/edge_base/blasphemer/scripts/things.ddf\", \"start\": 182319, \"end\": 266153}, {\"filename\": \"/edge_base/blasphemer/scripts/weapons.ddf\", \"start\": 266153, \"end\": 276471}, {\"filename\": \"/edge_base/doom/graphics/CREDIT.lmp\", \"start\": 276471, \"end\": 395759}, {\"filename\": \"/edge_base/doom/graphics/ENDPIC.lmp\", \"start\": 395759, \"end\": 515047}, {\"filename\": \"/edge_base/doom/graphics/HELP1.lmp\", \"start\": 515047, \"end\": 634335}, {\"filename\": \"/edge_base/doom/graphics/INTERPIC.lmp\", \"start\": 634335, \"end\": 753623}, {\"filename\": \"/edge_base/doom/graphics/PFUB1.lmp\", \"start\": 753623, \"end\": 872911}, {\"filename\": \"/edge_base/doom/graphics/PFUB2.lmp\", \"start\": 872911, \"end\": 992199}, {\"filename\": \"/edge_base/doom/graphics/TITLEPIC.lmp\", \"start\": 992199, \"end\": 1111487}, {\"filename\": \"/edge_base/doom/graphics/VICTORY2.lmp\", \"start\": 1111487, \"end\": 1230775}, {\"filename\": \"/edge_base/doom/graphics/WIA20000.lmp\", \"start\": 1230775, \"end\": 1259895}, {\"filename\": \"/edge_base/doom/graphics/WIA20001.lmp\", \"start\": 1259895, \"end\": 1289015}, {\"filename\": \"/edge_base/doom/graphics/WIA20002.lmp\", \"start\": 1289015, \"end\": 1318135}, {\"filename\": \"/edge_base/doom/graphics/WIA20400.lmp\", \"start\": 1318135, \"end\": 1323733}, {\"filename\": \"/edge_base/doom/graphics/WIA20401.lmp\", \"start\": 1323733, \"end\": 1329331}, {\"filename\": \"/edge_base/doom/graphics/WIA20402.lmp\", \"start\": 1329331, \"end\": 1334929}, {\"filename\": \"/edge_base/doom/graphics/WIA20500.lmp\", \"start\": 1334929, \"end\": 1348137}, {\"filename\": \"/edge_base/doom/graphics/WIA20501.lmp\", \"start\": 1348137, \"end\": 1361345}, {\"filename\": \"/edge_base/doom/graphics/WIA20502.lmp\", \"start\": 1361345, \"end\": 1374553}, {\"filename\": \"/edge_base/doom/graphics/WIMAP0.lmp\", \"start\": 1374553, \"end\": 1493841}, {\"filename\": \"/edge_base/doom/graphics/WIMAP1.lmp\", \"start\": 1493841, \"end\": 1613129}, {\"filename\": \"/edge_base/doom/graphics/WIMAP2.lmp\", \"start\": 1613129, \"end\": 1732417}, {\"filename\": \"/edge_base/doom/scripts/images.ddf\", \"start\": 1732417, \"end\": 1734255}, {\"filename\": \"/edge_base/doom/textures/SKY1_B.png\", \"start\": 1734255, \"end\": 1748898}, {\"filename\": \"/edge_base/doom/textures/SKY1_E.png\", \"start\": 1748898, \"end\": 1772077}, {\"filename\": \"/edge_base/doom/textures/SKY1_N.png\", \"start\": 1772077, \"end\": 1794964}, {\"filename\": \"/edge_base/doom/textures/SKY1_S.png\", \"start\": 1794964, \"end\": 1817589}, {\"filename\": \"/edge_base/doom/textures/SKY1_T.png\", \"start\": 1817589, \"end\": 1844781}, {\"filename\": \"/edge_base/doom/textures/SKY1_W.png\", \"start\": 1844781, \"end\": 1867624}, {\"filename\": \"/edge_base/doom/textures/SKY2_B.png\", \"start\": 1867624, \"end\": 1884491}, {\"filename\": \"/edge_base/doom/textures/SKY2_E.png\", \"start\": 1884491, \"end\": 1911060}, {\"filename\": \"/edge_base/doom/textures/SKY2_N.png\", \"start\": 1911060, \"end\": 1937916}, {\"filename\": \"/edge_base/doom/textures/SKY2_S.png\", \"start\": 1937916, \"end\": 1965416}, {\"filename\": \"/edge_base/doom/textures/SKY2_T.png\", \"start\": 1965416, \"end\": 1989770}, {\"filename\": \"/edge_base/doom/textures/SKY2_W.png\", \"start\": 1989770, \"end\": 2015957}, {\"filename\": \"/edge_base/doom/textures/SKY3_B.png\", \"start\": 2015957, \"end\": 2027940}, {\"filename\": \"/edge_base/doom/textures/SKY3_E.png\", \"start\": 2027940, \"end\": 2047506}, {\"filename\": \"/edge_base/doom/textures/SKY3_N.png\", \"start\": 2047506, \"end\": 2067207}, {\"filename\": \"/edge_base/doom/textures/SKY3_S.png\", \"start\": 2067207, \"end\": 2087541}, {\"filename\": \"/edge_base/doom/textures/SKY3_T.png\", \"start\": 2087541, \"end\": 2111984}, {\"filename\": \"/edge_base/doom/textures/SKY3_W.png\", \"start\": 2111984, \"end\": 2131029}, {\"filename\": \"/edge_base/doom/textures/SKY4_B.png\", \"start\": 2131029, \"end\": 2169365}, {\"filename\": \"/edge_base/doom/textures/SKY4_E.png\", \"start\": 2169365, \"end\": 2181974}, {\"filename\": \"/edge_base/doom/textures/SKY4_N.png\", \"start\": 2181974, \"end\": 2193690}, {\"filename\": \"/edge_base/doom/textures/SKY4_S.png\", \"start\": 2193690, \"end\": 2205406}, {\"filename\": \"/edge_base/doom/textures/SKY4_T.png\", \"start\": 2205406, \"end\": 2243742}, {\"filename\": \"/edge_base/doom/textures/SKY4_W.png\", \"start\": 2243742, \"end\": 2256351}, {\"filename\": \"/edge_base/doom1/graphics/CREDIT.lmp\", \"start\": 2256351, \"end\": 2375639}, {\"filename\": \"/edge_base/doom1/graphics/HELP1.lmp\", \"start\": 2375639, \"end\": 2494927}, {\"filename\": \"/edge_base/doom1/graphics/HELP2.lmp\", \"start\": 2494927, \"end\": 2614215}, {\"filename\": \"/edge_base/doom1/graphics/TITLEPIC.lmp\", \"start\": 2614215, \"end\": 2733503}, {\"filename\": \"/edge_base/doom1/graphics/WIMAP0.lmp\", \"start\": 2733503, \"end\": 2852791}, {\"filename\": \"/edge_base/doom1/scripts/images.ddf\", \"start\": 2852791, \"end\": 2854643}, {\"filename\": \"/edge_base/doom1/textures/SKY1_B.png\", \"start\": 2854643, \"end\": 2869286}, {\"filename\": \"/edge_base/doom1/textures/SKY1_E.png\", \"start\": 2869286, \"end\": 2892465}, {\"filename\": \"/edge_base/doom1/textures/SKY1_N.png\", \"start\": 2892465, \"end\": 2915352}, {\"filename\": \"/edge_base/doom1/textures/SKY1_S.png\", \"start\": 2915352, \"end\": 2937977}, {\"filename\": \"/edge_base/doom1/textures/SKY1_T.png\", \"start\": 2937977, \"end\": 2965169}, {\"filename\": \"/edge_base/doom1/textures/SKY1_W.png\", \"start\": 2965169, \"end\": 2988012}, {\"filename\": \"/edge_base/doom2/graphics/BOSSBACK.lmp\", \"start\": 2988012, \"end\": 3107300}, {\"filename\": \"/edge_base/doom2/graphics/CREDIT.lmp\", \"start\": 3107300, \"end\": 3226588}, {\"filename\": \"/edge_base/doom2/graphics/HELP.lmp\", \"start\": 3226588, \"end\": 3345876}, {\"filename\": \"/edge_base/doom2/graphics/INTERPIC.lmp\", \"start\": 3345876, \"end\": 3465164}, {\"filename\": \"/edge_base/doom2/graphics/TITLEPIC.lmp\", \"start\": 3465164, \"end\": 3584452}, {\"filename\": \"/edge_base/doom2/scripts/images.ddf\", \"start\": 3584452, \"end\": 3585883}, {\"filename\": \"/edge_base/doom2/textures/SKY1_B.png\", \"start\": 3585883, \"end\": 3607163}, {\"filename\": \"/edge_base/doom2/textures/SKY1_E.png\", \"start\": 3607163, \"end\": 3624843}, {\"filename\": \"/edge_base/doom2/textures/SKY1_N.png\", \"start\": 3624843, \"end\": 3642523}, {\"filename\": \"/edge_base/doom2/textures/SKY1_S.png\", \"start\": 3642523, \"end\": 3660203}, {\"filename\": \"/edge_base/doom2/textures/SKY1_T.png\", \"start\": 3660203, \"end\": 3681483}, {\"filename\": \"/edge_base/doom2/textures/SKY1_W.png\", \"start\": 3681483, \"end\": 3699163}, {\"filename\": \"/edge_base/doom2/textures/SKY2_B.png\", \"start\": 3699163, \"end\": 3713086}, {\"filename\": \"/edge_base/doom2/textures/SKY2_E.png\", \"start\": 3713086, \"end\": 3738305}, {\"filename\": \"/edge_base/doom2/textures/SKY2_N.png\", \"start\": 3738305, \"end\": 3763537}, {\"filename\": \"/edge_base/doom2/textures/SKY2_S.png\", \"start\": 3763537, \"end\": 3788740}, {\"filename\": \"/edge_base/doom2/textures/SKY2_T.png\", \"start\": 3788740, \"end\": 3813492}, {\"filename\": \"/edge_base/doom2/textures/SKY2_W.png\", \"start\": 3813492, \"end\": 3838696}, {\"filename\": \"/edge_base/doom2/textures/SKY3_B.png\", \"start\": 3838696, \"end\": 3922266}, {\"filename\": \"/edge_base/doom2/textures/SKY3_E.png\", \"start\": 3922266, \"end\": 4017075}, {\"filename\": \"/edge_base/doom2/textures/SKY3_N.png\", \"start\": 4017075, \"end\": 4115846}, {\"filename\": \"/edge_base/doom2/textures/SKY3_S.png\", \"start\": 4115846, \"end\": 4214617}, {\"filename\": \"/edge_base/doom2/textures/SKY3_T.png\", \"start\": 4214617, \"end\": 4401108}, {\"filename\": \"/edge_base/doom2/textures/SKY3_W.png\", \"start\": 4401108, \"end\": 4495917}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARL.lmp\", \"start\": 4495917, \"end\": 4499328}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARR.lmp\", \"start\": 4499328, \"end\": 4502739}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT033.png\", \"start\": 4502739, \"end\": 4503084}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT034.png\", \"start\": 4503084, \"end\": 4503431}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT035.png\", \"start\": 4503431, \"end\": 4503862}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT036.png\", \"start\": 4503862, \"end\": 4504271}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT037.png\", \"start\": 4504271, \"end\": 4504692}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT038.png\", \"start\": 4504692, \"end\": 4505139}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT039.png\", \"start\": 4505139, \"end\": 4505460}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT040.png\", \"start\": 4505460, \"end\": 4505850}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT041.png\", \"start\": 4505850, \"end\": 4506239}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT042.png\", \"start\": 4506239, \"end\": 4506690}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT043.png\", \"start\": 4506690, \"end\": 4507049}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT044.png\", \"start\": 4507049, \"end\": 4507373}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT045.png\", \"start\": 4507373, \"end\": 4507686}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT046.png\", \"start\": 4507686, \"end\": 4507982}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT047.png\", \"start\": 4507982, \"end\": 4508405}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT048.png\", \"start\": 4508405, \"end\": 4508810}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT049.png\", \"start\": 4508810, \"end\": 4509190}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT050.png\", \"start\": 4509190, \"end\": 4509598}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT051.png\", \"start\": 4509598, \"end\": 4510061}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT052.png\", \"start\": 4510061, \"end\": 4510480}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT053.png\", \"start\": 4510480, \"end\": 4510888}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT054.png\", \"start\": 4510888, \"end\": 4511296}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT055.png\", \"start\": 4511296, \"end\": 4511700}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT056.png\", \"start\": 4511700, \"end\": 4512172}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT057.png\", \"start\": 4512172, \"end\": 4512587}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT058.png\", \"start\": 4512587, \"end\": 4512935}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT059.png\", \"start\": 4512935, \"end\": 4513296}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT060.png\", \"start\": 4513296, \"end\": 4513665}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT061.png\", \"start\": 4513665, \"end\": 4514006}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT062.png\", \"start\": 4514006, \"end\": 4514427}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT063.png\", \"start\": 4514427, \"end\": 4514830}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT064.png\", \"start\": 4514830, \"end\": 4515248}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT065.png\", \"start\": 4515248, \"end\": 4515751}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT066.png\", \"start\": 4515751, \"end\": 4516176}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT067.png\", \"start\": 4516176, \"end\": 4516579}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT068.png\", \"start\": 4516579, \"end\": 4517012}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT069.png\", \"start\": 4517012, \"end\": 4517428}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT070.png\", \"start\": 4517428, \"end\": 4517833}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT071.png\", \"start\": 4517833, \"end\": 4518252}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT072.png\", \"start\": 4518252, \"end\": 4518677}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT073.png\", \"start\": 4518677, \"end\": 4519079}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT074.png\", \"start\": 4519079, \"end\": 4519548}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT075.png\", \"start\": 4519548, \"end\": 4519982}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT076.png\", \"start\": 4519982, \"end\": 4520371}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT077.png\", \"start\": 4520371, \"end\": 4520826}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT078.png\", \"start\": 4520826, \"end\": 4521336}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT079.png\", \"start\": 4521336, \"end\": 4521746}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT080.png\", \"start\": 4521746, \"end\": 4522153}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT081.png\", \"start\": 4522153, \"end\": 4522570}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT082.png\", \"start\": 4522570, \"end\": 4522989}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT083.png\", \"start\": 4522989, \"end\": 4523415}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT084.png\", \"start\": 4523415, \"end\": 4523800}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT085.png\", \"start\": 4523800, \"end\": 4524215}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT086.png\", \"start\": 4524215, \"end\": 4524639}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT087.png\", \"start\": 4524639, \"end\": 4525084}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT088.png\", \"start\": 4525084, \"end\": 4525510}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT089.png\", \"start\": 4525510, \"end\": 4525975}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT090.png\", \"start\": 4525975, \"end\": 4526393}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT091.png\", \"start\": 4526393, \"end\": 4526780}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT092.png\", \"start\": 4526780, \"end\": 4527214}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT093.png\", \"start\": 4527214, \"end\": 4527610}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT094.png\", \"start\": 4527610, \"end\": 4527961}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT095.png\", \"start\": 4527961, \"end\": 4528274}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT096.png\", \"start\": 4528274, \"end\": 4528594}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT097.png\", \"start\": 4528594, \"end\": 4529052}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT098.png\", \"start\": 4529052, \"end\": 4529452}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT099.png\", \"start\": 4529452, \"end\": 4529886}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT100.png\", \"start\": 4529886, \"end\": 4530293}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT101.png\", \"start\": 4530293, \"end\": 4530689}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT102.png\", \"start\": 4530689, \"end\": 4531080}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT103.png\", \"start\": 4531080, \"end\": 4531524}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT104.png\", \"start\": 4531524, \"end\": 4531926}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT105.png\", \"start\": 4531926, \"end\": 4532306}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT106.png\", \"start\": 4532306, \"end\": 4532750}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT107.png\", \"start\": 4532750, \"end\": 4533219}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT108.png\", \"start\": 4533219, \"end\": 4533593}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT109.png\", \"start\": 4533593, \"end\": 4534014}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT110.png\", \"start\": 4534014, \"end\": 4534430}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT111.png\", \"start\": 4534430, \"end\": 4534879}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT112.png\", \"start\": 4534879, \"end\": 4535269}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT113.png\", \"start\": 4535269, \"end\": 4535727}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT114.png\", \"start\": 4535727, \"end\": 4536124}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT115.png\", \"start\": 4536124, \"end\": 4536535}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT116.png\", \"start\": 4536535, \"end\": 4536969}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT117.png\", \"start\": 4536969, \"end\": 4537371}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT118.png\", \"start\": 4537371, \"end\": 4537832}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT119.png\", \"start\": 4537832, \"end\": 4538249}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT120.png\", \"start\": 4538249, \"end\": 4538693}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT121.png\", \"start\": 4538693, \"end\": 4539086}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT122.png\", \"start\": 4539086, \"end\": 4539521}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT123.png\", \"start\": 4539521, \"end\": 4539911}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT124.png\", \"start\": 4539911, \"end\": 4540272}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT125.png\", \"start\": 4540272, \"end\": 4540660}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT126.png\", \"start\": 4540660, \"end\": 4541050}, {\"filename\": \"/edge_base/freedoom1/scripts/attacks.ddf\", \"start\": 4541050, \"end\": 4562206}, {\"filename\": \"/edge_base/freedoom1/scripts/fonts.ddf\", \"start\": 4562206, \"end\": 4562862}, {\"filename\": \"/edge_base/freedoom1/scripts/images.ddf\", \"start\": 4562862, \"end\": 4570631}, {\"filename\": \"/edge_base/freedoom1/scripts/language.ldf\", \"start\": 4570631, \"end\": 4582233}, {\"filename\": \"/edge_base/freedoom1/scripts/styles.ddf\", \"start\": 4582233, \"end\": 4587386}, {\"filename\": \"/edge_base/freedoom1/scripts/things.ddf\", \"start\": 4587386, \"end\": 4595778}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARL.lmp\", \"start\": 4595778, \"end\": 4599189}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARR.lmp\", \"start\": 4599189, \"end\": 4602600}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT033.png\", \"start\": 4602600, \"end\": 4602945}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT034.png\", \"start\": 4602945, \"end\": 4603292}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT035.png\", \"start\": 4603292, \"end\": 4603723}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT036.png\", \"start\": 4603723, \"end\": 4604132}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT037.png\", \"start\": 4604132, \"end\": 4604553}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT038.png\", \"start\": 4604553, \"end\": 4605000}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT039.png\", \"start\": 4605000, \"end\": 4605321}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT040.png\", \"start\": 4605321, \"end\": 4605711}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT041.png\", \"start\": 4605711, \"end\": 4606100}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT042.png\", \"start\": 4606100, \"end\": 4606551}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT043.png\", \"start\": 4606551, \"end\": 4606910}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT044.png\", \"start\": 4606910, \"end\": 4607234}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT045.png\", \"start\": 4607234, \"end\": 4607547}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT046.png\", \"start\": 4607547, \"end\": 4607843}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT047.png\", \"start\": 4607843, \"end\": 4608266}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT048.png\", \"start\": 4608266, \"end\": 4608671}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT049.png\", \"start\": 4608671, \"end\": 4609051}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT050.png\", \"start\": 4609051, \"end\": 4609459}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT051.png\", \"start\": 4609459, \"end\": 4609922}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT052.png\", \"start\": 4609922, \"end\": 4610341}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT053.png\", \"start\": 4610341, \"end\": 4610749}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT054.png\", \"start\": 4610749, \"end\": 4611157}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT055.png\", \"start\": 4611157, \"end\": 4611561}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT056.png\", \"start\": 4611561, \"end\": 4612033}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT057.png\", \"start\": 4612033, \"end\": 4612448}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT058.png\", \"start\": 4612448, \"end\": 4612796}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT059.png\", \"start\": 4612796, \"end\": 4613157}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT060.png\", \"start\": 4613157, \"end\": 4613526}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT061.png\", \"start\": 4613526, \"end\": 4613867}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT062.png\", \"start\": 4613867, \"end\": 4614288}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT063.png\", \"start\": 4614288, \"end\": 4614691}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT064.png\", \"start\": 4614691, \"end\": 4615109}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT065.png\", \"start\": 4615109, \"end\": 4615612}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT066.png\", \"start\": 4615612, \"end\": 4616037}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT067.png\", \"start\": 4616037, \"end\": 4616440}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT068.png\", \"start\": 4616440, \"end\": 4616873}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT069.png\", \"start\": 4616873, \"end\": 4617289}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT070.png\", \"start\": 4617289, \"end\": 4617694}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT071.png\", \"start\": 4617694, \"end\": 4618113}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT072.png\", \"start\": 4618113, \"end\": 4618538}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT073.png\", \"start\": 4618538, \"end\": 4618940}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT074.png\", \"start\": 4618940, \"end\": 4619409}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT075.png\", \"start\": 4619409, \"end\": 4619843}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT076.png\", \"start\": 4619843, \"end\": 4620232}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT077.png\", \"start\": 4620232, \"end\": 4620687}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT078.png\", \"start\": 4620687, \"end\": 4621197}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT079.png\", \"start\": 4621197, \"end\": 4621607}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT080.png\", \"start\": 4621607, \"end\": 4622014}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT081.png\", \"start\": 4622014, \"end\": 4622431}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT082.png\", \"start\": 4622431, \"end\": 4622850}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT083.png\", \"start\": 4622850, \"end\": 4623276}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT084.png\", \"start\": 4623276, \"end\": 4623661}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT085.png\", \"start\": 4623661, \"end\": 4624076}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT086.png\", \"start\": 4624076, \"end\": 4624500}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT087.png\", \"start\": 4624500, \"end\": 4624945}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT088.png\", \"start\": 4624945, \"end\": 4625371}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT089.png\", \"start\": 4625371, \"end\": 4625836}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT090.png\", \"start\": 4625836, \"end\": 4626254}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT091.png\", \"start\": 4626254, \"end\": 4626641}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT092.png\", \"start\": 4626641, \"end\": 4627075}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT093.png\", \"start\": 4627075, \"end\": 4627471}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT094.png\", \"start\": 4627471, \"end\": 4627822}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT095.png\", \"start\": 4627822, \"end\": 4628135}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT096.png\", \"start\": 4628135, \"end\": 4628455}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT097.png\", \"start\": 4628455, \"end\": 4628913}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT098.png\", \"start\": 4628913, \"end\": 4629313}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT099.png\", \"start\": 4629313, \"end\": 4629747}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT100.png\", \"start\": 4629747, \"end\": 4630154}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT101.png\", \"start\": 4630154, \"end\": 4630550}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT102.png\", \"start\": 4630550, \"end\": 4630941}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT103.png\", \"start\": 4630941, \"end\": 4631385}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT104.png\", \"start\": 4631385, \"end\": 4631787}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT105.png\", \"start\": 4631787, \"end\": 4632167}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT106.png\", \"start\": 4632167, \"end\": 4632611}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT107.png\", \"start\": 4632611, \"end\": 4633080}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT108.png\", \"start\": 4633080, \"end\": 4633454}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT109.png\", \"start\": 4633454, \"end\": 4633875}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT110.png\", \"start\": 4633875, \"end\": 4634291}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT111.png\", \"start\": 4634291, \"end\": 4634740}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT112.png\", \"start\": 4634740, \"end\": 4635130}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT113.png\", \"start\": 4635130, \"end\": 4635588}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT114.png\", \"start\": 4635588, \"end\": 4635985}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT115.png\", \"start\": 4635985, \"end\": 4636396}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT116.png\", \"start\": 4636396, \"end\": 4636830}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT117.png\", \"start\": 4636830, \"end\": 4637232}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT118.png\", \"start\": 4637232, \"end\": 4637693}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT119.png\", \"start\": 4637693, \"end\": 4638110}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT120.png\", \"start\": 4638110, \"end\": 4638554}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT121.png\", \"start\": 4638554, \"end\": 4638947}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT122.png\", \"start\": 4638947, \"end\": 4639382}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT123.png\", \"start\": 4639382, \"end\": 4639772}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT124.png\", \"start\": 4639772, \"end\": 4640133}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT125.png\", \"start\": 4640133, \"end\": 4640521}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT126.png\", \"start\": 4640521, \"end\": 4640911}, {\"filename\": \"/edge_base/freedoom2/scripts/attacks.ddf\", \"start\": 4640911, \"end\": 4662067}, {\"filename\": \"/edge_base/freedoom2/scripts/fonts.ddf\", \"start\": 4662067, \"end\": 4662723}, {\"filename\": \"/edge_base/freedoom2/scripts/images.ddf\", \"start\": 4662723, \"end\": 4670492}, {\"filename\": \"/edge_base/freedoom2/scripts/language.ldf\", \"start\": 4670492, \"end\": 4681955}, {\"filename\": \"/edge_base/freedoom2/scripts/styles.ddf\", \"start\": 4681955, \"end\": 4686736}, {\"filename\": \"/edge_base/freedoom2/scripts/things.ddf\", \"start\": 4686736, \"end\": 4695125}, {\"filename\": \"/edge_base/hacx/graphics/CREDIT.lmp\", \"start\": 4695125, \"end\": 4814413}, {\"filename\": \"/edge_base/hacx/graphics/HELP.lmp\", \"start\": 4814413, \"end\": 4933701}, {\"filename\": \"/edge_base/hacx/graphics/INTERPIC.lmp\", \"start\": 4933701, \"end\": 5052989}, {\"filename\": \"/edge_base/hacx/graphics/M_CONTRL.png\", \"start\": 5052989, \"end\": 5053594}, {\"filename\": \"/edge_base/hacx/graphics/M_EPISOD.lmp\", \"start\": 5053594, \"end\": 5057084}, {\"filename\": \"/edge_base/hacx/graphics/M_GAMEPL.png\", \"start\": 5057084, \"end\": 5057956}, {\"filename\": \"/edge_base/hacx/graphics/M_JKILL.lmp\", \"start\": 5057956, \"end\": 5062546}, {\"filename\": \"/edge_base/hacx/graphics/M_LOADG.lmp\", \"start\": 5062546, \"end\": 5064950}, {\"filename\": \"/edge_base/hacx/graphics/M_MSETTL.png\", \"start\": 5064950, \"end\": 5065714}, {\"filename\": \"/edge_base/hacx/graphics/M_NGAME.lmp\", \"start\": 5065714, \"end\": 5067841}, {\"filename\": \"/edge_base/hacx/graphics/M_RDTHIS.lmp\", \"start\": 5067841, \"end\": 5070350}, {\"filename\": \"/edge_base/hacx/graphics/M_SFXOPT.png\", \"start\": 5070350, \"end\": 5071058}, {\"filename\": \"/edge_base/hacx/graphics/M_VIDEO.png\", \"start\": 5071058, \"end\": 5071797}, {\"filename\": \"/edge_base/hacx/graphics/STBARL.lmp\", \"start\": 5071797, \"end\": 5075208}, {\"filename\": \"/edge_base/hacx/graphics/STBARR.lmp\", \"start\": 5075208, \"end\": 5078619}, {\"filename\": \"/edge_base/hacx/graphics/TITLEPIC.lmp\", \"start\": 5078619, \"end\": 5197907}, {\"filename\": \"/edge_base/hacx/scripts/anims.ddf\", \"start\": 5197907, \"end\": 5201079}, {\"filename\": \"/edge_base/hacx/scripts/attacks.ddf\", \"start\": 5201079, \"end\": 5208577}, {\"filename\": \"/edge_base/hacx/scripts/colmap.ddf\", \"start\": 5208577, \"end\": 5208855}, {\"filename\": \"/edge_base/hacx/scripts/fonts.ddf\", \"start\": 5208855, \"end\": 5209501}, {\"filename\": \"/edge_base/hacx/scripts/language.ldf\", \"start\": 5209501, \"end\": 5215501}, {\"filename\": \"/edge_base/hacx/scripts/lines.ddf\", \"start\": 5215501, \"end\": 5216389}, {\"filename\": \"/edge_base/hacx/scripts/playlist.ddf\", \"start\": 5216389, \"end\": 5217870}, {\"filename\": \"/edge_base/hacx/scripts/styles.ddf\", \"start\": 5217870, \"end\": 5218920}, {\"filename\": \"/edge_base/hacx/scripts/switch.ddf\", \"start\": 5218920, \"end\": 5222129}, {\"filename\": \"/edge_base/hacx/scripts/things.ddf\", \"start\": 5222129, \"end\": 5309635}, {\"filename\": \"/edge_base/hacx/scripts/weapons.ddf\", \"start\": 5309635, \"end\": 5314926}, {\"filename\": \"/edge_base/hacx/sprites/CHGFA0.lmp\", \"start\": 5314926, \"end\": 5329730}, {\"filename\": \"/edge_base/hacx/sprites/CHGFB0.lmp\", \"start\": 5329730, \"end\": 5344756}, {\"filename\": \"/edge_base/hacx/sprites/CHGGA0.lmp\", \"start\": 5344756, \"end\": 5359330}, {\"filename\": \"/edge_base/hacx/sprites/CHGGB0.lmp\", \"start\": 5359330, \"end\": 5365687}, {\"filename\": \"/edge_base/hacx/sprites/MISFA0.lmp\", \"start\": 5365687, \"end\": 5405959}, {\"filename\": \"/edge_base/hacx/sprites/MISFB0.lmp\", \"start\": 5405959, \"end\": 5441125}, {\"filename\": \"/edge_base/hacx/sprites/MISFC0.lmp\", \"start\": 5441125, \"end\": 5474278}, {\"filename\": \"/edge_base/hacx/sprites/MISFD0.lmp\", \"start\": 5474278, \"end\": 5510661}, {\"filename\": \"/edge_base/hacx/sprites/MISGA0.lmp\", \"start\": 5510661, \"end\": 5542191}, {\"filename\": \"/edge_base/hacx/sprites/MISGB0.lmp\", \"start\": 5542191, \"end\": 5577297}, {\"filename\": \"/edge_base/hacx/sprites/PISGD0.lmp\", \"start\": 5577297, \"end\": 5601440}, {\"filename\": \"/edge_base/hacx/sprites/PISGE0.lmp\", \"start\": 5601440, \"end\": 5631106}, {\"filename\": \"/edge_base/hacx/sprites/PLSGA0.lmp\", \"start\": 5631106, \"end\": 5641970}, {\"filename\": \"/edge_base/hacx/sprites/PLSGB0.lmp\", \"start\": 5641970, \"end\": 5655364}, {\"filename\": \"/edge_base/hacx/sprites/SAWGA0.lmp\", \"start\": 5655364, \"end\": 5669813}, {\"filename\": \"/edge_base/hacx/sprites/SAWGB0.lmp\", \"start\": 5669813, \"end\": 5683921}, {\"filename\": \"/edge_base/hacx/sprites/SAWGC0.lmp\", \"start\": 5683921, \"end\": 5693006}, {\"filename\": \"/edge_base/hacx/sprites/SAWGD0.lmp\", \"start\": 5693006, \"end\": 5702091}, {\"filename\": \"/edge_base/hacx/sprites/SHT2A0.lmp\", \"start\": 5702091, \"end\": 5717602}, {\"filename\": \"/edge_base/hacx/sprites/SHT2B0.lmp\", \"start\": 5717602, \"end\": 5733343}, {\"filename\": \"/edge_base/hacx/sprites/SHT2C0.lmp\", \"start\": 5733343, \"end\": 5749376}, {\"filename\": \"/edge_base/hacx/sprites/SHT2D0.lmp\", \"start\": 5749376, \"end\": 5765503}, {\"filename\": \"/edge_base/hacx/sprites/SHT2E0.lmp\", \"start\": 5765503, \"end\": 5781789}, {\"filename\": \"/edge_base/hacx/sprites/SHT2F0.lmp\", \"start\": 5781789, \"end\": 5797943}, {\"filename\": \"/edge_base/hacx/sprites/SHT2G0.lmp\", \"start\": 5797943, \"end\": 5813759}, {\"filename\": \"/edge_base/hacx/sprites/SHT2H0.lmp\", \"start\": 5813759, \"end\": 5829270}, {\"filename\": \"/edge_base/hacx/sprites/SHT2I0.lmp\", \"start\": 5829270, \"end\": 5844953}, {\"filename\": \"/edge_base/hacx/sprites/SHT2J0.lmp\", \"start\": 5844953, \"end\": 5861158}, {\"filename\": \"/edge_base/hacx/sprites/SHTFA0.lmp\", \"start\": 5861158, \"end\": 5870220}, {\"filename\": \"/edge_base/hacx/sprites/SHTFB0.lmp\", \"start\": 5870220, \"end\": 5879711}, {\"filename\": \"/edge_base/hacx/sprites/SHTGA0.lmp\", \"start\": 5879711, \"end\": 5888370}, {\"filename\": \"/edge_base/hacx/sprites/SHTGB0.lmp\", \"start\": 5888370, \"end\": 5901452}, {\"filename\": \"/edge_base/hacx/sprites/SHTGC0.lmp\", \"start\": 5901452, \"end\": 5920691}, {\"filename\": \"/edge_base/hacx/sprites/SHTGD0.lmp\", \"start\": 5920691, \"end\": 5938938}, {\"filename\": \"/edge_base/harmony/ENDOOM.bin\", \"start\": 5938938, \"end\": 5942938}, {\"filename\": \"/edge_base/harmony/graphics/BOSSBACK.lmp\", \"start\": 5942938, \"end\": 6033684}, {\"filename\": \"/edge_base/harmony/graphics/CREDIT.lmp\", \"start\": 6033684, \"end\": 6124430}, {\"filename\": \"/edge_base/harmony/graphics/HELP.lmp\", \"start\": 6124430, \"end\": 6213472}, {\"filename\": \"/edge_base/harmony/graphics/INTERPIC.lmp\", \"start\": 6213472, \"end\": 6304218}, {\"filename\": \"/edge_base/harmony/graphics/M_CONTRL.png\", \"start\": 6304218, \"end\": 6304681}, {\"filename\": \"/edge_base/harmony/graphics/M_EPISOD.lmp\", \"start\": 6304681, \"end\": 6307878}, {\"filename\": \"/edge_base/harmony/graphics/M_GAMEPL.png\", \"start\": 6307878, \"end\": 6308522}, {\"filename\": \"/edge_base/harmony/graphics/M_JKILL.lmp\", \"start\": 6308522, \"end\": 6309940}, {\"filename\": \"/edge_base/harmony/graphics/M_MSETTL.png\", \"start\": 6309940, \"end\": 6310478}, {\"filename\": \"/edge_base/harmony/graphics/M_NEWG.lmp\", \"start\": 6310478, \"end\": 6312852}, {\"filename\": \"/edge_base/harmony/graphics/M_NGAME.lmp\", \"start\": 6312852, \"end\": 6313802}, {\"filename\": \"/edge_base/harmony/graphics/M_OPTTTL.png\", \"start\": 6313802, \"end\": 6315114}, {\"filename\": \"/edge_base/harmony/graphics/M_RDTHIS.lmp\", \"start\": 6315114, \"end\": 6316973}, {\"filename\": \"/edge_base/harmony/graphics/M_SAVEG.lmp\", \"start\": 6316973, \"end\": 6317986}, {\"filename\": \"/edge_base/harmony/graphics/M_SFXOPT.png\", \"start\": 6317986, \"end\": 6318476}, {\"filename\": \"/edge_base/harmony/graphics/M_SVOL.png\", \"start\": 6318476, \"end\": 6319933}, {\"filename\": \"/edge_base/harmony/graphics/M_THERML.png\", \"start\": 6319933, \"end\": 6320873}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMM.png\", \"start\": 6320873, \"end\": 6321802}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMO.png\", \"start\": 6321802, \"end\": 6322717}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMR.png\", \"start\": 6322717, \"end\": 6323655}, {\"filename\": \"/edge_base/harmony/graphics/M_VIDEO.png\", \"start\": 6323655, \"end\": 6324166}, {\"filename\": \"/edge_base/harmony/graphics/STBARL.lmp\", \"start\": 6324166, \"end\": 6327577}, {\"filename\": \"/edge_base/harmony/graphics/STBARR.lmp\", \"start\": 6327577, \"end\": 6330988}, {\"filename\": \"/edge_base/harmony/graphics/STDISK.png\", \"start\": 6330988, \"end\": 6331965}, {\"filename\": \"/edge_base/harmony/graphics/TITLEPIC.lmp\", \"start\": 6331965, \"end\": 6421007}, {\"filename\": \"/edge_base/harmony/graphics/WICOLON.lmp\", \"start\": 6421007, \"end\": 6421109}, {\"filename\": \"/edge_base/harmony/graphics/WIF.lmp\", \"start\": 6421109, \"end\": 6421157}, {\"filename\": \"/edge_base/harmony/graphics/WIFRGS.lmp\", \"start\": 6421157, \"end\": 6422288}, {\"filename\": \"/edge_base/harmony/graphics/WIKILRS.lmp\", \"start\": 6422288, \"end\": 6422761}, {\"filename\": \"/edge_base/harmony/graphics/WIMINUS.lmp\", \"start\": 6422761, \"end\": 6422881}, {\"filename\": \"/edge_base/harmony/graphics/WIMSTT.lmp\", \"start\": 6422881, \"end\": 6423981}, {\"filename\": \"/edge_base/harmony/graphics/WINUM0.lmp\", \"start\": 6423981, \"end\": 6424231}, {\"filename\": \"/edge_base/harmony/graphics/WINUM1.lmp\", \"start\": 6424231, \"end\": 6424377}, {\"filename\": \"/edge_base/harmony/graphics/WINUM2.lmp\", \"start\": 6424377, \"end\": 6424663}, {\"filename\": \"/edge_base/harmony/graphics/WINUM3.lmp\", \"start\": 6424663, \"end\": 6424916}, {\"filename\": \"/edge_base/harmony/graphics/WINUM4.lmp\", \"start\": 6424916, \"end\": 6425140}, {\"filename\": \"/edge_base/harmony/graphics/WINUM5.lmp\", \"start\": 6425140, \"end\": 6425395}, {\"filename\": \"/edge_base/harmony/graphics/WINUM6.lmp\", \"start\": 6425395, \"end\": 6425657}, {\"filename\": \"/edge_base/harmony/graphics/WINUM7.lmp\", \"start\": 6425657, \"end\": 6425874}, {\"filename\": \"/edge_base/harmony/graphics/WINUM8.lmp\", \"start\": 6425874, \"end\": 6426136}, {\"filename\": \"/edge_base/harmony/graphics/WINUM9.lmp\", \"start\": 6426136, \"end\": 6426395}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTF.lmp\", \"start\": 6426395, \"end\": 6426635}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTI.lmp\", \"start\": 6426635, \"end\": 6428083}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTK.lmp\", \"start\": 6428083, \"end\": 6429428}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTS.lmp\", \"start\": 6429428, \"end\": 6430597}, {\"filename\": \"/edge_base/harmony/graphics/WIPAR.lmp\", \"start\": 6430597, \"end\": 6431574}, {\"filename\": \"/edge_base/harmony/graphics/WIPCNT.lmp\", \"start\": 6431574, \"end\": 6431823}, {\"filename\": \"/edge_base/harmony/graphics/WISCRT2.lmp\", \"start\": 6431823, \"end\": 6433598}, {\"filename\": \"/edge_base/harmony/graphics/WISUCKS.lmp\", \"start\": 6433598, \"end\": 6435307}, {\"filename\": \"/edge_base/harmony/graphics/WITIME.lmp\", \"start\": 6435307, \"end\": 6436154}, {\"filename\": \"/edge_base/harmony/graphics/WIVCTMS.lmp\", \"start\": 6436154, \"end\": 6436954}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN033.png\", \"start\": 6436954, \"end\": 6438117}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN034.png\", \"start\": 6438117, \"end\": 6439273}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN035.png\", \"start\": 6439273, \"end\": 6440442}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN036.png\", \"start\": 6440442, \"end\": 6441615}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN037.png\", \"start\": 6441615, \"end\": 6442791}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN038.png\", \"start\": 6442791, \"end\": 6443966}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN039.png\", \"start\": 6443966, \"end\": 6445113}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN040.png\", \"start\": 6445113, \"end\": 6446281}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN041.png\", \"start\": 6446281, \"end\": 6447449}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN042.png\", \"start\": 6447449, \"end\": 6448623}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN043.png\", \"start\": 6448623, \"end\": 6449793}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN044.png\", \"start\": 6449793, \"end\": 6450960}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN045.png\", \"start\": 6450960, \"end\": 6451858}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN046.png\", \"start\": 6451858, \"end\": 6453025}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN047.png\", \"start\": 6453025, \"end\": 6454198}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN048.png\", \"start\": 6454198, \"end\": 6455373}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN049.png\", \"start\": 6455373, \"end\": 6456539}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN050.png\", \"start\": 6456539, \"end\": 6457709}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN051.png\", \"start\": 6457709, \"end\": 6458884}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN052.png\", \"start\": 6458884, \"end\": 6460056}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN053.png\", \"start\": 6460056, \"end\": 6461230}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN054.png\", \"start\": 6461230, \"end\": 6462402}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN055.png\", \"start\": 6462402, \"end\": 6463575}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN056.png\", \"start\": 6463575, \"end\": 6464748}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN057.png\", \"start\": 6464748, \"end\": 6465918}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN058.png\", \"start\": 6465918, \"end\": 6467081}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN059.png\", \"start\": 6467081, \"end\": 6468239}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN060.png\", \"start\": 6468239, \"end\": 6469404}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN061.png\", \"start\": 6469404, \"end\": 6470556}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN062.png\", \"start\": 6470556, \"end\": 6471721}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN063.png\", \"start\": 6471721, \"end\": 6472893}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN064.png\", \"start\": 6472893, \"end\": 6474068}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN065.png\", \"start\": 6474068, \"end\": 6475241}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN066.png\", \"start\": 6475241, \"end\": 6476414}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN067.png\", \"start\": 6476414, \"end\": 6477586}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN068.png\", \"start\": 6477586, \"end\": 6478759}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN069.png\", \"start\": 6478759, \"end\": 6479662}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN070.png\", \"start\": 6479662, \"end\": 6480830}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN071.png\", \"start\": 6480830, \"end\": 6482002}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN072.png\", \"start\": 6482002, \"end\": 6483169}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN073.png\", \"start\": 6483169, \"end\": 6484333}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN074.png\", \"start\": 6484333, \"end\": 6485501}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN075.png\", \"start\": 6485501, \"end\": 6486677}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN076.png\", \"start\": 6486677, \"end\": 6487846}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN077.png\", \"start\": 6487846, \"end\": 6489026}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN078.png\", \"start\": 6489026, \"end\": 6490204}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN079.png\", \"start\": 6490204, \"end\": 6491378}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN080.png\", \"start\": 6491378, \"end\": 6492550}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN081.png\", \"start\": 6492550, \"end\": 6493726}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN082.png\", \"start\": 6493726, \"end\": 6494901}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN083.png\", \"start\": 6494901, \"end\": 6496075}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN084.png\", \"start\": 6496075, \"end\": 6497247}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN085.png\", \"start\": 6497247, \"end\": 6498418}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN086.png\", \"start\": 6498418, \"end\": 6499590}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN087.png\", \"start\": 6499590, \"end\": 6500768}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN088.png\", \"start\": 6500768, \"end\": 6501941}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN089.png\", \"start\": 6501941, \"end\": 6503114}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN090.png\", \"start\": 6503114, \"end\": 6504288}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN091.png\", \"start\": 6504288, \"end\": 6505455}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN092.png\", \"start\": 6505455, \"end\": 6506627}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN093.png\", \"start\": 6506627, \"end\": 6507794}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN094.png\", \"start\": 6507794, \"end\": 6508960}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN095.png\", \"start\": 6508960, \"end\": 6509858}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STCFN121.png\", \"start\": 6509858, \"end\": 6510748}, {\"filename\": \"/edge_base/harmony/graphics/harmony_font/STTPRCNT.png\", \"start\": 6510748, \"end\": 6511950}, {\"filename\": \"/edge_base/harmony/scripts/attacks.ddf\", \"start\": 6511950, \"end\": 6519838}, {\"filename\": \"/edge_base/harmony/scripts/coal_hud.ec\", \"start\": 6519838, \"end\": 6523749}, {\"filename\": \"/edge_base/harmony/scripts/colmap.ddf\", \"start\": 6523749, \"end\": 6524065}, {\"filename\": \"/edge_base/harmony/scripts/flats.ddf\", \"start\": 6524065, \"end\": 6524412}, {\"filename\": \"/edge_base/harmony/scripts/language.ldf\", \"start\": 6524412, \"end\": 6528186}, {\"filename\": \"/edge_base/harmony/scripts/levels.ddf\", \"start\": 6528186, \"end\": 6544475}, {\"filename\": \"/edge_base/harmony/scripts/playlist.ddf\", \"start\": 6544475, \"end\": 6545948}, {\"filename\": \"/edge_base/harmony/scripts/styles.ddf\", \"start\": 6545948, \"end\": 6547203}, {\"filename\": \"/edge_base/harmony/scripts/things.ddf\", \"start\": 6547203, \"end\": 6617223}, {\"filename\": \"/edge_base/harmony/scripts/weapons.ddf\", \"start\": 6617223, \"end\": 6621003}, {\"filename\": \"/edge_base/harmony/sprites/CELLA0.png\", \"start\": 6621003, \"end\": 6622745}, {\"filename\": \"/edge_base/harmony/sprites/CLIPA0.png\", \"start\": 6622745, \"end\": 6625431}, {\"filename\": \"/edge_base/harmony/sprites/ROCKA0.png\", \"start\": 6625431, \"end\": 6626862}, {\"filename\": \"/edge_base/harmony/sprites/SHELA0.png\", \"start\": 6626862, \"end\": 6629046}, {\"filename\": \"/edge_base/heretic/graphics/AUTOPAGE.png\", \"start\": 6629046, \"end\": 6671853}, {\"filename\": \"/edge_base/heretic/graphics/BARBACK.lmp\", \"start\": 6671853, \"end\": 6692367}, {\"filename\": \"/edge_base/heretic/graphics/CREDIT.lmp\", \"start\": 6692367, \"end\": 6811655}, {\"filename\": \"/edge_base/heretic/graphics/E2END.png\", \"start\": 6811655, \"end\": 6868079}, {\"filename\": \"/edge_base/heretic/graphics/FINAL1.lmp\", \"start\": 6868079, \"end\": 6987367}, {\"filename\": \"/edge_base/heretic/graphics/FINAL2.lmp\", \"start\": 6987367, \"end\": 7106655}, {\"filename\": \"/edge_base/heretic/graphics/HELP1.lmp\", \"start\": 7106655, \"end\": 7225943}, {\"filename\": \"/edge_base/heretic/graphics/HELP2.lmp\", \"start\": 7225943, \"end\": 7345231}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI1.lmp\", \"start\": 7345231, \"end\": 7348641}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI2.lmp\", \"start\": 7348641, \"end\": 7350628}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI3.lmp\", \"start\": 7350628, \"end\": 7354334}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI4.lmp\", \"start\": 7354334, \"end\": 7356510}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI5.lmp\", \"start\": 7356510, \"end\": 7360667}, {\"filename\": \"/edge_base/heretic/graphics/H_EPI6.png\", \"start\": 7360667, \"end\": 7361975}, {\"filename\": \"/edge_base/heretic/graphics/IN1.png\", \"start\": 7361975, \"end\": 7363162}, {\"filename\": \"/edge_base/heretic/graphics/LTFCTOP.lmp\", \"start\": 7363162, \"end\": 7363853}, {\"filename\": \"/edge_base/heretic/graphics/MAPE1.lmp\", \"start\": 7363853, \"end\": 7483141}, {\"filename\": \"/edge_base/heretic/graphics/MAPE2.lmp\", \"start\": 7483141, \"end\": 7602429}, {\"filename\": \"/edge_base/heretic/graphics/MAPE3.lmp\", \"start\": 7602429, \"end\": 7721717}, {\"filename\": \"/edge_base/heretic/graphics/M_DOOM.lmp\", \"start\": 7721717, \"end\": 7729462}, {\"filename\": \"/edge_base/heretic/graphics/M_EPISOD.lmp\", \"start\": 7729462, \"end\": 7732430}, {\"filename\": \"/edge_base/heretic/graphics/M_HURT.lmp\", \"start\": 7732430, \"end\": 7735462}, {\"filename\": \"/edge_base/heretic/graphics/M_JKILL.lmp\", \"start\": 7735462, \"end\": 7739801}, {\"filename\": \"/edge_base/heretic/graphics/M_LOADG.lmp\", \"start\": 7739801, \"end\": 7741769}, {\"filename\": \"/edge_base/heretic/graphics/M_LSCNTR.lmp\", \"start\": 7741769, \"end\": 7741961}, {\"filename\": \"/edge_base/heretic/graphics/M_LSLEFT.lmp\", \"start\": 7741961, \"end\": 7742153}, {\"filename\": \"/edge_base/heretic/graphics/M_LSRGHT.lmp\", \"start\": 7742153, \"end\": 7742345}, {\"filename\": \"/edge_base/heretic/graphics/M_NEWG.lmp\", \"start\": 7742345, \"end\": 7744262}, {\"filename\": \"/edge_base/heretic/graphics/M_NGAME.lmp\", \"start\": 7744262, \"end\": 7746179}, {\"filename\": \"/edge_base/heretic/graphics/M_NMARE.lmp\", \"start\": 7746179, \"end\": 7751505}, {\"filename\": \"/edge_base/heretic/graphics/M_OPTION.lmp\", \"start\": 7751505, \"end\": 7753009}, {\"filename\": \"/edge_base/heretic/graphics/M_OPTTTL.lmp\", \"start\": 7753009, \"end\": 7754513}, {\"filename\": \"/edge_base/heretic/graphics/M_QUITG.lmp\", \"start\": 7754513, \"end\": 7756333}, {\"filename\": \"/edge_base/heretic/graphics/M_RDTHIS.lmp\", \"start\": 7756333, \"end\": 7757941}, {\"filename\": \"/edge_base/heretic/graphics/M_ROUGH.lmp\", \"start\": 7757941, \"end\": 7761259}, {\"filename\": \"/edge_base/heretic/graphics/M_SAVEG.lmp\", \"start\": 7761259, \"end\": 7763281}, {\"filename\": \"/edge_base/heretic/graphics/M_SKILL.lmp\", \"start\": 7763281, \"end\": 7766508}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL00.png\", \"start\": 7766508, \"end\": 7767684}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL01.png\", \"start\": 7767684, \"end\": 7768893}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL02.png\", \"start\": 7768893, \"end\": 7770158}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL03.png\", \"start\": 7770158, \"end\": 7771470}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL04.png\", \"start\": 7771470, \"end\": 7772884}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL05.png\", \"start\": 7772884, \"end\": 7774198}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL06.png\", \"start\": 7774198, \"end\": 7775585}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL07.png\", \"start\": 7775585, \"end\": 7776859}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL08.png\", \"start\": 7776859, \"end\": 7777913}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL09.png\", \"start\": 7777913, \"end\": 7778911}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL10.png\", \"start\": 7778911, \"end\": 7780003}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL11.png\", \"start\": 7780003, \"end\": 7781260}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL12.png\", \"start\": 7781260, \"end\": 7782743}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL13.png\", \"start\": 7782743, \"end\": 7784093}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL14.png\", \"start\": 7784093, \"end\": 7785697}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL15.png\", \"start\": 7785697, \"end\": 7787198}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL16.png\", \"start\": 7787198, \"end\": 7788476}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL17.png\", \"start\": 7788476, \"end\": 7789708}, {\"filename\": \"/edge_base/heretic/graphics/M_THERML.lmp\", \"start\": 7789708, \"end\": 7789842}, {\"filename\": \"/edge_base/heretic/graphics/M_THERMM.lmp\", \"start\": 7789842, \"end\": 7790048}, {\"filename\": \"/edge_base/heretic/graphics/M_THERMO.lmp\", \"start\": 7790048, \"end\": 7790156}, {\"filename\": \"/edge_base/heretic/graphics/M_THERMR.lmp\", \"start\": 7790156, \"end\": 7790290}, {\"filename\": \"/edge_base/heretic/graphics/M_ULTRA.lmp\", \"start\": 7790290, \"end\": 7794545}, {\"filename\": \"/edge_base/heretic/graphics/NULL.png\", \"start\": 7794545, \"end\": 7795705}, {\"filename\": \"/edge_base/heretic/graphics/RTFCTOP.lmp\", \"start\": 7795705, \"end\": 7796454}, {\"filename\": \"/edge_base/heretic/graphics/STBARL.lmp\", \"start\": 7796454, \"end\": 7800695}, {\"filename\": \"/edge_base/heretic/graphics/STBARR.lmp\", \"start\": 7800695, \"end\": 7804936}, {\"filename\": \"/edge_base/heretic/graphics/TITLE.png\", \"start\": 7804936, \"end\": 7855559}, {\"filename\": \"/edge_base/heretic/graphics/WIENTER.png\", \"start\": 7855559, \"end\": 7856458}, {\"filename\": \"/edge_base/heretic/graphics/WIF.png\", \"start\": 7856458, \"end\": 7857204}, {\"filename\": \"/edge_base/heretic/graphics/__SKULL1.lmp\", \"start\": 7857204, \"end\": 7857580}, {\"filename\": \"/edge_base/heretic/graphics/__SKULL2.lmp\", \"start\": 7857580, \"end\": 7857956}, {\"filename\": \"/edge_base/heretic/scripts/anims.ddf\", \"start\": 7857956, \"end\": 7859679}, {\"filename\": \"/edge_base/heretic/scripts/attacks.ddf\", \"start\": 7859679, \"end\": 7901338}, {\"filename\": \"/edge_base/heretic/scripts/coal_hud.ec\", \"start\": 7901338, \"end\": 7916723}, {\"filename\": \"/edge_base/heretic/scripts/flats.ddf\", \"start\": 7916723, \"end\": 7917280}, {\"filename\": \"/edge_base/heretic/scripts/fonts.ddf\", \"start\": 7917280, \"end\": 7918328}, {\"filename\": \"/edge_base/heretic/scripts/games.ddf\", \"start\": 7918328, \"end\": 7920966}, {\"filename\": \"/edge_base/heretic/scripts/images.ddf\", \"start\": 7920966, \"end\": 7923328}, {\"filename\": \"/edge_base/heretic/scripts/language.ldf\", \"start\": 7923328, \"end\": 7932036}, {\"filename\": \"/edge_base/heretic/scripts/levels.ddf\", \"start\": 7932036, \"end\": 7945626}, {\"filename\": \"/edge_base/heretic/scripts/lines.ddf\", \"start\": 7945626, \"end\": 7950461}, {\"filename\": \"/edge_base/heretic/scripts/playlist.ddf\", \"start\": 7950461, \"end\": 7952617}, {\"filename\": \"/edge_base/heretic/scripts/rscript.rts\", \"start\": 7952617, \"end\": 7965665}, {\"filename\": \"/edge_base/heretic/scripts/sectors.ddf\", \"start\": 7965665, \"end\": 7967149}, {\"filename\": \"/edge_base/heretic/scripts/sounds.ddf\", \"start\": 7967149, \"end\": 7978351}, {\"filename\": \"/edge_base/heretic/scripts/styles.ddf\", \"start\": 7978351, \"end\": 7982896}, {\"filename\": \"/edge_base/heretic/scripts/switch.ddf\", \"start\": 7982896, \"end\": 7983351}, {\"filename\": \"/edge_base/heretic/scripts/things.ddf\", \"start\": 7983351, \"end\": 8067210}, {\"filename\": \"/edge_base/heretic/scripts/weapons.ddf\", \"start\": 8067210, \"end\": 8077531}, {\"filename\": \"/edge_base/heretic/sprites/STFFC0.lmp\", \"start\": 8077531, \"end\": 8094661}, {\"filename\": \"/edge_base/heretic/sprites/STFFH0.lmp\", \"start\": 8094661, \"end\": 8112707}, {\"filename\": \"/edge_base/plutonia/graphics/BOSSBACK.lmp\", \"start\": 8112707, \"end\": 8231995}, {\"filename\": \"/edge_base/plutonia/graphics/CREDIT.lmp\", \"start\": 8231995, \"end\": 8351283}, {\"filename\": \"/edge_base/plutonia/graphics/INTERPIC.lmp\", \"start\": 8351283, \"end\": 8470571}, {\"filename\": \"/edge_base/plutonia/graphics/TITLEPIC.lmp\", \"start\": 8470571, \"end\": 8589859}, {\"filename\": \"/edge_base/plutonia/scripts/images.ddf\", \"start\": 8589859, \"end\": 8591285}, {\"filename\": \"/edge_base/plutonia/scripts/language.ldf\", \"start\": 8591285, \"end\": 8594770}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_B.png\", \"start\": 8594770, \"end\": 8609801}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_E.png\", \"start\": 8609801, \"end\": 8624797}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_N.png\", \"start\": 8624797, \"end\": 8637876}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_S.png\", \"start\": 8637876, \"end\": 8650955}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_T.png\", \"start\": 8650955, \"end\": 8665986}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_W.png\", \"start\": 8665986, \"end\": 8680982}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_B.png\", \"start\": 8680982, \"end\": 8708917}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_E.png\", \"start\": 8708917, \"end\": 8720557}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_N.png\", \"start\": 8720557, \"end\": 8732466}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_S.png\", \"start\": 8732466, \"end\": 8744375}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_T.png\", \"start\": 8744375, \"end\": 8772310}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_W.png\", \"start\": 8772310, \"end\": 8783950}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_B.png\", \"start\": 8783950, \"end\": 8982700}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_E.png\", \"start\": 8982700, \"end\": 9073293}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_N.png\", \"start\": 9073293, \"end\": 9156677}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_S.png\", \"start\": 9156677, \"end\": 9240061}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_T.png\", \"start\": 9240061, \"end\": 9438811}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_W.png\", \"start\": 9438811, \"end\": 9529404}, {\"filename\": \"/edge_base/rekkr/colormaps/GRYREMAP.cmp\", \"start\": 9529404, \"end\": 9529660}, {\"filename\": \"/edge_base/rekkr/graphics/M_DOOM.lmp\", \"start\": 9529660, \"end\": 9554951}, {\"filename\": \"/edge_base/rekkr/graphics/M_EPISOD.lmp\", \"start\": 9554951, \"end\": 9572421}, {\"filename\": \"/edge_base/rekkr/graphics/M_HURT.lmp\", \"start\": 9572421, \"end\": 9574560}, {\"filename\": \"/edge_base/rekkr/graphics/M_JKILL.lmp\", \"start\": 9574560, \"end\": 9577319}, {\"filename\": \"/edge_base/rekkr/graphics/M_LGTTL.lmp\", \"start\": 9577319, \"end\": 9579506}, {\"filename\": \"/edge_base/rekkr/graphics/M_LOADG.lmp\", \"start\": 9579506, \"end\": 9581623}, {\"filename\": \"/edge_base/rekkr/graphics/M_LSCNTR.lmp\", \"start\": 9581623, \"end\": 9581815}, {\"filename\": \"/edge_base/rekkr/graphics/M_LSLEFT.lmp\", \"start\": 9581815, \"end\": 9582007}, {\"filename\": \"/edge_base/rekkr/graphics/M_LSRGHT.lmp\", \"start\": 9582007, \"end\": 9582199}, {\"filename\": \"/edge_base/rekkr/graphics/M_NEWG.lmp\", \"start\": 9582199, \"end\": 9585474}, {\"filename\": \"/edge_base/rekkr/graphics/M_NGAME.lmp\", \"start\": 9585474, \"end\": 9587522}, {\"filename\": \"/edge_base/rekkr/graphics/M_NMARE.lmp\", \"start\": 9587522, \"end\": 9589956}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTION.lmp\", \"start\": 9589956, \"end\": 9591793}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTTTL.lmp\", \"start\": 9591793, \"end\": 9593515}, {\"filename\": \"/edge_base/rekkr/graphics/M_QUITG.lmp\", \"start\": 9593515, \"end\": 9595583}, {\"filename\": \"/edge_base/rekkr/graphics/M_RDTHIS.lmp\", \"start\": 9595583, \"end\": 9596828}, {\"filename\": \"/edge_base/rekkr/graphics/M_ROUGH.lmp\", \"start\": 9596828, \"end\": 9599397}, {\"filename\": \"/edge_base/rekkr/graphics/M_SAVEG.lmp\", \"start\": 9599397, \"end\": 9601617}, {\"filename\": \"/edge_base/rekkr/graphics/M_SGTTL.lmp\", \"start\": 9601617, \"end\": 9603837}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKILL.lmp\", \"start\": 9603837, \"end\": 9631929}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL1.png\", \"start\": 9631929, \"end\": 9632517}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL2.png\", \"start\": 9632517, \"end\": 9633099}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL3.png\", \"start\": 9633099, \"end\": 9633694}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL4.png\", \"start\": 9633694, \"end\": 9634282}, {\"filename\": \"/edge_base/rekkr/graphics/M_ULTRA.lmp\", \"start\": 9634282, \"end\": 9636656}, {\"filename\": \"/edge_base/rekkr/graphics/STBARL.lmp\", \"start\": 9636656, \"end\": 9640067}, {\"filename\": \"/edge_base/rekkr/graphics/STBARR.lmp\", \"start\": 9640067, \"end\": 9643478}, {\"filename\": \"/edge_base/rekkr/graphics/WIENTER.lmp\", \"start\": 9643478, \"end\": 9645403}, {\"filename\": \"/edge_base/rekkr/graphics/WIF.lmp\", \"start\": 9645403, \"end\": 9647184}, {\"filename\": \"/edge_base/rekkr/graphics/WILV00.lmp\", \"start\": 9647184, \"end\": 9648783}, {\"filename\": \"/edge_base/rekkr/graphics/WILV01.lmp\", \"start\": 9648783, \"end\": 9649799}, {\"filename\": \"/edge_base/rekkr/graphics/WILV02.lmp\", \"start\": 9649799, \"end\": 9651826}, {\"filename\": \"/edge_base/rekkr/graphics/WILV03.lmp\", \"start\": 9651826, \"end\": 9654393}, {\"filename\": \"/edge_base/rekkr/graphics/WILV04.lmp\", \"start\": 9654393, \"end\": 9656108}, {\"filename\": \"/edge_base/rekkr/graphics/WILV05.lmp\", \"start\": 9656108, \"end\": 9657836}, {\"filename\": \"/edge_base/rekkr/graphics/WILV06.lmp\", \"start\": 9657836, \"end\": 9661220}, {\"filename\": \"/edge_base/rekkr/graphics/WILV07.lmp\", \"start\": 9661220, \"end\": 9664724}, {\"filename\": \"/edge_base/rekkr/graphics/WILV08.lmp\", \"start\": 9664724, \"end\": 9667567}, {\"filename\": \"/edge_base/rekkr/graphics/WILV10.lmp\", \"start\": 9667567, \"end\": 9668946}, {\"filename\": \"/edge_base/rekkr/graphics/WILV11.lmp\", \"start\": 9668946, \"end\": 9670582}, {\"filename\": \"/edge_base/rekkr/graphics/WILV12.lmp\", \"start\": 9670582, \"end\": 9672902}, {\"filename\": \"/edge_base/rekkr/graphics/WILV13.lmp\", \"start\": 9672902, \"end\": 9674112}, {\"filename\": \"/edge_base/rekkr/graphics/WILV14.lmp\", \"start\": 9674112, \"end\": 9676809}, {\"filename\": \"/edge_base/rekkr/graphics/WILV15.lmp\", \"start\": 9676809, \"end\": 9679896}, {\"filename\": \"/edge_base/rekkr/graphics/WILV16.lmp\", \"start\": 9679896, \"end\": 9681537}, {\"filename\": \"/edge_base/rekkr/graphics/WILV17.lmp\", \"start\": 9681537, \"end\": 9683425}, {\"filename\": \"/edge_base/rekkr/graphics/WILV18.lmp\", \"start\": 9683425, \"end\": 9684612}, {\"filename\": \"/edge_base/rekkr/graphics/WILV20.lmp\", \"start\": 9684612, \"end\": 9686573}, {\"filename\": \"/edge_base/rekkr/graphics/WILV21.lmp\", \"start\": 9686573, \"end\": 9689689}, {\"filename\": \"/edge_base/rekkr/graphics/WILV22.lmp\", \"start\": 9689689, \"end\": 9691450}, {\"filename\": \"/edge_base/rekkr/graphics/WILV23.lmp\", \"start\": 9691450, \"end\": 9694309}, {\"filename\": \"/edge_base/rekkr/graphics/WILV24.lmp\", \"start\": 9694309, \"end\": 9696022}, {\"filename\": \"/edge_base/rekkr/graphics/WILV25.lmp\", \"start\": 9696022, \"end\": 9698286}, {\"filename\": \"/edge_base/rekkr/graphics/WILV26.lmp\", \"start\": 9698286, \"end\": 9699519}, {\"filename\": \"/edge_base/rekkr/graphics/WILV27.lmp\", \"start\": 9699519, \"end\": 9700262}, {\"filename\": \"/edge_base/rekkr/graphics/WILV28.lmp\", \"start\": 9700262, \"end\": 9704040}, {\"filename\": \"/edge_base/rekkr/graphics/WILV30.lmp\", \"start\": 9704040, \"end\": 9705892}, {\"filename\": \"/edge_base/rekkr/graphics/WILV31.lmp\", \"start\": 9705892, \"end\": 9707530}, {\"filename\": \"/edge_base/rekkr/graphics/WILV32.lmp\", \"start\": 9707530, \"end\": 9708652}, {\"filename\": \"/edge_base/rekkr/graphics/WILV33.lmp\", \"start\": 9708652, \"end\": 9710991}, {\"filename\": \"/edge_base/rekkr/graphics/WILV34.lmp\", \"start\": 9710991, \"end\": 9712994}, {\"filename\": \"/edge_base/rekkr/graphics/WILV35.lmp\", \"start\": 9712994, \"end\": 9715128}, {\"filename\": \"/edge_base/rekkr/graphics/WILV36.lmp\", \"start\": 9715128, \"end\": 9718194}, {\"filename\": \"/edge_base/rekkr/graphics/WILV37.lmp\", \"start\": 9718194, \"end\": 9720189}, {\"filename\": \"/edge_base/rekkr/graphics/WILV38.lmp\", \"start\": 9720189, \"end\": 9722049}, {\"filename\": \"/edge_base/rekkr/scripts/anims.ddf\", \"start\": 9722049, \"end\": 9722193}, {\"filename\": \"/edge_base/rekkr/scripts/colmap.ddf\", \"start\": 9722193, \"end\": 9722567}, {\"filename\": \"/edge_base/rekkr/scripts/language.ldf\", \"start\": 9722567, \"end\": 9723377}, {\"filename\": \"/edge_base/rekkr/scripts/styles.ddf\", \"start\": 9723377, \"end\": 9727271}, {\"filename\": \"/edge_base/rekkr/scripts/things.ddf\", \"start\": 9727271, \"end\": 9727362}, {\"filename\": \"/edge_base/tnt/graphics/BOSSBACK.lmp\", \"start\": 9727362, \"end\": 9846650}, {\"filename\": \"/edge_base/tnt/graphics/CREDIT.lmp\", \"start\": 9846650, \"end\": 9965938}, {\"filename\": \"/edge_base/tnt/graphics/INTERPIC.lmp\", \"start\": 9965938, \"end\": 10085226}, {\"filename\": \"/edge_base/tnt/graphics/TITLEPIC.lmp\", \"start\": 10085226, \"end\": 10204514}, {\"filename\": \"/edge_base/tnt/scripts/images.ddf\", \"start\": 10204514, \"end\": 10205944}, {\"filename\": \"/edge_base/tnt/scripts/language.ldf\", \"start\": 10205944, \"end\": 10209723}, {\"filename\": \"/edge_base/tnt/textures/SKY1_B.png\", \"start\": 10209723, \"end\": 10225716}, {\"filename\": \"/edge_base/tnt/textures/SKY1_E.png\", \"start\": 10225716, \"end\": 10245182}, {\"filename\": \"/edge_base/tnt/textures/SKY1_N.png\", \"start\": 10245182, \"end\": 10262608}, {\"filename\": \"/edge_base/tnt/textures/SKY1_S.png\", \"start\": 10262608, \"end\": 10278515}, {\"filename\": \"/edge_base/tnt/textures/SKY1_T.png\", \"start\": 10278515, \"end\": 10318633}, {\"filename\": \"/edge_base/tnt/textures/SKY1_W.png\", \"start\": 10318633, \"end\": 10337957}, {\"filename\": \"/edge_base/tnt/textures/SKY2_B.png\", \"start\": 10337957, \"end\": 10339268}, {\"filename\": \"/edge_base/tnt/textures/SKY2_E.png\", \"start\": 10339268, \"end\": 10343791}, {\"filename\": \"/edge_base/tnt/textures/SKY2_N.png\", \"start\": 10343791, \"end\": 10345020}, {\"filename\": \"/edge_base/tnt/textures/SKY2_S.png\", \"start\": 10345020, \"end\": 10351237}, {\"filename\": \"/edge_base/tnt/textures/SKY2_T.png\", \"start\": 10351237, \"end\": 10355364}, {\"filename\": \"/edge_base/tnt/textures/SKY2_W.png\", \"start\": 10355364, \"end\": 10356906}, {\"filename\": \"/edge_base/tnt/textures/SKY3_B.png\", \"start\": 10356906, \"end\": 10381377}, {\"filename\": \"/edge_base/tnt/textures/SKY3_E.png\", \"start\": 10381377, \"end\": 10389079}, {\"filename\": \"/edge_base/tnt/textures/SKY3_N.png\", \"start\": 10389079, \"end\": 10396958}, {\"filename\": \"/edge_base/tnt/textures/SKY3_S.png\", \"start\": 10396958, \"end\": 10404306}, {\"filename\": \"/edge_base/tnt/textures/SKY3_T.png\", \"start\": 10404306, \"end\": 10428777}, {\"filename\": \"/edge_base/tnt/textures/SKY3_W.png\", \"start\": 10428777, \"end\": 10436118}, {\"filename\": \"/edge_defs/colormaps/AUTOMAPS.dat\", \"start\": 10436118, \"end\": 10436630}, {\"filename\": \"/edge_defs/colormaps/LAVAMAP.cmp\", \"start\": 10436630, \"end\": 10445334}, {\"filename\": \"/edge_defs/colormaps/NITEVMAP.cmp\", \"start\": 10445334, \"end\": 10445590}, {\"filename\": \"/edge_defs/colormaps/PLYRMAPS.dat\", \"start\": 10445590, \"end\": 10449430}, {\"filename\": \"/edge_defs/colormaps/SARGMAPS.dat\", \"start\": 10449430, \"end\": 10450966}, {\"filename\": \"/edge_defs/colormaps/SHADEMAP.cmp\", \"start\": 10450966, \"end\": 10451222}, {\"filename\": \"/edge_defs/colormaps/SKINMAPS.dat\", \"start\": 10451222, \"end\": 10452502}, {\"filename\": \"/edge_defs/colormaps/SLIMEMAP.cmp\", \"start\": 10452502, \"end\": 10461206}, {\"filename\": \"/edge_defs/colormaps/TEXTMAPS.dat\", \"start\": 10461206, \"end\": 10462998}, {\"filename\": \"/edge_defs/colormaps/TXTBLUES.dat\", \"start\": 10462998, \"end\": 10464278}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS1.dat\", \"start\": 10464278, \"end\": 10465558}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS2.dat\", \"start\": 10465558, \"end\": 10466838}, {\"filename\": \"/edge_defs/colormaps/TXTGREYS.dat\", \"start\": 10466838, \"end\": 10468118}, {\"filename\": \"/edge_defs/colormaps/TXTGRNS.dat\", \"start\": 10468118, \"end\": 10469398}, {\"filename\": \"/edge_defs/colormaps/TXTORANS.dat\", \"start\": 10469398, \"end\": 10470678}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS1.dat\", \"start\": 10470678, \"end\": 10471958}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS2.dat\", \"start\": 10471958, \"end\": 10473238}, {\"filename\": \"/edge_defs/colormaps/TXTPURPS.dat\", \"start\": 10473238, \"end\": 10474518}, {\"filename\": \"/edge_defs/colormaps/TXTREDS.dat\", \"start\": 10474518, \"end\": 10475798}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS1.dat\", \"start\": 10475798, \"end\": 10477078}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS2.dat\", \"start\": 10477078, \"end\": 10478358}, {\"filename\": \"/edge_defs/colormaps/WATERMAP.cmp\", \"start\": 10478358, \"end\": 10487062}, {\"filename\": \"/edge_defs/graphics/CREDIT2.lmp\", \"start\": 10487062, \"end\": 10553950}, {\"filename\": \"/edge_defs/graphics/DLITEXPN.png\", \"start\": 10553950, \"end\": 10568293}, {\"filename\": \"/edge_defs/graphics/EDGECBG1.jpg\", \"start\": 10568293, \"end\": 10631660}, {\"filename\": \"/edge_defs/graphics/EDGECRED.png\", \"start\": 10631660, \"end\": 10799259}, {\"filename\": \"/edge_defs/graphics/EDGETTL.lmp\", \"start\": 10799259, \"end\": 10866147}, {\"filename\": \"/edge_defs/graphics/ENDFONT.png\", \"start\": 10866147, \"end\": 10873251}, {\"filename\": \"/edge_defs/graphics/MOUSE.lmp\", \"start\": 10873251, \"end\": 10873434}, {\"filename\": \"/edge_defs/graphics/M_EPI5.lmp\", \"start\": 10873434, \"end\": 10874578}, {\"filename\": \"/edge_defs/graphics/M_EPI6.lmp\", \"start\": 10874578, \"end\": 10877608}, {\"filename\": \"/edge_defs/graphics/STBARL.lmp\", \"start\": 10877608, \"end\": 10881019}, {\"filename\": \"/edge_defs/graphics/STBARR.lmp\", \"start\": 10881019, \"end\": 10884430}, {\"filename\": \"/edge_defs/graphics/STCFN000.lmp\", \"start\": 10884430, \"end\": 10884574}, {\"filename\": \"/edge_defs/graphics/STCFN132.lmp\", \"start\": 10884574, \"end\": 10884716}, {\"filename\": \"/edge_defs/graphics/STCFN134.lmp\", \"start\": 10884716, \"end\": 10884843}, {\"filename\": \"/edge_defs/graphics/STCFN148.lmp\", \"start\": 10884843, \"end\": 10884978}, {\"filename\": \"/edge_defs/graphics/STDESYNC.lmp\", \"start\": 10884978, \"end\": 10887575}, {\"filename\": \"/edge_defs/graphics/STFB0.lmp\", \"start\": 10887575, \"end\": 10888983}, {\"filename\": \"/edge_defs/graphics/STFB1.lmp\", \"start\": 10888983, \"end\": 10890391}, {\"filename\": \"/edge_defs/graphics/STFB2.lmp\", \"start\": 10890391, \"end\": 10891799}, {\"filename\": \"/edge_defs/graphics/STFB3.lmp\", \"start\": 10891799, \"end\": 10893207}, {\"filename\": \"/edge_defs/graphics/STFB4.lmp\", \"start\": 10893207, \"end\": 10894615}, {\"filename\": \"/edge_defs/graphics/STFB5.lmp\", \"start\": 10894615, \"end\": 10896023}, {\"filename\": \"/edge_defs/graphics/STFB6.lmp\", \"start\": 10896023, \"end\": 10897431}, {\"filename\": \"/edge_defs/graphics/STFB7.lmp\", \"start\": 10897431, \"end\": 10898839}, {\"filename\": \"/edge_defs/graphics/STKEYS6.lmp\", \"start\": 10898839, \"end\": 10898959}, {\"filename\": \"/edge_defs/graphics/STKEYS7.lmp\", \"start\": 10898959, \"end\": 10899079}, {\"filename\": \"/edge_defs/graphics/STKEYS8.lmp\", \"start\": 10899079, \"end\": 10899199}, {\"filename\": \"/edge_defs/graphics/STPB0.lmp\", \"start\": 10899199, \"end\": 10900677}, {\"filename\": \"/edge_defs/graphics/STPB1.lmp\", \"start\": 10900677, \"end\": 10902155}, {\"filename\": \"/edge_defs/graphics/STPB2.lmp\", \"start\": 10902155, \"end\": 10903633}, {\"filename\": \"/edge_defs/graphics/STPB3.lmp\", \"start\": 10903633, \"end\": 10905111}, {\"filename\": \"/edge_defs/graphics/STPB4.lmp\", \"start\": 10905111, \"end\": 10906589}, {\"filename\": \"/edge_defs/graphics/STPB5.lmp\", \"start\": 10906589, \"end\": 10908067}, {\"filename\": \"/edge_defs/graphics/STPB6.lmp\", \"start\": 10908067, \"end\": 10909545}, {\"filename\": \"/edge_defs/graphics/STPB7.lmp\", \"start\": 10909545, \"end\": 10911023}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR1.png\", \"start\": 10911023, \"end\": 10911216}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR2.png\", \"start\": 10911216, \"end\": 10911401}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR3.png\", \"start\": 10911401, \"end\": 10911586}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR4.png\", \"start\": 10911586, \"end\": 10911773}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR5.png\", \"start\": 10911773, \"end\": 10912039}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR6.png\", \"start\": 10912039, \"end\": 10912380}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR7.png\", \"start\": 10912380, \"end\": 10912674}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR8.png\", \"start\": 10912674, \"end\": 10914058}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR9.png\", \"start\": 10914058, \"end\": 10914477}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN001.png\", \"start\": 10914477, \"end\": 10914834}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN002.png\", \"start\": 10914834, \"end\": 10915179}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN003.png\", \"start\": 10915179, \"end\": 10915535}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN004.png\", \"start\": 10915535, \"end\": 10915883}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN005.png\", \"start\": 10915883, \"end\": 10916222}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN006.png\", \"start\": 10916222, \"end\": 10916540}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN007.png\", \"start\": 10916540, \"end\": 10916890}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN008.png\", \"start\": 10916890, \"end\": 10917246}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN009.png\", \"start\": 10917246, \"end\": 10917525}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN010.png\", \"start\": 10917525, \"end\": 10917850}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN011.png\", \"start\": 10917850, \"end\": 10918219}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN012.png\", \"start\": 10918219, \"end\": 10918543}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN013.png\", \"start\": 10918543, \"end\": 10918909}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN014.png\", \"start\": 10918909, \"end\": 10919265}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN015.png\", \"start\": 10919265, \"end\": 10919638}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN016.png\", \"start\": 10919638, \"end\": 10919972}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN017.png\", \"start\": 10919972, \"end\": 10920347}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN018.png\", \"start\": 10920347, \"end\": 10920705}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN019.png\", \"start\": 10920705, \"end\": 10921056}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN020.png\", \"start\": 10921056, \"end\": 10921375}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN021.png\", \"start\": 10921375, \"end\": 10921721}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN022.png\", \"start\": 10921721, \"end\": 10922050}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN023.png\", \"start\": 10922050, \"end\": 10922405}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN024.png\", \"start\": 10922405, \"end\": 10922756}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN025.png\", \"start\": 10922756, \"end\": 10923105}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN026.png\", \"start\": 10923105, \"end\": 10923443}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN027.png\", \"start\": 10923443, \"end\": 10923732}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN028.png\", \"start\": 10923732, \"end\": 10924046}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN029.png\", \"start\": 10924046, \"end\": 10924289}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN030.png\", \"start\": 10924289, \"end\": 10924532}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN031.png\", \"start\": 10924532, \"end\": 10924798}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN032.png\", \"start\": 10924798, \"end\": 10925031}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN033.png\", \"start\": 10925031, \"end\": 10925369}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN034.png\", \"start\": 10925369, \"end\": 10925662}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN035.png\", \"start\": 10925662, \"end\": 10926000}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN036.png\", \"start\": 10926000, \"end\": 10926329}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN037.png\", \"start\": 10926329, \"end\": 10926658}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN038.png\", \"start\": 10926658, \"end\": 10926991}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN039.png\", \"start\": 10926991, \"end\": 10927327}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN040.png\", \"start\": 10927327, \"end\": 10927624}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN041.png\", \"start\": 10927624, \"end\": 10927964}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN042.png\", \"start\": 10927964, \"end\": 10928304}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN043.png\", \"start\": 10928304, \"end\": 10928539}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN044.png\", \"start\": 10928539, \"end\": 10928859}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN045.png\", \"start\": 10928859, \"end\": 10929143}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN046.png\", \"start\": 10929143, \"end\": 10929473}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN047.png\", \"start\": 10929473, \"end\": 10929811}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN048.png\", \"start\": 10929811, \"end\": 10930126}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN049.png\", \"start\": 10930126, \"end\": 10930455}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN050.png\", \"start\": 10930455, \"end\": 10930777}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN051.png\", \"start\": 10930777, \"end\": 10931094}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN052.png\", \"start\": 10931094, \"end\": 10931433}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN053.png\", \"start\": 10931433, \"end\": 10931753}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN054.png\", \"start\": 10931753, \"end\": 10932027}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN055.png\", \"start\": 10932027, \"end\": 10932334}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN056.png\", \"start\": 10932334, \"end\": 10932679}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN057.png\", \"start\": 10932679, \"end\": 10932977}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN058.png\", \"start\": 10932977, \"end\": 10933331}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN059.png\", \"start\": 10933331, \"end\": 10933670}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN060.png\", \"start\": 10933670, \"end\": 10934009}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN061.png\", \"start\": 10934009, \"end\": 10934333}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN062.png\", \"start\": 10934333, \"end\": 10934673}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN063.png\", \"start\": 10934673, \"end\": 10934998}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN064.png\", \"start\": 10934998, \"end\": 10935337}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN065.png\", \"start\": 10935337, \"end\": 10935643}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN066.png\", \"start\": 10935643, \"end\": 10935977}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN067.png\", \"start\": 10935977, \"end\": 10936309}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN068.png\", \"start\": 10936309, \"end\": 10936657}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN069.png\", \"start\": 10936657, \"end\": 10936998}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN070.png\", \"start\": 10936998, \"end\": 10937323}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN071.png\", \"start\": 10937323, \"end\": 10937655}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN072.png\", \"start\": 10937655, \"end\": 10937984}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN073.png\", \"start\": 10937984, \"end\": 10938218}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN074.png\", \"start\": 10938218, \"end\": 10938464}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN075.png\", \"start\": 10938464, \"end\": 10938790}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN076.png\", \"start\": 10938790, \"end\": 10939077}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN077.png\", \"start\": 10939077, \"end\": 10939395}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN078.png\", \"start\": 10939395, \"end\": 10939715}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN079.png\", \"start\": 10939715, \"end\": 10940026}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN080.png\", \"start\": 10940026, \"end\": 10940343}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN081.png\", \"start\": 10940343, \"end\": 10940658}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN082.png\", \"start\": 10940658, \"end\": 10940960}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN083.png\", \"start\": 10940960, \"end\": 10941288}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN084.png\", \"start\": 10941288, \"end\": 10941620}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN085.png\", \"start\": 10941620, \"end\": 10941868}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN086.png\", \"start\": 10941868, \"end\": 10942119}, {\"filename\": \"/edge_defs/graphics/overlays/ECSCNLN1.png\", \"start\": 10942119, \"end\": 10942283}, {\"filename\": \"/edge_defs/graphics/overlays/ECSCNLN2.png\", \"start\": 10942283, \"end\": 10942457}, {\"filename\": \"/edge_defs/graphics/overlays/ECSCNLN3.png\", \"start\": 10942457, \"end\": 10949768}, {\"filename\": \"/edge_defs/graphics/overlays/ECSCNLN4.png\", \"start\": 10949768, \"end\": 10957071}, {\"filename\": \"/edge_defs/graphics/overlays/ECSCNLN5.png\", \"start\": 10957071, \"end\": 10964406}, {\"filename\": \"/edge_defs/scripts/anims.ddf\", \"start\": 10964406, \"end\": 10966596}, {\"filename\": \"/edge_defs/scripts/attacks.ddf\", \"start\": 10966596, \"end\": 10989659}, {\"filename\": \"/edge_defs/scripts/coal_api.ec\", \"start\": 10989659, \"end\": 11004353}, {\"filename\": \"/edge_defs/scripts/coal_hud.ec\", \"start\": 11004353, \"end\": 11022375}, {\"filename\": \"/edge_defs/scripts/colmap.ddf\", \"start\": 11022375, \"end\": 11026594}, {\"filename\": \"/edge_defs/scripts/flats.ddf\", \"start\": 11026594, \"end\": 11031780}, {\"filename\": \"/edge_defs/scripts/fonts.ddf\", \"start\": 11031780, \"end\": 11033497}, {\"filename\": \"/edge_defs/scripts/games.ddf\", \"start\": 11033497, \"end\": 11038037}, {\"filename\": \"/edge_defs/scripts/images.ddf\", \"start\": 11038037, \"end\": 11052609}, {\"filename\": \"/edge_defs/scripts/language.ldf\", \"start\": 11052609, \"end\": 11171144}, {\"filename\": \"/edge_defs/scripts/levels.ddf\", \"start\": 11171144, \"end\": 11189387}, {\"filename\": \"/edge_defs/scripts/lines.ddf\", \"start\": 11189387, \"end\": 11287059}, {\"filename\": \"/edge_defs/scripts/playlist.ddf\", \"start\": 11287059, \"end\": 11289977}, {\"filename\": \"/edge_defs/scripts/rscript.rts\", \"start\": 11289977, \"end\": 11291668}, {\"filename\": \"/edge_defs/scripts/sectors.ddf\", \"start\": 11291668, \"end\": 11305505}, {\"filename\": \"/edge_defs/scripts/sounds.ddf\", \"start\": 11305505, \"end\": 11317100}, {\"filename\": \"/edge_defs/scripts/styles.ddf\", \"start\": 11317100, \"end\": 11323246}, {\"filename\": \"/edge_defs/scripts/switch.ddf\", \"start\": 11323246, \"end\": 11327550}, {\"filename\": \"/edge_defs/scripts/things.ddf\", \"start\": 11327550, \"end\": 11476877}, {\"filename\": \"/edge_defs/scripts/wadfixes.ddf\", \"start\": 11476877, \"end\": 11477674}, {\"filename\": \"/edge_defs/scripts/weapons.ddf\", \"start\": 11477674, \"end\": 11483368}, {\"filename\": \"/edge_defs/sounds/DPBAREXP.lmp\", \"start\": 11483368, \"end\": 11483451}, {\"filename\": \"/edge_defs/sounds/DPBDCLS.lmp\", \"start\": 11483451, \"end\": 11483497}, {\"filename\": \"/edge_defs/sounds/DPBDOPN.lmp\", \"start\": 11483497, \"end\": 11483538}, {\"filename\": \"/edge_defs/sounds/DPBFG.lmp\", \"start\": 11483538, \"end\": 11483726}, {\"filename\": \"/edge_defs/sounds/DPBGACT.lmp\", \"start\": 11483726, \"end\": 11483825}, {\"filename\": \"/edge_defs/sounds/DPBGDTH1.lmp\", \"start\": 11483825, \"end\": 11483914}, {\"filename\": \"/edge_defs/sounds/DPBGDTH2.lmp\", \"start\": 11483914, \"end\": 11484003}, {\"filename\": \"/edge_defs/sounds/DPBGSIT1.lmp\", \"start\": 11484003, \"end\": 11484114}, {\"filename\": \"/edge_defs/sounds/DPBGSIT2.lmp\", \"start\": 11484114, \"end\": 11484225}, {\"filename\": \"/edge_defs/sounds/DPBOSCUB.lmp\", \"start\": 11484225, \"end\": 11484261}, {\"filename\": \"/edge_defs/sounds/DPBOSDTH.lmp\", \"start\": 11484261, \"end\": 11484540}, {\"filename\": \"/edge_defs/sounds/DPBOSPIT.lmp\", \"start\": 11484540, \"end\": 11484585}, {\"filename\": \"/edge_defs/sounds/DPBOSPN.lmp\", \"start\": 11484585, \"end\": 11484623}, {\"filename\": \"/edge_defs/sounds/DPBOSSIT.lmp\", \"start\": 11484623, \"end\": 11484757}, {\"filename\": \"/edge_defs/sounds/DPBRSDTH.lmp\", \"start\": 11484757, \"end\": 11484869}, {\"filename\": \"/edge_defs/sounds/DPBRSSIT.lmp\", \"start\": 11484869, \"end\": 11484977}, {\"filename\": \"/edge_defs/sounds/DPBSPACT.lmp\", \"start\": 11484977, \"end\": 11485033}, {\"filename\": \"/edge_defs/sounds/DPBSPDTH.lmp\", \"start\": 11485033, \"end\": 11485124}, {\"filename\": \"/edge_defs/sounds/DPBSPSIT.lmp\", \"start\": 11485124, \"end\": 11485263}, {\"filename\": \"/edge_defs/sounds/DPBSPWLK.lmp\", \"start\": 11485263, \"end\": 11485308}, {\"filename\": \"/edge_defs/sounds/DPCACDTH.lmp\", \"start\": 11485308, \"end\": 11485397}, {\"filename\": \"/edge_defs/sounds/DPCACSIT.lmp\", \"start\": 11485397, \"end\": 11485509}, {\"filename\": \"/edge_defs/sounds/DPCLAW.lmp\", \"start\": 11485509, \"end\": 11485555}, {\"filename\": \"/edge_defs/sounds/DPCYBDTH.lmp\", \"start\": 11485555, \"end\": 11485692}, {\"filename\": \"/edge_defs/sounds/DPCYBSIT.lmp\", \"start\": 11485692, \"end\": 11485841}, {\"filename\": \"/edge_defs/sounds/DPDBCLS.lmp\", \"start\": 11485841, \"end\": 11485852}, {\"filename\": \"/edge_defs/sounds/DPDBLOAD.lmp\", \"start\": 11485852, \"end\": 11485863}, {\"filename\": \"/edge_defs/sounds/DPDBOPN.lmp\", \"start\": 11485863, \"end\": 11485874}, {\"filename\": \"/edge_defs/sounds/DPDMACT.lmp\", \"start\": 11485874, \"end\": 11485901}, {\"filename\": \"/edge_defs/sounds/DPDMPAIN.lmp\", \"start\": 11485901, \"end\": 11485942}, {\"filename\": \"/edge_defs/sounds/DPDORCLS.lmp\", \"start\": 11485942, \"end\": 11486013}, {\"filename\": \"/edge_defs/sounds/DPDOROPN.lmp\", \"start\": 11486013, \"end\": 11486086}, {\"filename\": \"/edge_defs/sounds/DPDSHTGN.lmp\", \"start\": 11486086, \"end\": 11486129}, {\"filename\": \"/edge_defs/sounds/DPFIRSHT.lmp\", \"start\": 11486129, \"end\": 11486164}, {\"filename\": \"/edge_defs/sounds/DPFIRXPL.lmp\", \"start\": 11486164, \"end\": 11486181}, {\"filename\": \"/edge_defs/sounds/DPFLAME.lmp\", \"start\": 11486181, \"end\": 11486258}, {\"filename\": \"/edge_defs/sounds/DPFLAMST.lmp\", \"start\": 11486258, \"end\": 11486272}, {\"filename\": \"/edge_defs/sounds/DPGETPOW.lmp\", \"start\": 11486272, \"end\": 11486409}, {\"filename\": \"/edge_defs/sounds/DPHOOF.lmp\", \"start\": 11486409, \"end\": 11486489}, {\"filename\": \"/edge_defs/sounds/DPITEMUP.lmp\", \"start\": 11486489, \"end\": 11486576}, {\"filename\": \"/edge_defs/sounds/DPITMBK.lmp\", \"start\": 11486576, \"end\": 11486661}, {\"filename\": \"/edge_defs/sounds/DPKEENDT.lmp\", \"start\": 11486661, \"end\": 11486767}, {\"filename\": \"/edge_defs/sounds/DPKEENPN.lmp\", \"start\": 11486767, \"end\": 11486823}, {\"filename\": \"/edge_defs/sounds/DPKNTDTH.lmp\", \"start\": 11486823, \"end\": 11486946}, {\"filename\": \"/edge_defs/sounds/DPKNTSIT.lmp\", \"start\": 11486946, \"end\": 11487012}, {\"filename\": \"/edge_defs/sounds/DPMANATK.lmp\", \"start\": 11487012, \"end\": 11487078}, {\"filename\": \"/edge_defs/sounds/DPMANDTH.lmp\", \"start\": 11487078, \"end\": 11487156}, {\"filename\": \"/edge_defs/sounds/DPMANSIT.lmp\", \"start\": 11487156, \"end\": 11487253}, {\"filename\": \"/edge_defs/sounds/DPMETAL.lmp\", \"start\": 11487253, \"end\": 11487272}, {\"filename\": \"/edge_defs/sounds/DPMNPAIN.lmp\", \"start\": 11487272, \"end\": 11487332}, {\"filename\": \"/edge_defs/sounds/DPNOWAY.lmp\", \"start\": 11487332, \"end\": 11487373}, {\"filename\": \"/edge_defs/sounds/DPOOF.lmp\", \"start\": 11487373, \"end\": 11487392}, {\"filename\": \"/edge_defs/sounds/DPPDIEHI.lmp\", \"start\": 11487392, \"end\": 11487470}, {\"filename\": \"/edge_defs/sounds/DPPEDTH.lmp\", \"start\": 11487470, \"end\": 11487579}, {\"filename\": \"/edge_defs/sounds/DPPEPAIN.lmp\", \"start\": 11487579, \"end\": 11487629}, {\"filename\": \"/edge_defs/sounds/DPPESIT.lmp\", \"start\": 11487629, \"end\": 11487746}, {\"filename\": \"/edge_defs/sounds/DPPISTOL.lmp\", \"start\": 11487746, \"end\": 11487764}, {\"filename\": \"/edge_defs/sounds/DPPLASMA.lmp\", \"start\": 11487764, \"end\": 11487806}, {\"filename\": \"/edge_defs/sounds/DPPLDETH.lmp\", \"start\": 11487806, \"end\": 11487955}, {\"filename\": \"/edge_defs/sounds/DPPLPAIN.lmp\", \"start\": 11487955, \"end\": 11487985}, {\"filename\": \"/edge_defs/sounds/DPPODTH1.lmp\", \"start\": 11487985, \"end\": 11488074}, {\"filename\": \"/edge_defs/sounds/DPPODTH2.lmp\", \"start\": 11488074, \"end\": 11488163}, {\"filename\": \"/edge_defs/sounds/DPPODTH3.lmp\", \"start\": 11488163, \"end\": 11488252}, {\"filename\": \"/edge_defs/sounds/DPPOPAIN.lmp\", \"start\": 11488252, \"end\": 11488290}, {\"filename\": \"/edge_defs/sounds/DPPOSACT.lmp\", \"start\": 11488290, \"end\": 11488320}, {\"filename\": \"/edge_defs/sounds/DPPOSIT1.lmp\", \"start\": 11488320, \"end\": 11488431}, {\"filename\": \"/edge_defs/sounds/DPPOSIT2.lmp\", \"start\": 11488431, \"end\": 11488542}, {\"filename\": \"/edge_defs/sounds/DPPOSIT3.lmp\", \"start\": 11488542, \"end\": 11488653}, {\"filename\": \"/edge_defs/sounds/DPPSTART.lmp\", \"start\": 11488653, \"end\": 11488694}, {\"filename\": \"/edge_defs/sounds/DPPSTOP.lmp\", \"start\": 11488694, \"end\": 11488711}, {\"filename\": \"/edge_defs/sounds/DPPUNCH.lmp\", \"start\": 11488711, \"end\": 11488748}, {\"filename\": \"/edge_defs/sounds/DPRADIO.lmp\", \"start\": 11488748, \"end\": 11488800}, {\"filename\": \"/edge_defs/sounds/DPRLAUNC.lmp\", \"start\": 11488800, \"end\": 11488863}, {\"filename\": \"/edge_defs/sounds/DPRXPLOD.lmp\", \"start\": 11488863, \"end\": 11489035}, {\"filename\": \"/edge_defs/sounds/DPSAWFUL.lmp\", \"start\": 11489035, \"end\": 11489063}, {\"filename\": \"/edge_defs/sounds/DPSAWHIT.lmp\", \"start\": 11489063, \"end\": 11489091}, {\"filename\": \"/edge_defs/sounds/DPSAWIDL.lmp\", \"start\": 11489091, \"end\": 11489096}, {\"filename\": \"/edge_defs/sounds/DPSAWUP.lmp\", \"start\": 11489096, \"end\": 11489184}, {\"filename\": \"/edge_defs/sounds/DPSGCOCK.lmp\", \"start\": 11489184, \"end\": 11489247}, {\"filename\": \"/edge_defs/sounds/DPSGTATK.lmp\", \"start\": 11489247, \"end\": 11489321}, {\"filename\": \"/edge_defs/sounds/DPSGTDTH.lmp\", \"start\": 11489321, \"end\": 11489410}, {\"filename\": \"/edge_defs/sounds/DPSGTSIT.lmp\", \"start\": 11489410, \"end\": 11489521}, {\"filename\": \"/edge_defs/sounds/DPSHOTGN.lmp\", \"start\": 11489521, \"end\": 11489563}, {\"filename\": \"/edge_defs/sounds/DPSKEACT.lmp\", \"start\": 11489563, \"end\": 11489603}, {\"filename\": \"/edge_defs/sounds/DPSKEATK.lmp\", \"start\": 11489603, \"end\": 11489662}, {\"filename\": \"/edge_defs/sounds/DPSKEDTH.lmp\", \"start\": 11489662, \"end\": 11489742}, {\"filename\": \"/edge_defs/sounds/DPSKEPCH.lmp\", \"start\": 11489742, \"end\": 11489779}, {\"filename\": \"/edge_defs/sounds/DPSKESIT.lmp\", \"start\": 11489779, \"end\": 11489885}, {\"filename\": \"/edge_defs/sounds/DPSKESWG.lmp\", \"start\": 11489885, \"end\": 11489925}, {\"filename\": \"/edge_defs/sounds/DPSKLATK.lmp\", \"start\": 11489925, \"end\": 11490005}, {\"filename\": \"/edge_defs/sounds/DPSKLDTH.lmp\", \"start\": 11490005, \"end\": 11490022}, {\"filename\": \"/edge_defs/sounds/DPSLOP.lmp\", \"start\": 11490022, \"end\": 11490131}, {\"filename\": \"/edge_defs/sounds/DPSPIDTH.lmp\", \"start\": 11490131, \"end\": 11490244}, {\"filename\": \"/edge_defs/sounds/DPSPISIT.lmp\", \"start\": 11490244, \"end\": 11490392}, {\"filename\": \"/edge_defs/sounds/DPSSDTH.lmp\", \"start\": 11490392, \"end\": 11490481}, {\"filename\": \"/edge_defs/sounds/DPSSSIT.lmp\", \"start\": 11490481, \"end\": 11490592}, {\"filename\": \"/edge_defs/sounds/DPSTNMOV.lmp\", \"start\": 11490592, \"end\": 11490600}, {\"filename\": \"/edge_defs/sounds/DPSWTCHN.lmp\", \"start\": 11490600, \"end\": 11490628}, {\"filename\": \"/edge_defs/sounds/DPSWTCHX.lmp\", \"start\": 11490628, \"end\": 11490657}, {\"filename\": \"/edge_defs/sounds/DPTELEPT.lmp\", \"start\": 11490657, \"end\": 11490759}, {\"filename\": \"/edge_defs/sounds/DPTINK.lmp\", \"start\": 11490759, \"end\": 11490811}, {\"filename\": \"/edge_defs/sounds/DPVILACT.lmp\", \"start\": 11490811, \"end\": 11490866}, {\"filename\": \"/edge_defs/sounds/DPVILATK.lmp\", \"start\": 11490866, \"end\": 11490929}, {\"filename\": \"/edge_defs/sounds/DPVILDTH.lmp\", \"start\": 11490929, \"end\": 11491197}, {\"filename\": \"/edge_defs/sounds/DPVILSIT.lmp\", \"start\": 11491197, \"end\": 11491273}, {\"filename\": \"/edge_defs/sounds/DPVIPAIN.lmp\", \"start\": 11491273, \"end\": 11491384}, {\"filename\": \"/edge_defs/sounds/DPWPNUP.lmp\", \"start\": 11491384, \"end\": 11491428}, {\"filename\": \"/edge_defs/sounds/DSACIDFT.ogg\", \"start\": 11491428, \"end\": 11498978, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSCRUSH.lmp\", \"start\": 11498978, \"end\": 11505996}, {\"filename\": \"/edge_defs/sounds/DSDGACT.ogg\", \"start\": 11505996, \"end\": 11513657, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGATK.ogg\", \"start\": 11513657, \"end\": 11520463, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGDTH.ogg\", \"start\": 11520463, \"end\": 11531279, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGPAIN.ogg\", \"start\": 11531279, \"end\": 11537271, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGSIT.ogg\", \"start\": 11537271, \"end\": 11543434, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT1.wav\", \"start\": 11543434, \"end\": 11558778, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT2.wav\", \"start\": 11558778, \"end\": 11574250, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT3.wav\", \"start\": 11574250, \"end\": 11586490, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT4.wav\", \"start\": 11586490, \"end\": 11601856, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSGLSBRK.wav\", \"start\": 11601856, \"end\": 11634454, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSJPDOWN.lmp\", \"start\": 11634454, \"end\": 11651042}, {\"filename\": \"/edge_defs/sounds/DSJPFLOW.lmp\", \"start\": 11651042, \"end\": 11654964}, {\"filename\": \"/edge_defs/sounds/DSJPIDLE.lmp\", \"start\": 11654964, \"end\": 11657931}, {\"filename\": \"/edge_defs/sounds/DSJPMOVE.lmp\", \"start\": 11657931, \"end\": 11659348}, {\"filename\": \"/edge_defs/sounds/DSJPRISE.lmp\", \"start\": 11659348, \"end\": 11667168}, {\"filename\": \"/edge_defs/sounds/DSMUCKFT.ogg\", \"start\": 11667168, \"end\": 11673242, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSSECRET.ogg\", \"start\": 11673242, \"end\": 11686083, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWATRFT.ogg\", \"start\": 11686083, \"end\": 11693744, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWTDIVE.wav\", \"start\": 11693744, \"end\": 11716220, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/HEARTBT1.ogg\", \"start\": 11716220, \"end\": 11736575, \"audio\": 1}, {\"filename\": \"/edge_defs/sprites/BSPHA0.png\", \"start\": 11736575, \"end\": 11737791}, {\"filename\": \"/edge_defs/sprites/BSPHB0.png\", \"start\": 11737791, \"end\": 11739012}, {\"filename\": \"/edge_defs/sprites/BSPHC0.png\", \"start\": 11739012, \"end\": 11740222}, {\"filename\": \"/edge_defs/sprites/BSPHD0.png\", \"start\": 11740222, \"end\": 11741423}, {\"filename\": \"/edge_defs/sprites/BSPHE0.png\", \"start\": 11741423, \"end\": 11742704}, {\"filename\": \"/edge_defs/sprites/BSPHF0.png\", \"start\": 11742704, \"end\": 11744047}, {\"filename\": \"/edge_defs/sprites/BSPHG0.png\", \"start\": 11744047, \"end\": 11745451}, {\"filename\": \"/edge_defs/sprites/BSPHH0.png\", \"start\": 11745451, \"end\": 11746796}, {\"filename\": \"/edge_defs/sprites/BSPHI0.png\", \"start\": 11746796, \"end\": 11748103}, {\"filename\": \"/edge_defs/sprites/BSPHJ0.png\", \"start\": 11748103, \"end\": 11749370}, {\"filename\": \"/edge_defs/sprites/BSPHK0.png\", \"start\": 11749370, \"end\": 11750607}, {\"filename\": \"/edge_defs/sprites/GLS1A0.lmp\", \"start\": 11750607, \"end\": 11750701}, {\"filename\": \"/edge_defs/sprites/GLS2A0.lmp\", \"start\": 11750701, \"end\": 11750915}, {\"filename\": \"/edge_defs/sprites/GLS3A0.lmp\", \"start\": 11750915, \"end\": 11751219}, {\"filename\": \"/edge_defs/sprites/GLS4A0.lmp\", \"start\": 11751219, \"end\": 11751587}, {\"filename\": \"/edge_defs/sprites/GLS5A0.lmp\", \"start\": 11751587, \"end\": 11751982}, {\"filename\": \"/edge_defs/sprites/GLS6A0.lmp\", \"start\": 11751982, \"end\": 11752418}, {\"filename\": \"/edge_defs/sprites/GLS7A0.lmp\", \"start\": 11752418, \"end\": 11752888}, {\"filename\": \"/edge_defs/sprites/GLS8A0.lmp\", \"start\": 11752888, \"end\": 11753320}, {\"filename\": \"/edge_defs/sprites/GLS9A0.lmp\", \"start\": 11753320, \"end\": 11753683}, {\"filename\": \"/edge_defs/sprites/JPCKA0.lmp\", \"start\": 11753683, \"end\": 11754499}, {\"filename\": \"/edge_defs/sprites/JPCKB0.lmp\", \"start\": 11754499, \"end\": 11755317}, {\"filename\": \"/edge_defs/sprites/JPCKC0.lmp\", \"start\": 11755317, \"end\": 11756135}, {\"filename\": \"/edge_defs/sprites/LVASA0.png\", \"start\": 11756135, \"end\": 11757433}, {\"filename\": \"/edge_defs/sprites/LVASB0.png\", \"start\": 11757433, \"end\": 11758816}, {\"filename\": \"/edge_defs/sprites/LVASC0.png\", \"start\": 11758816, \"end\": 11760170}, {\"filename\": \"/edge_defs/sprites/LVASD0.png\", \"start\": 11760170, \"end\": 11761470}, {\"filename\": \"/edge_defs/sprites/LVASE0.png\", \"start\": 11761470, \"end\": 11762739}, {\"filename\": \"/edge_defs/sprites/LVASF0.png\", \"start\": 11762739, \"end\": 11763962}, {\"filename\": \"/edge_defs/sprites/MUDSA0.png\", \"start\": 11763962, \"end\": 11765172}, {\"filename\": \"/edge_defs/sprites/MUDSB0.png\", \"start\": 11765172, \"end\": 11766384}, {\"filename\": \"/edge_defs/sprites/MUDSC0.png\", \"start\": 11766384, \"end\": 11767575}, {\"filename\": \"/edge_defs/sprites/MUDSD0.png\", \"start\": 11767575, \"end\": 11768760}, {\"filename\": \"/edge_defs/sprites/MUDSE0.png\", \"start\": 11768760, \"end\": 11770011}, {\"filename\": \"/edge_defs/sprites/MUDSF0.png\", \"start\": 11770011, \"end\": 11771252}, {\"filename\": \"/edge_defs/sprites/MUDSG0.png\", \"start\": 11771252, \"end\": 11772501}, {\"filename\": \"/edge_defs/sprites/MUDSH0.png\", \"start\": 11772501, \"end\": 11773723}, {\"filename\": \"/edge_defs/sprites/NVSCA0.lmp\", \"start\": 11773723, \"end\": 11774327}, {\"filename\": \"/edge_defs/sprites/NVSCB0.lmp\", \"start\": 11774327, \"end\": 11774931}, {\"filename\": \"/edge_defs/sprites/PLAYX1.lmp\", \"start\": 11774931, \"end\": 11775854}, {\"filename\": \"/edge_defs/sprites/PLAYX2X8.lmp\", \"start\": 11775854, \"end\": 11777070}, {\"filename\": \"/edge_defs/sprites/PLAYX3X7.lmp\", \"start\": 11777070, \"end\": 11778465}, {\"filename\": \"/edge_defs/sprites/PLAYX4X6.lmp\", \"start\": 11778465, \"end\": 11779594}, {\"filename\": \"/edge_defs/sprites/PLAYX5.lmp\", \"start\": 11779594, \"end\": 11780396}, {\"filename\": \"/edge_defs/sprites/PLAYY1.lmp\", \"start\": 11780396, \"end\": 11781344}, {\"filename\": \"/edge_defs/sprites/PLAYY2Y8.lmp\", \"start\": 11781344, \"end\": 11782572}, {\"filename\": \"/edge_defs/sprites/PLAYY3Y7.lmp\", \"start\": 11782572, \"end\": 11783958}, {\"filename\": \"/edge_defs/sprites/PLAYY4Y6.lmp\", \"start\": 11783958, \"end\": 11785096}, {\"filename\": \"/edge_defs/sprites/PLAYY5.lmp\", \"start\": 11785096, \"end\": 11785893}, {\"filename\": \"/edge_defs/sprites/PRT1A0.png\", \"start\": 11785893, \"end\": 11786765}, {\"filename\": \"/edge_defs/sprites/PRT2A0.png\", \"start\": 11786765, \"end\": 11787637}, {\"filename\": \"/edge_defs/sprites/PRT3A0.png\", \"start\": 11787637, \"end\": 11787766}, {\"filename\": \"/edge_defs/sprites/SLDGA0.png\", \"start\": 11787766, \"end\": 11788982}, {\"filename\": \"/edge_defs/sprites/SLDGB0.png\", \"start\": 11788982, \"end\": 11790200}, {\"filename\": \"/edge_defs/sprites/SLDGC0.png\", \"start\": 11790200, \"end\": 11791396}, {\"filename\": \"/edge_defs/sprites/SLDGD0.png\", \"start\": 11791396, \"end\": 11792583}, {\"filename\": \"/edge_defs/sprites/SLDGE0.png\", \"start\": 11792583, \"end\": 11793834}, {\"filename\": \"/edge_defs/sprites/SLDGF0.png\", \"start\": 11793834, \"end\": 11795075}, {\"filename\": \"/edge_defs/sprites/SLDGG0.png\", \"start\": 11795075, \"end\": 11796324}, {\"filename\": \"/edge_defs/sprites/SLDGH0.png\", \"start\": 11796324, \"end\": 11797546}, {\"filename\": \"/edge_defs/sprites/SLIMA0.png\", \"start\": 11797546, \"end\": 11798747}, {\"filename\": \"/edge_defs/sprites/SLIMB0.png\", \"start\": 11798747, \"end\": 11799952}, {\"filename\": \"/edge_defs/sprites/SLIMC0.png\", \"start\": 11799952, \"end\": 11801139}, {\"filename\": \"/edge_defs/sprites/SLIMD0.png\", \"start\": 11801139, \"end\": 11802317}, {\"filename\": \"/edge_defs/sprites/SLIME0.png\", \"start\": 11802317, \"end\": 11803562}, {\"filename\": \"/edge_defs/sprites/SLIMF0.png\", \"start\": 11803562, \"end\": 11804798}, {\"filename\": \"/edge_defs/sprites/SLIMG0.png\", \"start\": 11804798, \"end\": 11806043}, {\"filename\": \"/edge_defs/sprites/SLIMH0.png\", \"start\": 11806043, \"end\": 11807259}, {\"filename\": \"/edge_defs/sprites/SPSHA0.png\", \"start\": 11807259, \"end\": 11808476}, {\"filename\": \"/edge_defs/sprites/SPSHB0.png\", \"start\": 11808476, \"end\": 11809696}, {\"filename\": \"/edge_defs/sprites/SPSHC0.png\", \"start\": 11809696, \"end\": 11810907}, {\"filename\": \"/edge_defs/sprites/SPSHD0.png\", \"start\": 11810907, \"end\": 11812108}, {\"filename\": \"/edge_defs/sprites/SPSHE0.png\", \"start\": 11812108, \"end\": 11813388}, {\"filename\": \"/edge_defs/sprites/SPSHF0.png\", \"start\": 11813388, \"end\": 11814739}, {\"filename\": \"/edge_defs/sprites/SPSHG0.png\", \"start\": 11814739, \"end\": 11816146}, {\"filename\": \"/edge_defs/sprites/SPSHH0.png\", \"start\": 11816146, \"end\": 11817498}, {\"filename\": \"/edge_defs/sprites/SPSHI0.png\", \"start\": 11817498, \"end\": 11818809}, {\"filename\": \"/edge_defs/sprites/SPSHJ0.png\", \"start\": 11818809, \"end\": 11820077}, {\"filename\": \"/edge_defs/sprites/SPSHK0.png\", \"start\": 11820077, \"end\": 11821314}, {\"filename\": \"/edge_defs/sprites/TSTPA0.png\", \"start\": 11821314, \"end\": 11822439}, {\"filename\": \"/edge_defs/sprites/TSTPB0.lmp\", \"start\": 11822439, \"end\": 11822781}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA1.png\", \"start\": 11822781, \"end\": 11824061}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA2.png\", \"start\": 11824061, \"end\": 11825614}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA3.png\", \"start\": 11825614, \"end\": 11827245}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA4.png\", \"start\": 11827245, \"end\": 11828778}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA5.png\", \"start\": 11828778, \"end\": 11829964}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA6.png\", \"start\": 11829964, \"end\": 11831480}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA7.png\", \"start\": 11831480, \"end\": 11833073}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA8.png\", \"start\": 11833073, \"end\": 11834591}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB1.png\", \"start\": 11834591, \"end\": 11835821}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB2.png\", \"start\": 11835821, \"end\": 11837341}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB3.png\", \"start\": 11837341, \"end\": 11838948}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB4.png\", \"start\": 11838948, \"end\": 11840481}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB5.png\", \"start\": 11840481, \"end\": 11841691}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB6.png\", \"start\": 11841691, \"end\": 11843189}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB7.png\", \"start\": 11843189, \"end\": 11844781}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB8.png\", \"start\": 11844781, \"end\": 11846295}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC1.png\", \"start\": 11846295, \"end\": 11847592}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC2.png\", \"start\": 11847592, \"end\": 11849098}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC3.png\", \"start\": 11849098, \"end\": 11850669}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC4.png\", \"start\": 11850669, \"end\": 11852200}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC5.png\", \"start\": 11852200, \"end\": 11853537}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC6.png\", \"start\": 11853537, \"end\": 11855057}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC7.png\", \"start\": 11855057, \"end\": 11856593}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC8.png\", \"start\": 11856593, \"end\": 11858082}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD1.png\", \"start\": 11858082, \"end\": 11859393}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD2.png\", \"start\": 11859393, \"end\": 11860911}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD3.png\", \"start\": 11860911, \"end\": 11862499}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD4.png\", \"start\": 11862499, \"end\": 11864024}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD5.png\", \"start\": 11864024, \"end\": 11865350}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD6.png\", \"start\": 11865350, \"end\": 11866892}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD7.png\", \"start\": 11866892, \"end\": 11868465}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD8.png\", \"start\": 11868465, \"end\": 11869968}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE1.png\", \"start\": 11869968, \"end\": 11871330}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE2.png\", \"start\": 11871330, \"end\": 11872847}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE3.png\", \"start\": 11872847, \"end\": 11874395}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE4.png\", \"start\": 11874395, \"end\": 11875993}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE5.png\", \"start\": 11875993, \"end\": 11877431}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE6.png\", \"start\": 11877431, \"end\": 11878981}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE7.png\", \"start\": 11878981, \"end\": 11880535}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE8.png\", \"start\": 11880535, \"end\": 11882094}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF1.png\", \"start\": 11882094, \"end\": 11883491}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF2.png\", \"start\": 11883491, \"end\": 11885062}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF3.png\", \"start\": 11885062, \"end\": 11886664}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF4.png\", \"start\": 11886664, \"end\": 11888230}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF5.png\", \"start\": 11888230, \"end\": 11889633}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF6.png\", \"start\": 11889633, \"end\": 11891150}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF7.png\", \"start\": 11891150, \"end\": 11892746}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF8.png\", \"start\": 11892746, \"end\": 11894354}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG1.png\", \"start\": 11894354, \"end\": 11895743}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG2.png\", \"start\": 11895743, \"end\": 11897331}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG3.png\", \"start\": 11897331, \"end\": 11898975}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG4.png\", \"start\": 11898975, \"end\": 11900495}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG5.png\", \"start\": 11900495, \"end\": 11901845}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG6.png\", \"start\": 11901845, \"end\": 11903366}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG7.png\", \"start\": 11903366, \"end\": 11904988}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG8.png\", \"start\": 11904988, \"end\": 11906558}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH1.png\", \"start\": 11906558, \"end\": 11907868}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH2.png\", \"start\": 11907868, \"end\": 11909399}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH3.png\", \"start\": 11909399, \"end\": 11910991}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH4.png\", \"start\": 11910991, \"end\": 11912474}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH5.png\", \"start\": 11912474, \"end\": 11913768}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH6.png\", \"start\": 11913768, \"end\": 11915235}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH7.png\", \"start\": 11915235, \"end\": 11916813}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH8.png\", \"start\": 11916813, \"end\": 11918382}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDI0.png\", \"start\": 11918382, \"end\": 11920072}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDJ0.png\", \"start\": 11920072, \"end\": 11921854}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDK0.png\", \"start\": 11921854, \"end\": 11923600}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDL0.png\", \"start\": 11923600, \"end\": 11925320}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDM0.png\", \"start\": 11925320, \"end\": 11927047}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDN0.png\", \"start\": 11927047, \"end\": 11928786}, {\"filename\": \"/edge_defs/textures/FUZZMAP8.png\", \"start\": 11928786, \"end\": 11943586}, {\"filename\": \"/edge_defs/textures/PORTAL7A.jpg\", \"start\": 11943586, \"end\": 11965704}, {\"filename\": \"/edge_defs/textures/PORTAL7B.jpg\", \"start\": 11965704, \"end\": 11984057}, {\"filename\": \"/edge_defs/textures/PORTAL7C.jpg\", \"start\": 11984057, \"end\": 11999548}, {\"filename\": \"/edge_defs/textures/PORTAL7D.jpg\", \"start\": 11999548, \"end\": 12014842}, {\"filename\": \"/edge_defs/textures/PORTAL7E.jpg\", \"start\": 12014842, \"end\": 12029709}, {\"filename\": \"/edge_defs/textures/PORTAL7F.jpg\", \"start\": 12029709, \"end\": 12046710}, {\"filename\": \"/edge_defs/textures/PORTAL7G.jpg\", \"start\": 12046710, \"end\": 12067418}, {\"filename\": \"/edge_defs/ttf/ECFONT01.ttf\", \"start\": 12067418, \"end\": 12131758}, {\"filename\": \"/edge_defs/version.txt\", \"start\": 12131758, \"end\": 12131762}, {\"filename\": \"/freedm.wad\", \"start\": 12131762, \"end\": 33956210}, {\"filename\": \"/freedoom2.wad\", \"start\": 33956210, \"end\": 62500342}, {\"filename\": \"/soundfont/16-Bit Game Station.sf2\", \"start\": 62500342, \"end\": 66183880}, {\"filename\": \"/soundfont/ProtoSquare!.sf2\", \"start\": 66183880, \"end\": 66548118}, {\"filename\": \"/soundfont/adplug.op2\", \"start\": 66548118, \"end\": 66560026}, {\"filename\": \"/soundfont/bonkers_for_bits.sf2\", \"start\": 66560026, \"end\": 66588030}, {\"filename\": \"/soundfont/default.sf2\", \"start\": 66588030, \"end\": 70734470}, {\"filename\": \"/soundfont/dmxopl.op2\", \"start\": 70734470, \"end\": 70746378}, {\"filename\": \"/soundfont/dmxopl3.wopl\", \"start\": 70746378, \"end\": 70958447}, {\"filename\": \"/soundfont/wadsmoosh.op2\", \"start\": 70958447, \"end\": 70970355}], \"remote_package_size\": 52711344, \"package_uuid\": \"sha256-96d630dca8912c00d89f9210eceda1c33412cf43ba97b2146dd56f3a37173b07\"});\r\n\r\n  })();\r\n\r\n\r\n// Sometimes an existing Module object exists with properties\r\n// meant to overwrite the default module functionality. Here\r\n// we collect those properties and reapply _after_ we configure\r\n// the current environment's defaults to avoid having to be so\r\n// defensive during initialization.\r\nvar moduleOverrides = Object.assign({}, Module);\r\n\r\nvar arguments_ = [];\r\nvar thisProgram = './this.program';\r\nvar quit_ = (status, toThrow) => {\r\n  throw toThrow;\r\n};\r\n\r\n// Determine the runtime environment we are in. You can customize this by\r\n// setting the ENVIRONMENT setting at compile time (see settings.js).\r\n\r\nvar ENVIRONMENT_IS_WEB = true;\r\nvar ENVIRONMENT_IS_WORKER = false;\r\nvar ENVIRONMENT_IS_NODE = false;\r\nvar ENVIRONMENT_IS_SHELL = false;\r\n\r\n// `/` should be present at the end if `scriptDirectory` is not empty\r\nvar scriptDirectory = '';\r\nfunction locateFile(path) {\r\n  if (Module['locateFile']) {\r\n    return Module['locateFile'](path, scriptDirectory);\r\n  }\r\n  return scriptDirectory + path;\r\n}\r\n\r\n// Hooks that are implemented differently in different runtime environments.\r\nvar read_,\r\n    readAsync,\r\n    readBinary,\r\n    setWindowTitle;\r\n\r\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\r\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\r\n// ENVIRONMENT_IS_NODE.\r\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\r\n    scriptDirectory = self.location.href;\r\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\r\n    scriptDirectory = document.currentScript.src;\r\n  }\r\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\r\n  // is gone, so we saved it, and we use it here instead of any other info.\r\n  if (_scriptDir) {\r\n    scriptDirectory = _scriptDir;\r\n  }\r\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\r\n  // otherwise, slice off the final part of the url to find the script directory.\r\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\r\n  // and scriptDirectory will correctly be replaced with an empty string.\r\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\r\n  // they are removed because they could contain a slash.\r\n  if (scriptDirectory.indexOf('blob:') !== 0) {\r\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\r\n  } else {\r\n    scriptDirectory = '';\r\n  }\r\n\r\n  // Differentiate the Web Worker from the Node Worker case, as reading must\r\n  // be done differently.\r\n  {\r\n// include: web_or_worker_shell_read.js\r\nread_ = (url) => {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, false);\r\n      xhr.send(null);\r\n      return xhr.responseText;\r\n  }\r\n\r\n  if (ENVIRONMENT_IS_WORKER) {\r\n    readBinary = (url) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, false);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.send(null);\r\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\r\n    };\r\n  }\r\n\r\n  readAsync = (url, onload, onerror) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url, true);\r\n    xhr.responseType = 'arraybuffer';\r\n    xhr.onload = () => {\r\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n        onload(xhr.response);\r\n        return;\r\n      }\r\n      onerror();\r\n    };\r\n    xhr.onerror = onerror;\r\n    xhr.send(null);\r\n  }\r\n\r\n// end include: web_or_worker_shell_read.js\r\n  }\r\n\r\n  setWindowTitle = (title) => document.title = title;\r\n} else\r\n{\r\n}\r\n\r\nvar out = Module['print'] || console.log.bind(console);\r\nvar err = Module['printErr'] || console.warn.bind(console);\r\n\r\n// Merge back in the overrides\r\nObject.assign(Module, moduleOverrides);\r\n// Free the object hierarchy contained in the overrides, this lets the GC\r\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\r\nmoduleOverrides = null;\r\n\r\n// Emit code to handle expected values on the Module object. This applies Module.x\r\n// to the proper local x. This has two benefits: first, we only emit it if it is\r\n// expected to arrive, and second, by using a local everywhere else that can be\r\n// minified.\r\n\r\nif (Module['arguments']) arguments_ = Module['arguments'];\r\n\r\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\r\n\r\nif (Module['quit']) quit_ = Module['quit'];\r\n\r\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\r\n\r\n\r\n// end include: shell.js\r\n// include: preamble.js\r\n// === Preamble library stuff ===\r\n\r\n// Documentation for the public APIs defined in this file must be updated in:\r\n//    site/source/docs/api_reference/preamble.js.rst\r\n// A prebuilt local version of the documentation is available at:\r\n//    site/build/text/docs/api_reference/preamble.js.txt\r\n// You can also build docs locally as HTML or other formats in site/\r\n// An online HTML version (which may be of a different version of Emscripten)\r\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\r\n\r\nvar wasmBinary;\r\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\r\nvar noExitRuntime = Module['noExitRuntime'] || true;\r\n\r\nif (typeof WebAssembly != 'object') {\r\n  abort('no native wasm support detected');\r\n}\r\n\r\n// Wasm globals\r\n\r\nvar wasmMemory;\r\n\r\n//========================================\r\n// Runtime essentials\r\n//========================================\r\n\r\n// whether we are quitting the application. no code should run after this.\r\n// set in exit() and abort()\r\nvar ABORT = false;\r\n\r\n// set by exit() and abort().  Passed to 'onExit' handler.\r\n// NOTE: This is also used as the process return code code in shell environments\r\n// but only when noExitRuntime is false.\r\nvar EXITSTATUS;\r\n\r\n/** @type {function(*, string=)} */\r\nfunction assert(condition, text) {\r\n  if (!condition) {\r\n    // This build was created without ASSERTIONS defined.  `assert()` should not\r\n    // ever be called in this configuration but in case there are callers in\r\n    // the wild leave this simple abort() implemenation here for now.\r\n    abort(text);\r\n  }\r\n}\r\n\r\n// Memory management\r\n\r\nvar HEAP,\r\n/** @type {!Int8Array} */\r\n  HEAP8,\r\n/** @type {!Uint8Array} */\r\n  HEAPU8,\r\n/** @type {!Int16Array} */\r\n  HEAP16,\r\n/** @type {!Uint16Array} */\r\n  HEAPU16,\r\n/** @type {!Int32Array} */\r\n  HEAP32,\r\n/** @type {!Uint32Array} */\r\n  HEAPU32,\r\n/** @type {!Float32Array} */\r\n  HEAPF32,\r\n/** @type {!Float64Array} */\r\n  HEAPF64;\r\n\r\nfunction updateMemoryViews() {\r\n  var b = wasmMemory.buffer;\r\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\r\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\r\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\r\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\r\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\r\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\r\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\r\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\r\n}\r\n\r\n// include: runtime_init_table.js\r\n// In regular non-RELOCATABLE mode the table is exported\r\n// from the wasm module and this will be assigned once\r\n// the exports are available.\r\nvar wasmTable;\r\n\r\n// end include: runtime_init_table.js\r\n// include: runtime_stack_check.js\r\n// end include: runtime_stack_check.js\r\n// include: runtime_assertions.js\r\n// end include: runtime_assertions.js\r\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\r\nvar __ATINIT__    = []; // functions called during startup\r\nvar __ATMAIN__    = []; // functions called when main() is to be run\r\nvar __ATEXIT__    = []; // functions called during shutdown\r\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\r\n\r\nvar runtimeInitialized = false;\r\n\r\nvar runtimeKeepaliveCounter = 0;\r\n\r\nfunction keepRuntimeAlive() {\r\n  return noExitRuntime || runtimeKeepaliveCounter > 0;\r\n}\r\n\r\nfunction preRun() {\r\n  if (Module['preRun']) {\r\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\r\n    while (Module['preRun'].length) {\r\n      addOnPreRun(Module['preRun'].shift());\r\n    }\r\n  }\r\n  callRuntimeCallbacks(__ATPRERUN__);\r\n}\r\n\r\nfunction initRuntime() {\r\n  runtimeInitialized = true;\r\n\r\n  \r\nif (!Module[\"noFSInit\"] && !FS.init.initialized)\r\n  FS.init();\r\nFS.ignorePermissions = false;\r\n\r\nTTY.init();\r\n  callRuntimeCallbacks(__ATINIT__);\r\n}\r\n\r\nfunction preMain() {\r\n  \r\n  callRuntimeCallbacks(__ATMAIN__);\r\n}\r\n\r\nfunction postRun() {\r\n\r\n  if (Module['postRun']) {\r\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\r\n    while (Module['postRun'].length) {\r\n      addOnPostRun(Module['postRun'].shift());\r\n    }\r\n  }\r\n\r\n  callRuntimeCallbacks(__ATPOSTRUN__);\r\n}\r\n\r\nfunction addOnPreRun(cb) {\r\n  __ATPRERUN__.unshift(cb);\r\n}\r\n\r\nfunction addOnInit(cb) {\r\n  __ATINIT__.unshift(cb);\r\n}\r\n\r\nfunction addOnPreMain(cb) {\r\n  __ATMAIN__.unshift(cb);\r\n}\r\n\r\nfunction addOnExit(cb) {\r\n}\r\n\r\nfunction addOnPostRun(cb) {\r\n  __ATPOSTRUN__.unshift(cb);\r\n}\r\n\r\n// include: runtime_math.js\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\r\n\r\n// end include: runtime_math.js\r\n// A counter of dependencies for calling run(). If we need to\r\n// do asynchronous work before running, increment this and\r\n// decrement it. Incrementing must happen in a place like\r\n// Module.preRun (used by emcc to add file preloading).\r\n// Note that you can add dependencies in preRun, even though\r\n// it happens right before run - run will be postponed until\r\n// the dependencies are met.\r\nvar runDependencies = 0;\r\nvar runDependencyWatcher = null;\r\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\r\n\r\nfunction getUniqueRunDependency(id) {\r\n  return id;\r\n}\r\n\r\nfunction addRunDependency(id) {\r\n  runDependencies++;\r\n\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n  runDependencies--;\r\n\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n\r\n  if (runDependencies == 0) {\r\n    if (runDependencyWatcher !== null) {\r\n      clearInterval(runDependencyWatcher);\r\n      runDependencyWatcher = null;\r\n    }\r\n    if (dependenciesFulfilled) {\r\n      var callback = dependenciesFulfilled;\r\n      dependenciesFulfilled = null;\r\n      callback(); // can add another dependenciesFulfilled\r\n    }\r\n  }\r\n}\r\n\r\n/** @param {string|number=} what */\r\nfunction abort(what) {\r\n  if (Module['onAbort']) {\r\n    Module['onAbort'](what);\r\n  }\r\n\r\n  what = 'Aborted(' + what + ')';\r\n  // TODO(sbc): Should we remove printing and leave it up to whoever\r\n  // catches the exception?\r\n  err(what);\r\n\r\n  ABORT = true;\r\n  EXITSTATUS = 1;\r\n\r\n  what += '. Build with -sASSERTIONS for more info.';\r\n\r\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\r\n  // exception, which means we'd run destructors on it. We need the error to\r\n  // simply make the program stop.\r\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\r\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\r\n  // a trap or not based on a hidden field within the object. So at the moment\r\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\r\n  // allows this in the wasm spec.\r\n\r\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\r\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\r\n  // though it can.\r\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\r\n  /** @suppress {checkTypes} */\r\n  var e = new WebAssembly.RuntimeError(what);\r\n\r\n  readyPromiseReject(e);\r\n  // Throw the error whether or not MODULARIZE is set because abort is used\r\n  // in code paths apart from instantiation where an exception is expected\r\n  // to be thrown when abort is called.\r\n  throw e;\r\n}\r\n\r\n// include: memoryprofiler.js\r\n// end include: memoryprofiler.js\r\n// include: URIUtils.js\r\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\r\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\r\n\r\n// Indicates whether filename is a base64 data URI.\r\nfunction isDataURI(filename) {\r\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\r\n  return filename.startsWith(dataURIPrefix);\r\n}\r\n\r\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\r\nfunction isFileURI(filename) {\r\n  return filename.startsWith('file://');\r\n}\r\n\r\n// end include: URIUtils.js\r\n// include: runtime_exceptions.js\r\n// end include: runtime_exceptions.js\r\nvar wasmBinaryFile;\r\n  wasmBinaryFile = 'edge-classic.wasm';\r\n  if (!isDataURI(wasmBinaryFile)) {\r\n    wasmBinaryFile = locateFile(wasmBinaryFile);\r\n  }\r\n\r\nfunction getBinary(file) {\r\n  try {\r\n    if (file == wasmBinaryFile && wasmBinary) {\r\n      return new Uint8Array(wasmBinary);\r\n    }\r\n    if (readBinary) {\r\n      return readBinary(file);\r\n    }\r\n    throw \"both async and sync fetching of the wasm failed\";\r\n  }\r\n  catch (err) {\r\n    abort(err);\r\n  }\r\n}\r\n\r\nfunction getBinaryPromise(binaryFile) {\r\n  // If we don't have the binary yet, try to load it asynchronously.\r\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\r\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\r\n  // Cordova or Electron apps are typically loaded from a file:// url.\r\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\r\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\r\n    if (typeof fetch == 'function'\r\n    ) {\r\n      return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\r\n        if (!response['ok']) {\r\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\r\n        }\r\n        return response['arrayBuffer']();\r\n      }).catch(() => getBinary(binaryFile));\r\n    }\r\n  }\r\n\r\n  // Otherwise, getBinary should be able to get it synchronously\r\n  return Promise.resolve().then(() => getBinary(binaryFile));\r\n}\r\n\r\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\r\n  return getBinaryPromise(binaryFile).then((binary) => {\r\n    return WebAssembly.instantiate(binary, imports);\r\n  }).then((instance) => {\r\n    return instance;\r\n  }).then(receiver, (reason) => {\r\n    err('failed to asynchronously prepare wasm: ' + reason);\r\n\r\n    abort(reason);\r\n  });\r\n}\r\n\r\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\r\n  if (!binary &&\r\n      typeof WebAssembly.instantiateStreaming == 'function' &&\r\n      !isDataURI(binaryFile) &&\r\n      typeof fetch == 'function') {\r\n    return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\r\n      // Suppress closure warning here since the upstream definition for\r\n      // instantiateStreaming only allows Promise<Repsponse> rather than\r\n      // an actual Response.\r\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\r\n      /** @suppress {checkTypes} */\r\n      var result = WebAssembly.instantiateStreaming(response, imports);\r\n\r\n      return result.then(\r\n        callback,\r\n        function(reason) {\r\n          // We expect the most common failure cause to be a bad MIME type for the binary,\r\n          // in which case falling back to ArrayBuffer instantiation should work.\r\n          err('wasm streaming compile failed: ' + reason);\r\n          err('falling back to ArrayBuffer instantiation');\r\n          return instantiateArrayBuffer(binaryFile, imports, callback);\r\n        });\r\n    });\r\n  } else {\r\n    return instantiateArrayBuffer(binaryFile, imports, callback);\r\n  }\r\n}\r\n\r\n// Create the wasm instance.\r\n// Receives the wasm imports, returns the exports.\r\nfunction createWasm() {\r\n  // prepare imports\r\n  var info = {\r\n    'env': wasmImports,\r\n    'wasi_snapshot_preview1': wasmImports,\r\n  };\r\n  // Load the wasm module and create an instance of using native support in the JS engine.\r\n  // handle a generated wasm instance, receiving its exports and\r\n  // performing other necessary setup\r\n  /** @param {WebAssembly.Module=} module*/\r\n  function receiveInstance(instance, module) {\r\n    var exports = instance.exports;\r\n\r\n    exports = Asyncify.instrumentWasmExports(exports);\r\n\r\n    Module['asm'] = exports;\r\n\r\n    wasmMemory = Module['asm']['memory'];\r\n    updateMemoryViews();\r\n\r\n    wasmTable = Module['asm']['__indirect_function_table'];\r\n\r\n    addOnInit(Module['asm']['__wasm_call_ctors']);\r\n\r\n    removeRunDependency('wasm-instantiate');\r\n\r\n    return exports;\r\n  }\r\n  // wait for the pthread pool (if any)\r\n  addRunDependency('wasm-instantiate');\r\n\r\n  // Prefer streaming instantiation if available.\r\n  function receiveInstantiationResult(result) {\r\n    // 'result' is a ResultObject object which has both the module and instance.\r\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\r\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\r\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\r\n    receiveInstance(result['instance']);\r\n  }\r\n\r\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\r\n  // to manually instantiate the Wasm module themselves. This allows pages to\r\n  // run the instantiation parallel to any other async startup actions they are\r\n  // performing.\r\n  // Also pthreads and wasm workers initialize the wasm instance through this\r\n  // path.\r\n  if (Module['instantiateWasm']) {\r\n\r\n    try {\r\n      return Module['instantiateWasm'](info, receiveInstance);\r\n    } catch(e) {\r\n      err('Module.instantiateWasm callback failed with error: ' + e);\r\n        // If instantiation fails, reject the module ready promise.\r\n        readyPromiseReject(e);\r\n    }\r\n  }\r\n\r\n  // If instantiation fails, reject the module ready promise.\r\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\r\n  return {}; // no exports yet; we'll fill them in later\r\n}\r\n\r\n// Globals used by JS i64 conversions (see makeSetValue)\r\nvar tempDouble;\r\nvar tempI64;\r\n\r\n// include: runtime_debug.js\r\n// end include: runtime_debug.js\r\n// === Body ===\r\n\r\nvar ASM_CONSTS = {\r\n  610964: () => { if (Module.edgePostInit) { Module.edgePostInit(); } },  \r\n 611020: ($0, $1) => { const args = []; for (let i = 0; i < $0; i++) { args.push(UTF8ToString(HEAP32[($1 >> 2) + i])); } console.log(`Edge command line: ${args}`); const homeIndex = args.indexOf(\"-home\"); if (homeIndex === -1 || homeIndex >= args.length || args[homeIndex + 1].startsWith(\"-\")) { throw \"No home command line option specified\" } const homeDir = args[homeIndex + 1]; if (!FS.analyzePath(homeDir).exists) { FS.mkdirTree(homeDir); } FS.mount(IDBFS, {}, homeDir); FS.syncfs(true, function (err) { if (err) { console.error(`Error mounting home dir ${err}`); return; } Module._I_WebMain($0, $1); }); },  \r\n 611610: () => { if (Module.onFullscreen) { Module.onFullscreen(); } },  \r\n 611666: ($0) => { if (Module.edgePreSyncFS) { Module.edgePreSyncFS(); } FS.syncfs($0, function (err) { if (Module.edgePostSyncFS) { Module.edgePostSyncFS(); } }); },  \r\n 611815: () => { if (typeof(AudioContext) !== 'undefined') { return true; } else if (typeof(webkitAudioContext) !== 'undefined') { return true; } return false; },  \r\n 611962: () => { if ((typeof(navigator.mediaDevices) !== 'undefined') && (typeof(navigator.mediaDevices.getUserMedia) !== 'undefined')) { return true; } else if (typeof(navigator.webkitGetUserMedia) !== 'undefined') { return true; } return false; },  \r\n 612196: ($0) => { if(typeof(Module['SDL2']) === 'undefined') { Module['SDL2'] = {}; } var SDL2 = Module['SDL2']; if (!$0) { SDL2.audio = {}; } else { SDL2.capture = {}; } if (!SDL2.audioContext) { if (typeof(AudioContext) !== 'undefined') { SDL2.audioContext = new AudioContext(); } else if (typeof(webkitAudioContext) !== 'undefined') { SDL2.audioContext = new webkitAudioContext(); } if (SDL2.audioContext) { autoResumeAudioContext(SDL2.audioContext); } } return SDL2.audioContext === undefined ? -1 : 0; },  \r\n 612689: () => { var SDL2 = Module['SDL2']; return SDL2.audioContext.sampleRate; },  \r\n 612757: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; var have_microphone = function(stream) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); SDL2.capture.silenceTimer = undefined; } SDL2.capture.mediaStreamNode = SDL2.audioContext.createMediaStreamSource(stream); SDL2.capture.scriptProcessorNode = SDL2.audioContext.createScriptProcessor($1, $0, 1); SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) { if ((SDL2 === undefined) || (SDL2.capture === undefined)) { return; } audioProcessingEvent.outputBuffer.getChannelData(0).fill(0.0); SDL2.capture.currentCaptureBuffer = audioProcessingEvent.inputBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode); SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination); SDL2.capture.stream = stream; }; var no_microphone = function(error) { }; SDL2.capture.silenceBuffer = SDL2.audioContext.createBuffer($0, $1, SDL2.audioContext.sampleRate); SDL2.capture.silenceBuffer.getChannelData(0).fill(0.0); var silence_callback = function() { SDL2.capture.currentCaptureBuffer = SDL2.capture.silenceBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.silenceTimer = setTimeout(silence_callback, ($1 / SDL2.audioContext.sampleRate) * 1000); if ((navigator.mediaDevices !== undefined) && (navigator.mediaDevices.getUserMedia !== undefined)) { navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(have_microphone).catch(no_microphone); } else if (navigator.webkitGetUserMedia !== undefined) { navigator.webkitGetUserMedia({ audio: true, video: false }, have_microphone, no_microphone); } },  \r\n 614409: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; SDL2.audio.scriptProcessorNode = SDL2.audioContext['createScriptProcessor']($1, 0, $0); SDL2.audio.scriptProcessorNode['onaudioprocess'] = function (e) { if ((SDL2 === undefined) || (SDL2.audio === undefined)) { return; } SDL2.audio.currentOutputBuffer = e['outputBuffer']; dynCall('vi', $2, [$3]); }; SDL2.audio.scriptProcessorNode['connect'](SDL2.audioContext['destination']); },  \r\n 614819: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.capture.currentCaptureBuffer.numberOfChannels; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.capture.currentCaptureBuffer.getChannelData(c); if (channelData.length != $1) { throw 'Web Audio capture buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } if (numChannels == 1) { for (var j = 0; j < $1; ++j) { setValue($0 + (j * 4), channelData[j], 'float'); } } else { for (var j = 0; j < $1; ++j) { setValue($0 + (((j * numChannels) + c) * 4), channelData[j], 'float'); } } } },  \r\n 615424: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.audio.currentOutputBuffer['numberOfChannels']; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.audio.currentOutputBuffer['getChannelData'](c); if (channelData.length != $1) { throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } for (var j = 0; j < $1; ++j) { channelData[j] = HEAPF32[$0 + ((j*numChannels + c) << 2) >> 2]; } } },  \r\n 615904: ($0) => { var SDL2 = Module['SDL2']; if ($0) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); } if (SDL2.capture.stream !== undefined) { var tracks = SDL2.capture.stream.getAudioTracks(); for (var i = 0; i < tracks.length; i++) { SDL2.capture.stream.removeTrack(tracks[i]); } SDL2.capture.stream = undefined; } if (SDL2.capture.scriptProcessorNode !== undefined) { SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) {}; SDL2.capture.scriptProcessorNode.disconnect(); SDL2.capture.scriptProcessorNode = undefined; } if (SDL2.capture.mediaStreamNode !== undefined) { SDL2.capture.mediaStreamNode.disconnect(); SDL2.capture.mediaStreamNode = undefined; } if (SDL2.capture.silenceBuffer !== undefined) { SDL2.capture.silenceBuffer = undefined } SDL2.capture = undefined; } else { if (SDL2.audio.scriptProcessorNode != undefined) { SDL2.audio.scriptProcessorNode.disconnect(); SDL2.audio.scriptProcessorNode = undefined; } SDL2.audio = undefined; } if ((SDL2.audioContext !== undefined) && (SDL2.audio === undefined) && (SDL2.capture === undefined)) { SDL2.audioContext.close(); SDL2.audioContext = undefined; } },  \r\n 617076: ($0, $1, $2) => { var w = $0; var h = $1; var pixels = $2; if (!Module['SDL2']) Module['SDL2'] = {}; var SDL2 = Module['SDL2']; if (SDL2.ctxCanvas !== Module['canvas']) { SDL2.ctx = Module['createContext'](Module['canvas'], false, true); SDL2.ctxCanvas = Module['canvas']; } if (SDL2.w !== w || SDL2.h !== h || SDL2.imageCtx !== SDL2.ctx) { SDL2.image = SDL2.ctx.createImageData(w, h); SDL2.w = w; SDL2.h = h; SDL2.imageCtx = SDL2.ctx; } var data = SDL2.image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = 0xff; src++; dst += 4; } } else { if (SDL2.data32Data !== data) { SDL2.data32 = new Int32Array(data.buffer); SDL2.data8 = new Uint8Array(data.buffer); SDL2.data32Data = data; } var data32 = SDL2.data32; num = data32.length; data32.set(HEAP32.subarray(src, src + num)); var data8 = SDL2.data8; var i = 3; var j = i + 4*num; if (num % 8 == 0) { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; } } else { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; } } } SDL2.ctx.putImageData(SDL2.image, 0, 0); },  \r\n 618545: ($0, $1, $2, $3, $4) => { var w = $0; var h = $1; var hot_x = $2; var hot_y = $3; var pixels = $4; var canvas = document.createElement(\"canvas\"); canvas.width = w; canvas.height = h; var ctx = canvas.getContext(\"2d\"); var image = ctx.createImageData(w, h); var data = image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = (val >> 24) & 0xff; src++; dst += 4; } } else { var data32 = new Int32Array(data.buffer); num = data32.length; data32.set(HEAP32.subarray(src, src + num)); } ctx.putImageData(image, 0, 0); var url = hot_x === 0 && hot_y === 0 ? \"url(\" + canvas.toDataURL() + \"), auto\" : \"url(\" + canvas.toDataURL() + \") \" + hot_x + \" \" + hot_y + \", auto\"; var urlBuf = _malloc(url.length + 1); stringToUTF8(url, urlBuf, url.length + 1); return urlBuf; },  \r\n 619534: ($0) => { if (Module['canvas']) { Module['canvas'].style['cursor'] = UTF8ToString($0); } },  \r\n 619617: () => { if (Module['canvas']) { Module['canvas'].style['cursor'] = 'none'; } },  \r\n 619686: () => { return window.innerWidth; },  \r\n 619716: () => { return window.innerHeight; },  \r\n 619747: ($0, $1) => { alert(UTF8ToString($0) + \"\\n\\n\" + UTF8ToString($1)); }\r\n};\r\n\r\n\r\n\r\n// end include: preamble.js\r\n\r\n  /** @constructor */\r\n  function ExitStatus(status) {\r\n      this.name = 'ExitStatus';\r\n      this.message = 'Program terminated with exit(' + status + ')';\r\n      this.status = status;\r\n    }\r\n\r\n  function listenOnce(object, event, func) {\r\n      object.addEventListener(event, func, { 'once': true });\r\n    }\r\n  /** @param {Object=} elements */\r\n  function autoResumeAudioContext(ctx, elements) {\r\n      if (!elements) {\r\n        elements = [document, document.getElementById('canvas')];\r\n      }\r\n      ['keydown', 'mousedown', 'touchstart'].forEach((event) => {\r\n        elements.forEach((element) => {\r\n          if (element) {\r\n            listenOnce(element, event, () => {\r\n              if (ctx.state === 'suspended') ctx.resume();\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n  function callRuntimeCallbacks(callbacks) {\r\n      while (callbacks.length > 0) {\r\n        // Pass the module as the first argument.\r\n        callbacks.shift()(Module);\r\n      }\r\n    }\r\n\r\n  function dynCallLegacy(sig, ptr, args) {\r\n      var f = Module['dynCall_' + sig];\r\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\r\n    }\r\n  \r\n  var wasmTableMirror = [];\r\n  \r\n  function getWasmTableEntry(funcPtr) {\r\n      var func = wasmTableMirror[funcPtr];\r\n      if (!func) {\r\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\r\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\r\n      }\r\n      return func;\r\n    }\r\n  /** @param {Object=} args */\r\n  function dynCall(sig, ptr, args) {\r\n      return dynCallLegacy(sig, ptr, args);\r\n    }\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {string} type\r\n     */\r\n  function getValue(ptr, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': return HEAP8[((ptr)>>0)];\r\n      case 'i8': return HEAP8[((ptr)>>0)];\r\n      case 'i16': return HEAP16[((ptr)>>1)];\r\n      case 'i32': return HEAP32[((ptr)>>2)];\r\n      case 'i64': return HEAP32[((ptr)>>2)];\r\n      case 'float': return HEAPF32[((ptr)>>2)];\r\n      case 'double': return HEAPF64[((ptr)>>3)];\r\n      case '*': return HEAPU32[((ptr)>>2)];\r\n      default: abort('invalid type for getValue: ' + type);\r\n    }\r\n  }\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {number} value\r\n     * @param {string} type\r\n     */\r\n  function setValue(ptr, value, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': HEAP8[((ptr)>>0)] = value; break;\r\n      case 'i8': HEAP8[((ptr)>>0)] = value; break;\r\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\r\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\r\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((ptr)>>2)] = tempI64[0],HEAP32[(((ptr)+(4))>>2)] = tempI64[1]); break;\r\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\r\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\r\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\r\n      default: abort('invalid type for setValue: ' + type);\r\n    }\r\n  }\r\n\r\n  /** @constructor */\r\n  function ExceptionInfo(excPtr) {\r\n      this.excPtr = excPtr;\r\n      this.ptr = excPtr - 24;\r\n  \r\n      this.set_type = function(type) {\r\n        HEAPU32[(((this.ptr)+(4))>>2)] = type;\r\n      };\r\n  \r\n      this.get_type = function() {\r\n        return HEAPU32[(((this.ptr)+(4))>>2)];\r\n      };\r\n  \r\n      this.set_destructor = function(destructor) {\r\n        HEAPU32[(((this.ptr)+(8))>>2)] = destructor;\r\n      };\r\n  \r\n      this.get_destructor = function() {\r\n        return HEAPU32[(((this.ptr)+(8))>>2)];\r\n      };\r\n  \r\n      this.set_caught = function (caught) {\r\n        caught = caught ? 1 : 0;\r\n        HEAP8[(((this.ptr)+(12))>>0)] = caught;\r\n      };\r\n  \r\n      this.get_caught = function () {\r\n        return HEAP8[(((this.ptr)+(12))>>0)] != 0;\r\n      };\r\n  \r\n      this.set_rethrown = function (rethrown) {\r\n        rethrown = rethrown ? 1 : 0;\r\n        HEAP8[(((this.ptr)+(13))>>0)] = rethrown;\r\n      };\r\n  \r\n      this.get_rethrown = function () {\r\n        return HEAP8[(((this.ptr)+(13))>>0)] != 0;\r\n      };\r\n  \r\n      // Initialize native structure fields. Should be called once after allocated.\r\n      this.init = function(type, destructor) {\r\n        this.set_adjusted_ptr(0);\r\n        this.set_type(type);\r\n        this.set_destructor(destructor);\r\n      }\r\n  \r\n      this.set_adjusted_ptr = function(adjustedPtr) {\r\n        HEAPU32[(((this.ptr)+(16))>>2)] = adjustedPtr;\r\n      };\r\n  \r\n      this.get_adjusted_ptr = function() {\r\n        return HEAPU32[(((this.ptr)+(16))>>2)];\r\n      };\r\n  \r\n      // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted\r\n      // when the pointer is casted to some of the exception object base classes (e.g. when virtual\r\n      // inheritance is used). When a pointer is thrown this method should return the thrown pointer\r\n      // itself.\r\n      this.get_exception_ptr = function() {\r\n        // Work around a fastcomp bug, this code is still included for some reason in a build without\r\n        // exceptions support.\r\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\r\n        if (isPointer) {\r\n          return HEAPU32[((this.excPtr)>>2)];\r\n        }\r\n        var adjusted = this.get_adjusted_ptr();\r\n        if (adjusted !== 0) return adjusted;\r\n        return this.excPtr;\r\n      };\r\n    }\r\n  \r\n  var exceptionLast = 0;\r\n  \r\n  var uncaughtExceptionCount = 0;\r\n  function ___cxa_throw(ptr, type, destructor) {\r\n      var info = new ExceptionInfo(ptr);\r\n      // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\r\n      info.init(type, destructor);\r\n      exceptionLast = ptr;\r\n      uncaughtExceptionCount++;\r\n      throw exceptionLast;\r\n    }\r\n\r\n  var PATH = {isAbs:(path) => path.charAt(0) === '/',splitPath:(filename) => {\r\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n        return splitPathRe.exec(filename).slice(1);\r\n      },normalizeArray:(parts, allowAboveRoot) => {\r\n        // if the path tries to go above the root, `up` ends up > 0\r\n        var up = 0;\r\n        for (var i = parts.length - 1; i >= 0; i--) {\r\n          var last = parts[i];\r\n          if (last === '.') {\r\n            parts.splice(i, 1);\r\n          } else if (last === '..') {\r\n            parts.splice(i, 1);\r\n            up++;\r\n          } else if (up) {\r\n            parts.splice(i, 1);\r\n            up--;\r\n          }\r\n        }\r\n        // if the path is allowed to go above the root, restore leading ..s\r\n        if (allowAboveRoot) {\r\n          for (; up; up--) {\r\n            parts.unshift('..');\r\n          }\r\n        }\r\n        return parts;\r\n      },normalize:(path) => {\r\n        var isAbsolute = PATH.isAbs(path),\r\n            trailingSlash = path.substr(-1) === '/';\r\n        // Normalize the path\r\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\r\n        if (!path && !isAbsolute) {\r\n          path = '.';\r\n        }\r\n        if (path && trailingSlash) {\r\n          path += '/';\r\n        }\r\n        return (isAbsolute ? '/' : '') + path;\r\n      },dirname:(path) => {\r\n        var result = PATH.splitPath(path),\r\n            root = result[0],\r\n            dir = result[1];\r\n        if (!root && !dir) {\r\n          // No dirname whatsoever\r\n          return '.';\r\n        }\r\n        if (dir) {\r\n          // It has a dirname, strip trailing slash\r\n          dir = dir.substr(0, dir.length - 1);\r\n        }\r\n        return root + dir;\r\n      },basename:(path) => {\r\n        // EMSCRIPTEN return '/'' for '/', not an empty string\r\n        if (path === '/') return '/';\r\n        path = PATH.normalize(path);\r\n        path = path.replace(/\\/$/, \"\");\r\n        var lastSlash = path.lastIndexOf('/');\r\n        if (lastSlash === -1) return path;\r\n        return path.substr(lastSlash+1);\r\n      },join:function() {\r\n        var paths = Array.prototype.slice.call(arguments);\r\n        return PATH.normalize(paths.join('/'));\r\n      },join2:(l, r) => {\r\n        return PATH.normalize(l + '/' + r);\r\n      }};\r\n  \r\n  function initRandomFill() {\r\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\r\n        // for modern web browsers\r\n        return (view) => crypto.getRandomValues(view);\r\n      } else\r\n      // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\r\n      abort(\"initRandomDevice\");\r\n    }\r\n  function randomFill(view) {\r\n      // Lazily init on the first invocation.\r\n      return (randomFill = initRandomFill())(view);\r\n    }\r\n  \r\n  \r\n  \r\n  var PATH_FS = {resolve:function() {\r\n        var resolvedPath = '',\r\n          resolvedAbsolute = false;\r\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\r\n          // Skip empty and invalid entries\r\n          if (typeof path != 'string') {\r\n            throw new TypeError('Arguments to path.resolve must be strings');\r\n          } else if (!path) {\r\n            return ''; // an invalid portion invalidates the whole thing\r\n          }\r\n          resolvedPath = path + '/' + resolvedPath;\r\n          resolvedAbsolute = PATH.isAbs(path);\r\n        }\r\n        // At this point the path should be resolved to a full absolute path, but\r\n        // handle relative paths to be safe (might happen when process.cwd() fails)\r\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\r\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n      },relative:(from, to) => {\r\n        from = PATH_FS.resolve(from).substr(1);\r\n        to = PATH_FS.resolve(to).substr(1);\r\n        function trim(arr) {\r\n          var start = 0;\r\n          for (; start < arr.length; start++) {\r\n            if (arr[start] !== '') break;\r\n          }\r\n          var end = arr.length - 1;\r\n          for (; end >= 0; end--) {\r\n            if (arr[end] !== '') break;\r\n          }\r\n          if (start > end) return [];\r\n          return arr.slice(start, end - start + 1);\r\n        }\r\n        var fromParts = trim(from.split('/'));\r\n        var toParts = trim(to.split('/'));\r\n        var length = Math.min(fromParts.length, toParts.length);\r\n        var samePartsLength = length;\r\n        for (var i = 0; i < length; i++) {\r\n          if (fromParts[i] !== toParts[i]) {\r\n            samePartsLength = i;\r\n            break;\r\n          }\r\n        }\r\n        var outputParts = [];\r\n        for (var i = samePartsLength; i < fromParts.length; i++) {\r\n          outputParts.push('..');\r\n        }\r\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n        return outputParts.join('/');\r\n      }};\r\n  \r\n  \r\n  function lengthBytesUTF8(str) {\r\n      var len = 0;\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        var c = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (c <= 0x7F) {\r\n          len++;\r\n        } else if (c <= 0x7FF) {\r\n          len += 2;\r\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\r\n          len += 4; ++i;\r\n        } else {\r\n          len += 3;\r\n        }\r\n      }\r\n      return len;\r\n    }\r\n  \r\n  function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\r\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\r\n      // undefined and false each don't write out any bytes.\r\n      if (!(maxBytesToWrite > 0))\r\n        return 0;\r\n  \r\n      var startIdx = outIdx;\r\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // and https://www.ietf.org/rfc/rfc2279.txt\r\n        // and https://tools.ietf.org/html/rfc3629\r\n        var u = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (u >= 0xD800 && u <= 0xDFFF) {\r\n          var u1 = str.charCodeAt(++i);\r\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\r\n        }\r\n        if (u <= 0x7F) {\r\n          if (outIdx >= endIdx) break;\r\n          heap[outIdx++] = u;\r\n        } else if (u <= 0x7FF) {\r\n          if (outIdx + 1 >= endIdx) break;\r\n          heap[outIdx++] = 0xC0 | (u >> 6);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else if (u <= 0xFFFF) {\r\n          if (outIdx + 2 >= endIdx) break;\r\n          heap[outIdx++] = 0xE0 | (u >> 12);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else {\r\n          if (outIdx + 3 >= endIdx) break;\r\n          heap[outIdx++] = 0xF0 | (u >> 18);\r\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        }\r\n      }\r\n      // Null-terminate the pointer to the buffer.\r\n      heap[outIdx] = 0;\r\n      return outIdx - startIdx;\r\n    }\r\n  /** @type {function(string, boolean=, number=)} */\r\n  function intArrayFromString(stringy, dontAddNull, length) {\r\n    var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\r\n    var u8array = new Array(len);\r\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n    if (dontAddNull) u8array.length = numBytesWritten;\r\n    return u8array;\r\n  }\r\n  var TTY = {ttys:[],init:function () {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\r\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\r\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\r\n        //   // with text files until FS.init can be refactored.\r\n        //   process.stdin.setEncoding('utf8');\r\n        // }\r\n      },shutdown:function() {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\r\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\r\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\r\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\r\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\r\n        //   process.stdin.pause();\r\n        // }\r\n      },register:function(dev, ops) {\r\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\r\n        FS.registerDevice(dev, TTY.stream_ops);\r\n      },stream_ops:{open:function(stream) {\r\n          var tty = TTY.ttys[stream.node.rdev];\r\n          if (!tty) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          stream.tty = tty;\r\n          stream.seekable = false;\r\n        },close:function(stream) {\r\n          // flush any pending line data\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },fsync:function(stream) {\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },read:function(stream, buffer, offset, length, pos /* ignored */) {\r\n          if (!stream.tty || !stream.tty.ops.get_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          var bytesRead = 0;\r\n          for (var i = 0; i < length; i++) {\r\n            var result;\r\n            try {\r\n              result = stream.tty.ops.get_char(stream.tty);\r\n            } catch (e) {\r\n              throw new FS.ErrnoError(29);\r\n            }\r\n            if (result === undefined && bytesRead === 0) {\r\n              throw new FS.ErrnoError(6);\r\n            }\r\n            if (result === null || result === undefined) break;\r\n            bytesRead++;\r\n            buffer[offset+i] = result;\r\n          }\r\n          if (bytesRead) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return bytesRead;\r\n        },write:function(stream, buffer, offset, length, pos) {\r\n          if (!stream.tty || !stream.tty.ops.put_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          try {\r\n            for (var i = 0; i < length; i++) {\r\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\r\n            }\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n          if (length) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return i;\r\n        }},default_tty_ops:{get_char:function(tty) {\r\n          if (!tty.input.length) {\r\n            var result = null;\r\n            if (typeof window != 'undefined' &&\r\n              typeof window.prompt == 'function') {\r\n              // Browser.\r\n              result = window.prompt('Input: ');  // returns null on cancel\r\n              if (result !== null) {\r\n                result += '\\n';\r\n              }\r\n            } else if (typeof readline == 'function') {\r\n              // Command line.\r\n              result = readline();\r\n              if (result !== null) {\r\n                result += '\\n';\r\n              }\r\n            }\r\n            if (!result) {\r\n              return null;\r\n            }\r\n            tty.input = intArrayFromString(result, true);\r\n          }\r\n          return tty.input.shift();\r\n        },put_char:function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\r\n          }\r\n        },fsync:function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        }},default_tty1_ops:{put_char:function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val);\r\n          }\r\n        },fsync:function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        }}};\r\n  \r\n  \r\n  function zeroMemory(address, size) {\r\n      HEAPU8.fill(0, address, address + size);\r\n      return address;\r\n    }\r\n  \r\n  function alignMemory(size, alignment) {\r\n      return Math.ceil(size / alignment) * alignment;\r\n    }\r\n  function mmapAlloc(size) {\r\n      abort();\r\n    }\r\n  var MEMFS = {ops_table:null,mount:function(mount) {\r\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\r\n      },createNode:function(parent, name, mode, dev) {\r\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n          // no supported\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (!MEMFS.ops_table) {\r\n          MEMFS.ops_table = {\r\n            dir: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr,\r\n                lookup: MEMFS.node_ops.lookup,\r\n                mknod: MEMFS.node_ops.mknod,\r\n                rename: MEMFS.node_ops.rename,\r\n                unlink: MEMFS.node_ops.unlink,\r\n                rmdir: MEMFS.node_ops.rmdir,\r\n                readdir: MEMFS.node_ops.readdir,\r\n                symlink: MEMFS.node_ops.symlink\r\n              },\r\n              stream: {\r\n                llseek: MEMFS.stream_ops.llseek\r\n              }\r\n            },\r\n            file: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr\r\n              },\r\n              stream: {\r\n                llseek: MEMFS.stream_ops.llseek,\r\n                read: MEMFS.stream_ops.read,\r\n                write: MEMFS.stream_ops.write,\r\n                allocate: MEMFS.stream_ops.allocate,\r\n                mmap: MEMFS.stream_ops.mmap,\r\n                msync: MEMFS.stream_ops.msync\r\n              }\r\n            },\r\n            link: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr,\r\n                readlink: MEMFS.node_ops.readlink\r\n              },\r\n              stream: {}\r\n            },\r\n            chrdev: {\r\n              node: {\r\n                getattr: MEMFS.node_ops.getattr,\r\n                setattr: MEMFS.node_ops.setattr\r\n              },\r\n              stream: FS.chrdev_stream_ops\r\n            }\r\n          };\r\n        }\r\n        var node = FS.createNode(parent, name, mode, dev);\r\n        if (FS.isDir(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.dir.node;\r\n          node.stream_ops = MEMFS.ops_table.dir.stream;\r\n          node.contents = {};\r\n        } else if (FS.isFile(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.file.node;\r\n          node.stream_ops = MEMFS.ops_table.file.stream;\r\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\r\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\r\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\r\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\r\n          node.contents = null; \r\n        } else if (FS.isLink(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.link.node;\r\n          node.stream_ops = MEMFS.ops_table.link.stream;\r\n        } else if (FS.isChrdev(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.chrdev.node;\r\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\r\n        }\r\n        node.timestamp = Date.now();\r\n        // add the new node to the parent\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n          parent.timestamp = node.timestamp;\r\n        }\r\n        return node;\r\n      },getFileDataAsTypedArray:function(node) {\r\n        if (!node.contents) return new Uint8Array(0);\r\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\r\n        return new Uint8Array(node.contents);\r\n      },expandFileStorage:function(node, newCapacity) {\r\n        var prevCapacity = node.contents ? node.contents.length : 0;\r\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\r\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\r\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\r\n        // avoid overshooting the allocation cap by a very large margin.\r\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\r\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\r\n        var oldContents = node.contents;\r\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\r\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\r\n      },resizeFileStorage:function(node, newSize) {\r\n        if (node.usedBytes == newSize) return;\r\n        if (newSize == 0) {\r\n          node.contents = null; // Fully decommit when requesting a resize to zero.\r\n          node.usedBytes = 0;\r\n        } else {\r\n          var oldContents = node.contents;\r\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\r\n          if (oldContents) {\r\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\r\n          }\r\n          node.usedBytes = newSize;\r\n        }\r\n      },node_ops:{getattr:function(node) {\r\n          var attr = {};\r\n          // device numbers reuse inode numbers.\r\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n          attr.ino = node.id;\r\n          attr.mode = node.mode;\r\n          attr.nlink = 1;\r\n          attr.uid = 0;\r\n          attr.gid = 0;\r\n          attr.rdev = node.rdev;\r\n          if (FS.isDir(node.mode)) {\r\n            attr.size = 4096;\r\n          } else if (FS.isFile(node.mode)) {\r\n            attr.size = node.usedBytes;\r\n          } else if (FS.isLink(node.mode)) {\r\n            attr.size = node.link.length;\r\n          } else {\r\n            attr.size = 0;\r\n          }\r\n          attr.atime = new Date(node.timestamp);\r\n          attr.mtime = new Date(node.timestamp);\r\n          attr.ctime = new Date(node.timestamp);\r\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\r\n          //       but this is not required by the standard.\r\n          attr.blksize = 4096;\r\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n          return attr;\r\n        },setattr:function(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n          if (attr.size !== undefined) {\r\n            MEMFS.resizeFileStorage(node, attr.size);\r\n          }\r\n        },lookup:function(parent, name) {\r\n          throw FS.genericErrors[44];\r\n        },mknod:function(parent, name, mode, dev) {\r\n          return MEMFS.createNode(parent, name, mode, dev);\r\n        },rename:function(old_node, new_dir, new_name) {\r\n          // if we're overwriting a directory at new_name, make sure it's empty.\r\n          if (FS.isDir(old_node.mode)) {\r\n            var new_node;\r\n            try {\r\n              new_node = FS.lookupNode(new_dir, new_name);\r\n            } catch (e) {\r\n            }\r\n            if (new_node) {\r\n              for (var i in new_node.contents) {\r\n                throw new FS.ErrnoError(55);\r\n              }\r\n            }\r\n          }\r\n          // do the internal rewiring\r\n          delete old_node.parent.contents[old_node.name];\r\n          old_node.parent.timestamp = Date.now()\r\n          old_node.name = new_name;\r\n          new_dir.contents[new_name] = old_node;\r\n          new_dir.timestamp = old_node.parent.timestamp;\r\n          old_node.parent = new_dir;\r\n        },unlink:function(parent, name) {\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },rmdir:function(parent, name) {\r\n          var node = FS.lookupNode(parent, name);\r\n          for (var i in node.contents) {\r\n            throw new FS.ErrnoError(55);\r\n          }\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },readdir:function(node) {\r\n          var entries = ['.', '..'];\r\n          for (var key in node.contents) {\r\n            if (!node.contents.hasOwnProperty(key)) {\r\n              continue;\r\n            }\r\n            entries.push(key);\r\n          }\r\n          return entries;\r\n        },symlink:function(parent, newname, oldpath) {\r\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\r\n          node.link = oldpath;\r\n          return node;\r\n        },readlink:function(node) {\r\n          if (!FS.isLink(node.mode)) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return node.link;\r\n        }},stream_ops:{read:function(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= stream.node.usedBytes) return 0;\r\n          var size = Math.min(stream.node.usedBytes - position, length);\r\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\r\n            buffer.set(contents.subarray(position, position + size), offset);\r\n          } else {\r\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\r\n          }\r\n          return size;\r\n        },write:function(stream, buffer, offset, length, position, canOwn) {\r\n          // If the buffer is located in main memory (HEAP), and if\r\n          // memory can grow, we can't hold on to references of the\r\n          // memory buffer, as they may get invalidated. That means we\r\n          // need to do copy its contents.\r\n          if (buffer.buffer === HEAP8.buffer) {\r\n            canOwn = false;\r\n          }\r\n  \r\n          if (!length) return 0;\r\n          var node = stream.node;\r\n          node.timestamp = Date.now();\r\n  \r\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\r\n            if (canOwn) {\r\n              node.contents = buffer.subarray(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\r\n              node.contents = buffer.slice(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\r\n              node.contents.set(buffer.subarray(offset, offset + length), position);\r\n              return length;\r\n            }\r\n          }\r\n  \r\n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\r\n          MEMFS.expandFileStorage(node, position+length);\r\n          if (node.contents.subarray && buffer.subarray) {\r\n            // Use typed array write which is available.\r\n            node.contents.set(buffer.subarray(offset, offset + length), position);\r\n          } else {\r\n            for (var i = 0; i < length; i++) {\r\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\r\n            }\r\n          }\r\n          node.usedBytes = Math.max(node.usedBytes, position + length);\r\n          return length;\r\n        },llseek:function(stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.usedBytes;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        },allocate:function(stream, offset, length) {\r\n          MEMFS.expandFileStorage(stream.node, offset + length);\r\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\r\n        },mmap:function(stream, length, position, prot, flags) {\r\n          if (!FS.isFile(stream.node.mode)) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          var ptr;\r\n          var allocated;\r\n          var contents = stream.node.contents;\r\n          // Only make a new copy when MAP_PRIVATE is specified.\r\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\r\n            // We can't emulate MAP_SHARED when the file is not backed by the\r\n            // buffer we're mapping to (e.g. the HEAP buffer).\r\n            allocated = false;\r\n            ptr = contents.byteOffset;\r\n          } else {\r\n            // Try to avoid unnecessary slices.\r\n            if (position > 0 || position + length < contents.length) {\r\n              if (contents.subarray) {\r\n                contents = contents.subarray(position, position + length);\r\n              } else {\r\n                contents = Array.prototype.slice.call(contents, position, position + length);\r\n              }\r\n            }\r\n            allocated = true;\r\n            ptr = mmapAlloc(length);\r\n            if (!ptr) {\r\n              throw new FS.ErrnoError(48);\r\n            }\r\n            HEAP8.set(contents, ptr);\r\n          }\r\n          return { ptr: ptr, allocated: allocated };\r\n        },msync:function(stream, buffer, offset, length, mmapFlags) {\r\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\r\n          // should we check if bytesWritten and length are the same?\r\n          return 0;\r\n        }}};\r\n  \r\n  /** @param {boolean=} noRunDep */\r\n  function asyncLoad(url, onload, onerror, noRunDep) {\r\n      var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\r\n      readAsync(url, (arrayBuffer) => {\r\n        assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\r\n        onload(new Uint8Array(arrayBuffer));\r\n        if (dep) removeRunDependency(dep);\r\n      }, (event) => {\r\n        if (onerror) {\r\n          onerror();\r\n        } else {\r\n          throw 'Loading data file \"' + url + '\" failed.';\r\n        }\r\n      });\r\n      if (dep) addRunDependency(dep);\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  var IDBFS = {dbs:{},indexedDB:() => {\r\n        if (typeof indexedDB != 'undefined') return indexedDB;\r\n        var ret = null;\r\n        if (typeof window == 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        assert(ret, 'IDBFS used, but indexedDB not supported');\r\n        return ret;\r\n      },DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:function(mount) {\r\n        // reuse all of the core MEMFS functionality\r\n        return MEMFS.mount.apply(null, arguments);\r\n      },syncfs:(mount, populate, callback) => {\r\n        IDBFS.getLocalSet(mount, (err, local) => {\r\n          if (err) return callback(err);\r\n  \r\n          IDBFS.getRemoteSet(mount, (err, remote) => {\r\n            if (err) return callback(err);\r\n  \r\n            var src = populate ? remote : local;\r\n            var dst = populate ? local : remote;\r\n  \r\n            IDBFS.reconcile(src, dst, callback);\r\n          });\r\n        });\r\n      },quit:() => {\r\n        Object.values(IDBFS.dbs).forEach((value) => value.close());\r\n        IDBFS.dbs = {};\r\n      },getDB:(name, callback) => {\r\n        // check the cache first\r\n        var db = IDBFS.dbs[name];\r\n        if (db) {\r\n          return callback(null, db);\r\n        }\r\n  \r\n        var req;\r\n        try {\r\n          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n        if (!req) {\r\n          return callback(\"Unable to connect to IndexedDB\");\r\n        }\r\n        req.onupgradeneeded = (e) => {\r\n          var db = /** @type {IDBDatabase} */ (e.target.result);\r\n          var transaction = e.target.transaction;\r\n  \r\n          var fileStore;\r\n  \r\n          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\r\n            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n          } else {\r\n            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);\r\n          }\r\n  \r\n          if (!fileStore.indexNames.contains('timestamp')) {\r\n            fileStore.createIndex('timestamp', 'timestamp', { unique: false });\r\n          }\r\n        };\r\n        req.onsuccess = () => {\r\n          db = /** @type {IDBDatabase} */ (req.result);\r\n  \r\n          // add to the cache\r\n          IDBFS.dbs[name] = db;\r\n          callback(null, db);\r\n        };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },getLocalSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        function isRealDir(p) {\r\n          return p !== '.' && p !== '..';\r\n        };\r\n        function toAbsolute(root) {\r\n          return (p) => {\r\n            return PATH.join2(root, p);\r\n          }\r\n        };\r\n  \r\n        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\r\n  \r\n        while (check.length) {\r\n          var path = check.pop();\r\n          var stat;\r\n  \r\n          try {\r\n            stat = FS.stat(path);\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));\r\n          }\r\n  \r\n          entries[path] = { 'timestamp': stat.mtime };\r\n        }\r\n  \r\n        return callback(null, { type: 'local', entries: entries });\r\n      },getRemoteSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        IDBFS.getDB(mount.mountpoint, (err, db) => {\r\n          if (err) return callback(err);\r\n  \r\n          try {\r\n            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');\r\n            transaction.onerror = (e) => {\r\n              callback(this.error);\r\n              e.preventDefault();\r\n            };\r\n  \r\n            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n            var index = store.index('timestamp');\r\n  \r\n            index.openKeyCursor().onsuccess = (event) => {\r\n              var cursor = event.target.result;\r\n  \r\n              if (!cursor) {\r\n                return callback(null, { type: 'remote', db: db, entries: entries });\r\n              }\r\n  \r\n              entries[cursor.primaryKey] = { 'timestamp': cursor.key };\r\n  \r\n              cursor.continue();\r\n            };\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n        });\r\n      },loadLocalEntry:(path, callback) => {\r\n        var stat, node;\r\n  \r\n        try {\r\n          var lookup = FS.lookupPath(path);\r\n          node = lookup.node;\r\n          stat = FS.stat(path);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        if (FS.isDir(stat.mode)) {\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode });\r\n        } else if (FS.isFile(stat.mode)) {\r\n          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.\r\n          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.\r\n          node.contents = MEMFS.getFileDataAsTypedArray(node);\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode, 'contents': node.contents });\r\n        } else {\r\n          return callback(new Error('node type not supported'));\r\n        }\r\n      },storeLocalEntry:(path, entry, callback) => {\r\n        try {\r\n          if (FS.isDir(entry['mode'])) {\r\n            FS.mkdirTree(path, entry['mode']);\r\n          } else if (FS.isFile(entry['mode'])) {\r\n            FS.writeFile(path, entry['contents'], { canOwn: true });\r\n          } else {\r\n            return callback(new Error('node type not supported'));\r\n          }\r\n  \r\n          FS.chmod(path, entry['mode']);\r\n          FS.utime(path, entry['timestamp'], entry['timestamp']);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },removeLocalEntry:(path, callback) => {\r\n        try {\r\n          var stat = FS.stat(path);\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            FS.rmdir(path);\r\n          } else if (FS.isFile(stat.mode)) {\r\n            FS.unlink(path);\r\n          }\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },loadRemoteEntry:(store, path, callback) => {\r\n        var req = store.get(path);\r\n        req.onsuccess = (event) => { callback(null, event.target.result); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },storeRemoteEntry:(store, path, entry, callback) => {\r\n        try {\r\n          var req = store.put(entry, path);\r\n        } catch (e) {\r\n          callback(e);\r\n          return;\r\n        }\r\n        req.onsuccess = () => { callback(null); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },removeRemoteEntry:(store, path, callback) => {\r\n        var req = store.delete(path);\r\n        req.onsuccess = () => { callback(null); };\r\n        req.onerror = (e) => {\r\n          callback(this.error);\r\n          e.preventDefault();\r\n        };\r\n      },reconcile:(src, dst, callback) => {\r\n        var total = 0;\r\n  \r\n        var create = [];\r\n        Object.keys(src.entries).forEach(function (key) {\r\n          var e = src.entries[key];\r\n          var e2 = dst.entries[key];\r\n          if (!e2 || e['timestamp'].getTime() != e2['timestamp'].getTime()) {\r\n            create.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        var remove = [];\r\n        Object.keys(dst.entries).forEach(function (key) {\r\n          if (!src.entries[key]) {\r\n            remove.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        if (!total) {\r\n          return callback(null);\r\n        }\r\n  \r\n        var errored = false;\r\n        var db = src.type === 'remote' ? src.db : dst.db;\r\n        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');\r\n        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n  \r\n        function done(err) {\r\n          if (err && !errored) {\r\n            errored = true;\r\n            return callback(err);\r\n          }\r\n        };\r\n  \r\n        transaction.onerror = (e) => {\r\n          done(this.error);\r\n          e.preventDefault();\r\n        };\r\n  \r\n        transaction.oncomplete = (e) => {\r\n          if (!errored) {\r\n            callback(null);\r\n          }\r\n        };\r\n  \r\n        // sort paths in ascending order so directory entries are created\r\n        // before the files inside them\r\n        create.sort().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.loadRemoteEntry(store, path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeLocalEntry(path, entry, done);\r\n            });\r\n          } else {\r\n            IDBFS.loadLocalEntry(path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeRemoteEntry(store, path, entry, done);\r\n            });\r\n          }\r\n        });\r\n  \r\n        // sort paths in descending order so files are deleted before their\r\n        // parent directories\r\n        remove.sort().reverse().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.removeLocalEntry(path, done);\r\n          } else {\r\n            IDBFS.removeRemoteEntry(store, path, done);\r\n          }\r\n        });\r\n      }};\r\n  \r\n  var LZ4 = {DIR_MODE:16895,FILE_MODE:33279,CHUNK_SIZE:-1,codec:null,init:function() {\r\n        if (LZ4.codec) return;\r\n        LZ4.codec = (function() {\r\n          /*\r\n  MiniLZ4: Minimal LZ4 block decoding and encoding.\r\n  \r\n  based off of node-lz4, https://github.com/pierrec/node-lz4\r\n  \r\n  ====\r\n  Copyright (c) 2012 Pierre Curto\r\n  \r\n  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n  of this software and associated documentation files (the \"Software\"), to deal\r\n  in the Software without restriction, including without limitation the rights\r\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n  copies of the Software, and to permit persons to whom the Software is\r\n  furnished to do so, subject to the following conditions:\r\n  \r\n  The above copyright notice and this permission notice shall be included in\r\n  all copies or substantial portions of the Software.\r\n  \r\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n  THE SOFTWARE.\r\n  ====\r\n  \r\n  changes have the same license\r\n  */\r\n  \r\n  var MiniLZ4 = (function() {\r\n  \r\n  var exports = {};\r\n  \r\n  /**\r\n   * Decode a block. Assumptions: input contains all sequences of a \r\n   * chunk, output is large enough to receive the decoded data.\r\n   * If the output buffer is too small, an error will be thrown.\r\n   * If the returned value is negative, an error occured at the returned offset.\r\n   *\r\n   * @param {ArrayBufferView} input input data\r\n   * @param {ArrayBufferView} output output data\r\n   * @param {number=} sIdx\r\n   * @param {number=} eIdx\r\n   * @return {number} number of decoded bytes\r\n   * @private\r\n   */\r\n  exports.uncompress = function (input, output, sIdx, eIdx) {\r\n  \tsIdx = sIdx || 0\r\n  \teIdx = eIdx || (input.length - sIdx)\r\n  \t// Process each sequence in the incoming data\r\n  \tfor (var i = sIdx, n = eIdx, j = 0; i < n;) {\r\n  \t\tvar token = input[i++]\r\n  \r\n  \t\t// Literals\r\n  \t\tvar literals_length = (token >> 4)\r\n  \t\tif (literals_length > 0) {\r\n  \t\t\t// length of literals\r\n  \t\t\tvar l = literals_length + 240\r\n  \t\t\twhile (l === 255) {\r\n  \t\t\t\tl = input[i++]\r\n  \t\t\t\tliterals_length += l\r\n  \t\t\t}\r\n  \r\n  \t\t\t// Copy the literals\r\n  \t\t\tvar end = i + literals_length\r\n  \t\t\twhile (i < end) output[j++] = input[i++]\r\n  \r\n  \t\t\t// End of buffer?\r\n  \t\t\tif (i === n) return j\r\n  \t\t}\r\n  \r\n  \t\t// Match copy\r\n  \t\t// 2 bytes offset (little endian)\r\n  \t\tvar offset = input[i++] | (input[i++] << 8)\r\n  \r\n  \t\t// XXX 0 is an invalid offset value\r\n  \t\tif (offset === 0) return j\r\n  \t\tif (offset > j) return -(i-2)\r\n  \r\n  \t\t// length of match copy\r\n  \t\tvar match_length = (token & 0xf)\r\n  \t\tvar l = match_length + 240\r\n  \t\twhile (l === 255) {\r\n  \t\t\tl = input[i++]\r\n  \t\t\tmatch_length += l\r\n  \t\t}\r\n  \r\n  \t\t// Copy the match\r\n  \t\tvar pos = j - offset // position of the match copy in the current output\r\n  \t\tvar end = j + match_length + 4 // minmatch = 4\r\n  \t\twhile (j < end) output[j++] = output[pos++]\r\n  \t}\r\n  \r\n  \treturn j\r\n  }\r\n  \r\n  var\r\n  \tmaxInputSize\t= 0x7E000000\r\n  ,\tminMatch\t\t= 4\r\n  // uint32() optimization\r\n  ,\thashLog\t\t\t= 16\r\n  ,\thashShift\t\t= (minMatch * 8) - hashLog\r\n  ,\thashSize\t\t= 1 << hashLog\r\n  \r\n  ,\tcopyLength\t\t= 8\r\n  ,\tlastLiterals\t= 5\r\n  ,\tmfLimit\t\t\t= copyLength + minMatch\r\n  ,\tskipStrength\t= 6\r\n  \r\n  ,\tmlBits  \t\t= 4\r\n  ,\tmlMask  \t\t= (1 << mlBits) - 1\r\n  ,\trunBits \t\t= 8 - mlBits\r\n  ,\trunMask \t\t= (1 << runBits) - 1\r\n  \r\n  ,\thasher \t\t\t= /* XXX uint32( */ 2654435761 /* ) */\r\n  \r\n  assert(hashShift === 16);\r\n  var hashTable = new Int16Array(1<<16);\r\n  var empty = new Int16Array(hashTable.length);\r\n  \r\n  // CompressBound returns the maximum length of a lz4 block, given it's uncompressed length\r\n  exports.compressBound = function (isize) {\r\n  \treturn isize > maxInputSize\r\n  \t\t? 0\r\n  \t\t: (isize + (isize/255) + 16) | 0\r\n  }\r\n  \r\n  /** @param {number=} sIdx\r\n  \t@param {number=} eIdx */\r\n  exports.compress = function (src, dst, sIdx, eIdx) {\r\n  \thashTable.set(empty);\r\n  \treturn compressBlock(src, dst, 0, sIdx || 0, eIdx || dst.length)\r\n  }\r\n  \r\n  function compressBlock (src, dst, pos, sIdx, eIdx) {\r\n  \t// XXX var Hash = uint32() // Reusable unsigned 32 bits integer\r\n  \tvar dpos = sIdx\r\n  \tvar dlen = eIdx - sIdx\r\n  \tvar anchor = 0\r\n  \r\n  \tif (src.length >= maxInputSize) throw new Error(\"input too large\")\r\n  \r\n  \t// Minimum of input bytes for compression (LZ4 specs)\r\n  \tif (src.length > mfLimit) {\r\n  \t\tvar n = exports.compressBound(src.length)\r\n  \t\tif ( dlen < n ) throw Error(\"output too small: \" + dlen + \" < \" + n)\r\n  \r\n  \t\tvar \r\n  \t\t\tstep  = 1\r\n  \t\t,\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \t\t// Keep last few bytes incompressible (LZ4 specs):\r\n  \t\t// last 5 bytes must be literals\r\n  \t\t,\tsrcLength = src.length - mfLimit\r\n  \r\n  \t\twhile (pos + minMatch < srcLength) {\r\n  \t\t\t// Find a match\r\n  \t\t\t// min match of 4 bytes aka sequence\r\n  \t\t\tvar sequenceLowBits = src[pos+1]<<8 | src[pos]\r\n  \t\t\tvar sequenceHighBits = src[pos+3]<<8 | src[pos+2]\r\n  \t\t\t// compute hash for the current sequence\r\n  \t\t\tvar hash = Math.imul(sequenceLowBits | (sequenceHighBits << 16), hasher) >>> hashShift;\r\n  \t\t\t/* XXX Hash.fromBits(sequenceLowBits, sequenceHighBits)\r\n  \t\t\t\t\t\t\t.multiply(hasher)\r\n  \t\t\t\t\t\t\t.shiftr(hashShift)\r\n  \t\t\t\t\t\t\t.toNumber() */\r\n  \t\t\t// get the position of the sequence matching the hash\r\n  \t\t\t// NB. since 2 different sequences may have the same hash\r\n  \t\t\t// it is double-checked below\r\n  \t\t\t// do -1 to distinguish between initialized and uninitialized values\r\n  \t\t\tvar ref = hashTable[hash] - 1\r\n  \t\t\t// save position of current sequence in hash table\r\n  \t\t\thashTable[hash] = pos + 1\r\n  \r\n  \t\t\t// first reference or within 64k limit or current sequence !== hashed one: no match\r\n  \t\t\tif ( ref < 0 ||\r\n  \t\t\t\t((pos - ref) >>> 16) > 0 ||\r\n  \t\t\t\t(\r\n  \t\t\t\t\t((src[ref+3]<<8 | src[ref+2]) != sequenceHighBits) ||\r\n  \t\t\t\t\t((src[ref+1]<<8 | src[ref]) != sequenceLowBits )\r\n  \t\t\t\t)\r\n  \t\t\t) {\r\n  \t\t\t\t// increase step if nothing found within limit\r\n  \t\t\t\tstep = findMatchAttempts++ >> skipStrength\r\n  \t\t\t\tpos += step\r\n  \t\t\t\tcontinue\r\n  \t\t\t}\r\n  \r\n  \t\t\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \r\n  \t\t\t// got a match\r\n  \t\t\tvar literals_length = pos - anchor\r\n  \t\t\tvar offset = pos - ref\r\n  \r\n  \t\t\t// minMatch already verified\r\n  \t\t\tpos += minMatch\r\n  \t\t\tref += minMatch\r\n  \r\n  \t\t\t// move to the end of the match (>=minMatch)\r\n  \t\t\tvar match_length = pos\r\n  \t\t\twhile (pos < srcLength && src[pos] == src[ref]) {\r\n  \t\t\t\tpos++\r\n  \t\t\t\tref++\r\n  \t\t\t}\r\n  \r\n  \t\t\t// match length\r\n  \t\t\tmatch_length = pos - match_length\r\n  \r\n  \t\t\t// token\r\n  \t\t\tvar token = match_length < mlMask ? match_length : mlMask\r\n  \r\n  \t\t\t// encode literals length\r\n  \t\t\tif (literals_length >= runMask) {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (runMask << mlBits) + token\r\n  \t\t\t\tfor (var len = literals_length - runMask; len > 254; len -= 255) {\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \t\t\t\tdst[dpos++] = len\r\n  \t\t\t} else {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (literals_length << mlBits) + token\r\n  \t\t\t}\r\n  \r\n  \t\t\t// write literals\r\n  \t\t\tfor (var i = 0; i < literals_length; i++) {\r\n  \t\t\t\tdst[dpos++] = src[anchor+i]\r\n  \t\t\t}\r\n  \r\n  \t\t\t// encode offset\r\n  \t\t\tdst[dpos++] = offset\r\n  \t\t\tdst[dpos++] = (offset >> 8)\r\n  \r\n  \t\t\t// encode match length\r\n  \t\t\tif (match_length >= mlMask) {\r\n  \t\t\t\tmatch_length -= mlMask\r\n  \t\t\t\twhile (match_length >= 255) {\r\n  \t\t\t\t\tmatch_length -= 255\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \r\n  \t\t\t\tdst[dpos++] = match_length\r\n  \t\t\t}\r\n  \r\n  \t\t\tanchor = pos\r\n  \t\t}\r\n  \t}\r\n  \r\n  \t// cannot compress input\r\n  \tif (anchor == 0) return 0\r\n  \r\n  \t// Write last literals\r\n  \t// encode literals length\r\n  \tliterals_length = src.length - anchor\r\n  \tif (literals_length >= runMask) {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (runMask << mlBits)\r\n  \t\tfor (var ln = literals_length - runMask; ln > 254; ln -= 255) {\r\n  \t\t\tdst[dpos++] = 255\r\n  \t\t}\r\n  \t\tdst[dpos++] = ln\r\n  \t} else {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (literals_length << mlBits)\r\n  \t}\r\n  \r\n  \t// write literals\r\n  \tpos = anchor\r\n  \twhile (pos < src.length) {\r\n  \t\tdst[dpos++] = src[pos++]\r\n  \t}\r\n  \r\n  \treturn dpos\r\n  }\r\n  \r\n  exports.CHUNK_SIZE = 2048; // musl libc does readaheads of 1024 bytes, so a multiple of that is a good idea\r\n  \r\n  exports.compressPackage = function(data, verify) {\r\n    if (verify) {\r\n      var temp = new Uint8Array(exports.CHUNK_SIZE);\r\n    }\r\n    // compress the data in chunks\r\n    assert(data instanceof ArrayBuffer);\r\n    data = new Uint8Array(data);\r\n    console.log('compressing package of size ' + data.length);\r\n    var compressedChunks = [];\r\n    var successes = [];\r\n    var offset = 0;\r\n    var total = 0;\r\n    while (offset < data.length) {\r\n      var chunk = data.subarray(offset, offset + exports.CHUNK_SIZE);\r\n      //console.log('compress a chunk ' + [offset, total, data.length]);\r\n      offset += exports.CHUNK_SIZE;\r\n      var bound = exports.compressBound(chunk.length);\r\n      var compressed = new Uint8Array(bound);\r\n      var compressedSize = exports.compress(chunk, compressed);\r\n      if (compressedSize > 0) {\r\n        assert(compressedSize <= bound);\r\n        compressed = compressed.subarray(0, compressedSize);\r\n        compressedChunks.push(compressed);\r\n        total += compressedSize;\r\n        successes.push(1);\r\n        if (verify) {\r\n          var back = exports.uncompress(compressed, temp);\r\n          assert(back === chunk.length, [back, chunk.length]);\r\n          for (var i = 0; i < chunk.length; i++) {\r\n            assert(chunk[i] === temp[i]);\r\n          }\r\n        }\r\n      } else {\r\n        assert(compressedSize === 0);\r\n        // failure to compress :(\r\n        compressedChunks.push(chunk);\r\n        total += chunk.length; // last chunk may not be the full exports.CHUNK_SIZE size\r\n        successes.push(0);\r\n      }\r\n    }\r\n    data = null; // XXX null out pack['data'] too?\r\n    var compressedData = {\r\n      'data': new Uint8Array(total + exports.CHUNK_SIZE*2), // store all the compressed data, plus room for two cached decompressed chunk, in one fast array\r\n      'cachedOffset': total,\r\n      'cachedIndexes': [-1, -1], // cache last two blocks, so that reading 1,2,3 + preloading another block won't trigger decompress thrashing\r\n      'cachedChunks': [null, null],\r\n      'offsets': [], // chunk# => start in compressed data\r\n      'sizes': [],\r\n      'successes': successes, // 1 if chunk is compressed\r\n    };\r\n    offset = 0;\r\n    for (var i = 0; i < compressedChunks.length; i++) {\r\n      compressedData['data'].set(compressedChunks[i], offset);\r\n      compressedData['offsets'][i] = offset;\r\n      compressedData['sizes'][i] = compressedChunks[i].length\r\n      offset += compressedChunks[i].length;\r\n    }\r\n    console.log('compressed package into ' + [compressedData['data'].length]);\r\n    assert(offset === total);\r\n    return compressedData;\r\n  };\r\n  \r\n  assert(exports.CHUNK_SIZE < (1 << 15)); // we use 16-bit ints as the type of the hash table, chunk size must be smaller\r\n  \r\n  return exports;\r\n  \r\n  })();\r\n  \r\n  ;\r\n          return MiniLZ4;\r\n        })();\r\n        LZ4.CHUNK_SIZE = LZ4.codec.CHUNK_SIZE;\r\n      },loadPackage:function (pack, preloadPlugin) {\r\n        LZ4.init();\r\n        var compressedData = pack['compressedData'];\r\n        if (!compressedData) compressedData = LZ4.codec.compressPackage(pack['data']);\r\n        assert(compressedData['cachedIndexes'].length === compressedData['cachedChunks'].length);\r\n        for (var i = 0; i < compressedData['cachedIndexes'].length; i++) {\r\n          compressedData['cachedIndexes'][i] = -1;\r\n          compressedData['cachedChunks'][i] = compressedData['data'].subarray(compressedData['cachedOffset'] + i*LZ4.CHUNK_SIZE,\r\n                                                                        compressedData['cachedOffset'] + (i+1)*LZ4.CHUNK_SIZE);\r\n          assert(compressedData['cachedChunks'][i].length === LZ4.CHUNK_SIZE);\r\n        }\r\n        pack['metadata'].files.forEach(function(file) {\r\n          var dir = PATH.dirname(file.filename);\r\n          var name = PATH.basename(file.filename);\r\n          FS.createPath('', dir, true, true);\r\n          var parent = FS.analyzePath(dir).object;\r\n          LZ4.createNode(parent, name, LZ4.FILE_MODE, 0, {\r\n            compressedData: compressedData,\r\n            start: file.start,\r\n            end: file.end,\r\n          });\r\n        });\r\n        // Preload files if necessary. This code is largely similar to\r\n        // createPreloadedFile in library_fs.js. However, a main difference here\r\n        // is that we only decompress the file if it can be preloaded.\r\n        // Abstracting out the common parts seems to be more effort than it is\r\n        // worth.\r\n        if (preloadPlugin) {\r\n          Browser.init();\r\n          pack['metadata'].files.forEach(function(file) {\r\n            var handled = false;\r\n            var fullname = file.filename;\r\n            Module['preloadPlugins'].forEach(function(plugin) {\r\n              if (handled) return;\r\n              if (plugin['canHandle'](fullname)) {\r\n                var dep = getUniqueRunDependency('fp ' + fullname);\r\n                addRunDependency(dep);\r\n                var finish = () => removeRunDependency(dep);\r\n                var byteArray = FS.readFile(fullname);\r\n                plugin['handle'](byteArray, fullname, finish, finish);\r\n                handled = true;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      },createNode:function (parent, name, mode, dev, contents, mtime) {\r\n        var node = FS.createNode(parent, name, mode);\r\n        node.mode = mode;\r\n        node.node_ops = LZ4.node_ops;\r\n        node.stream_ops = LZ4.stream_ops;\r\n        node.timestamp = (mtime || new Date).getTime();\r\n        assert(LZ4.FILE_MODE !== LZ4.DIR_MODE);\r\n        if (mode === LZ4.FILE_MODE) {\r\n          node.size = contents.end - contents.start;\r\n          node.contents = contents;\r\n        } else {\r\n          node.size = 4096;\r\n          node.contents = {};\r\n        }\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n        }\r\n        return node;\r\n      },node_ops:{getattr:function(node) {\r\n          return {\r\n            dev: 1,\r\n            ino: node.id,\r\n            mode: node.mode,\r\n            nlink: 1,\r\n            uid: 0,\r\n            gid: 0,\r\n            rdev: undefined,\r\n            size: node.size,\r\n            atime: new Date(node.timestamp),\r\n            mtime: new Date(node.timestamp),\r\n            ctime: new Date(node.timestamp),\r\n            blksize: 4096,\r\n            blocks: Math.ceil(node.size / 4096),\r\n          };\r\n        },setattr:function(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n        },lookup:function(parent, name) {\r\n          throw new FS.ErrnoError(44);\r\n        },mknod:function (parent, name, mode, dev) {\r\n          throw new FS.ErrnoError(63);\r\n        },rename:function (oldNode, newDir, newName) {\r\n          throw new FS.ErrnoError(63);\r\n        },unlink:function(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },rmdir:function(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },readdir:function(node) {\r\n          throw new FS.ErrnoError(63);\r\n        },symlink:function(parent, newName, oldPath) {\r\n          throw new FS.ErrnoError(63);\r\n        }},stream_ops:{read:function (stream, buffer, offset, length, position) {\r\n          //out('LZ4 read ' + [offset, length, position]);\r\n          length = Math.min(length, stream.node.size - position);\r\n          if (length <= 0) return 0;\r\n          var contents = stream.node.contents;\r\n          var compressedData = contents.compressedData;\r\n          var written = 0;\r\n          while (written < length) {\r\n            var start = contents.start + position + written; // start index in uncompressed data\r\n            var desired = length - written;\r\n            //out('current read: ' + ['start', start, 'desired', desired]);\r\n            var chunkIndex = Math.floor(start / LZ4.CHUNK_SIZE);\r\n            var compressedStart = compressedData['offsets'][chunkIndex];\r\n            var compressedSize = compressedData['sizes'][chunkIndex];\r\n            var currChunk;\r\n            if (compressedData['successes'][chunkIndex]) {\r\n              var found = compressedData['cachedIndexes'].indexOf(chunkIndex);\r\n              if (found >= 0) {\r\n                currChunk = compressedData['cachedChunks'][found];\r\n              } else {\r\n                // decompress the chunk\r\n                compressedData['cachedIndexes'].pop();\r\n                compressedData['cachedIndexes'].unshift(chunkIndex);\r\n                currChunk = compressedData['cachedChunks'].pop();\r\n                compressedData['cachedChunks'].unshift(currChunk);\r\n                if (compressedData['debug']) {\r\n                  out('decompressing chunk ' + chunkIndex);\r\n                  Module['decompressedChunks'] = (Module['decompressedChunks'] || 0) + 1;\r\n                }\r\n                var compressed = compressedData['data'].subarray(compressedStart, compressedStart + compressedSize);\r\n                //var t = Date.now();\r\n                var originalSize = LZ4.codec.uncompress(compressed, currChunk);\r\n                //out('decompress time: ' + (Date.now() - t));\r\n                if (chunkIndex < compressedData['successes'].length-1) assert(originalSize === LZ4.CHUNK_SIZE); // all but the last chunk must be full-size\r\n              }\r\n            } else {\r\n              // uncompressed\r\n              currChunk = compressedData['data'].subarray(compressedStart, compressedStart + LZ4.CHUNK_SIZE);\r\n            }\r\n            var startInChunk = start % LZ4.CHUNK_SIZE;\r\n            var endInChunk = Math.min(startInChunk + desired, LZ4.CHUNK_SIZE);\r\n            buffer.set(currChunk.subarray(startInChunk, endInChunk), offset + written);\r\n            var currWritten = endInChunk - startInChunk;\r\n            written += currWritten;\r\n          }\r\n          return written;\r\n        },write:function (stream, buffer, offset, length, position) {\r\n          throw new FS.ErrnoError(29);\r\n        },llseek:function (stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.size;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        }}};\r\n  var FS = {root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path, opts = {}) => {\r\n        path = PATH_FS.resolve(path);\r\n  \r\n        if (!path) return { path: '', node: null };\r\n  \r\n        var defaults = {\r\n          follow_mount: true,\r\n          recurse_count: 0\r\n        };\r\n        opts = Object.assign(defaults, opts)\r\n  \r\n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\r\n          throw new FS.ErrnoError(32);\r\n        }\r\n  \r\n        // split the absolute path\r\n        var parts = path.split('/').filter((p) => !!p);\r\n  \r\n        // start at the root\r\n        var current = FS.root;\r\n        var current_path = '/';\r\n  \r\n        for (var i = 0; i < parts.length; i++) {\r\n          var islast = (i === parts.length-1);\r\n          if (islast && opts.parent) {\r\n            // stop resolving\r\n            break;\r\n          }\r\n  \r\n          current = FS.lookupNode(current, parts[i]);\r\n          current_path = PATH.join2(current_path, parts[i]);\r\n  \r\n          // jump to the mount's root node if this is a mountpoint\r\n          if (FS.isMountpoint(current)) {\r\n            if (!islast || (islast && opts.follow_mount)) {\r\n              current = current.mounted.root;\r\n            }\r\n          }\r\n  \r\n          // by default, lookupPath will not follow a symlink if it is the final path component.\r\n          // setting opts.follow = true will override this behavior.\r\n          if (!islast || opts.follow) {\r\n            var count = 0;\r\n            while (FS.isLink(current.mode)) {\r\n              var link = FS.readlink(current_path);\r\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\r\n  \r\n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });\r\n              current = lookup.node;\r\n  \r\n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\r\n                throw new FS.ErrnoError(32);\r\n              }\r\n            }\r\n          }\r\n        }\r\n  \r\n        return { path: current_path, node: current };\r\n      },getPath:(node) => {\r\n        var path;\r\n        while (true) {\r\n          if (FS.isRoot(node)) {\r\n            var mount = node.mount.mountpoint;\r\n            if (!path) return mount;\r\n            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;\r\n          }\r\n          path = path ? node.name + '/' + path : node.name;\r\n          node = node.parent;\r\n        }\r\n      },hashName:(parentid, name) => {\r\n        var hash = 0;\r\n  \r\n        for (var i = 0; i < name.length; i++) {\r\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\r\n        }\r\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\r\n      },hashAddNode:(node) => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        node.name_next = FS.nameTable[hash];\r\n        FS.nameTable[hash] = node;\r\n      },hashRemoveNode:(node) => {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        if (FS.nameTable[hash] === node) {\r\n          FS.nameTable[hash] = node.name_next;\r\n        } else {\r\n          var current = FS.nameTable[hash];\r\n          while (current) {\r\n            if (current.name_next === node) {\r\n              current.name_next = node.name_next;\r\n              break;\r\n            }\r\n            current = current.name_next;\r\n          }\r\n        }\r\n      },lookupNode:(parent, name) => {\r\n        var errCode = FS.mayLookup(parent);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode, parent);\r\n        }\r\n        var hash = FS.hashName(parent.id, name);\r\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n          var nodeName = node.name;\r\n          if (node.parent.id === parent.id && nodeName === name) {\r\n            return node;\r\n          }\r\n        }\r\n        // if we failed to find it in the cache, call into the VFS\r\n        return FS.lookup(parent, name);\r\n      },createNode:(parent, name, mode, rdev) => {\r\n        var node = new FS.FSNode(parent, name, mode, rdev);\r\n  \r\n        FS.hashAddNode(node);\r\n  \r\n        return node;\r\n      },destroyNode:(node) => {\r\n        FS.hashRemoveNode(node);\r\n      },isRoot:(node) => {\r\n        return node === node.parent;\r\n      },isMountpoint:(node) => {\r\n        return !!node.mounted;\r\n      },isFile:(mode) => {\r\n        return (mode & 61440) === 32768;\r\n      },isDir:(mode) => {\r\n        return (mode & 61440) === 16384;\r\n      },isLink:(mode) => {\r\n        return (mode & 61440) === 40960;\r\n      },isChrdev:(mode) => {\r\n        return (mode & 61440) === 8192;\r\n      },isBlkdev:(mode) => {\r\n        return (mode & 61440) === 24576;\r\n      },isFIFO:(mode) => {\r\n        return (mode & 61440) === 4096;\r\n      },isSocket:(mode) => {\r\n        return (mode & 49152) === 49152;\r\n      },flagModes:{\"r\":0,\"r+\":2,\"w\":577,\"w+\":578,\"a\":1089,\"a+\":1090},modeStringToFlags:(str) => {\r\n        var flags = FS.flagModes[str];\r\n        if (typeof flags == 'undefined') {\r\n          throw new Error('Unknown file open mode: ' + str);\r\n        }\r\n        return flags;\r\n      },flagsToPermissionString:(flag) => {\r\n        var perms = ['r', 'w', 'rw'][flag & 3];\r\n        if ((flag & 512)) {\r\n          perms += 'w';\r\n        }\r\n        return perms;\r\n      },nodePermissions:(node, perms) => {\r\n        if (FS.ignorePermissions) {\r\n          return 0;\r\n        }\r\n        // return 0 if any user, group or owner bits are set.\r\n        if (perms.includes('r') && !(node.mode & 292)) {\r\n          return 2;\r\n        } else if (perms.includes('w') && !(node.mode & 146)) {\r\n          return 2;\r\n        } else if (perms.includes('x') && !(node.mode & 73)) {\r\n          return 2;\r\n        }\r\n        return 0;\r\n      },mayLookup:(dir) => {\r\n        var errCode = FS.nodePermissions(dir, 'x');\r\n        if (errCode) return errCode;\r\n        if (!dir.node_ops.lookup) return 2;\r\n        return 0;\r\n      },mayCreate:(dir, name) => {\r\n        try {\r\n          var node = FS.lookupNode(dir, name);\r\n          return 20;\r\n        } catch (e) {\r\n        }\r\n        return FS.nodePermissions(dir, 'wx');\r\n      },mayDelete:(dir, name, isdir) => {\r\n        var node;\r\n        try {\r\n          node = FS.lookupNode(dir, name);\r\n        } catch (e) {\r\n          return e.errno;\r\n        }\r\n        var errCode = FS.nodePermissions(dir, 'wx');\r\n        if (errCode) {\r\n          return errCode;\r\n        }\r\n        if (isdir) {\r\n          if (!FS.isDir(node.mode)) {\r\n            return 54;\r\n          }\r\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n            return 10;\r\n          }\r\n        } else {\r\n          if (FS.isDir(node.mode)) {\r\n            return 31;\r\n          }\r\n        }\r\n        return 0;\r\n      },mayOpen:(node, flags) => {\r\n        if (!node) {\r\n          return 44;\r\n        }\r\n        if (FS.isLink(node.mode)) {\r\n          return 32;\r\n        } else if (FS.isDir(node.mode)) {\r\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\r\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\r\n            return 31;\r\n          }\r\n        }\r\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\r\n      },MAX_OPEN_FDS:4096,nextfd:(fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\r\n        for (var fd = fd_start; fd <= fd_end; fd++) {\r\n          if (!FS.streams[fd]) {\r\n            return fd;\r\n          }\r\n        }\r\n        throw new FS.ErrnoError(33);\r\n      },getStream:(fd) => FS.streams[fd],createStream:(stream, fd_start, fd_end) => {\r\n        if (!FS.FSStream) {\r\n          FS.FSStream = /** @constructor */ function() {\r\n            this.shared = { };\r\n          };\r\n          FS.FSStream.prototype = {};\r\n          Object.defineProperties(FS.FSStream.prototype, {\r\n            object: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.node; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.node = val; }\r\n            },\r\n            isRead: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 2097155) !== 1; }\r\n            },\r\n            isWrite: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 2097155) !== 0; }\r\n            },\r\n            isAppend: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return (this.flags & 1024); }\r\n            },\r\n            flags: {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.shared.flags; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.shared.flags = val; },\r\n            },\r\n            position : {\r\n              /** @this {FS.FSStream} */\r\n              get: function() { return this.shared.position; },\r\n              /** @this {FS.FSStream} */\r\n              set: function(val) { this.shared.position = val; },\r\n            },\r\n          });\r\n        }\r\n        // clone it, so we can return an instance of FSStream\r\n        stream = Object.assign(new FS.FSStream(), stream);\r\n        var fd = FS.nextfd(fd_start, fd_end);\r\n        stream.fd = fd;\r\n        FS.streams[fd] = stream;\r\n        return stream;\r\n      },closeStream:(fd) => {\r\n        FS.streams[fd] = null;\r\n      },chrdev_stream_ops:{open:(stream) => {\r\n          var device = FS.getDevice(stream.node.rdev);\r\n          // override node's stream ops with the device's\r\n          stream.stream_ops = device.stream_ops;\r\n          // forward the open call\r\n          if (stream.stream_ops.open) {\r\n            stream.stream_ops.open(stream);\r\n          }\r\n        },llseek:() => {\r\n          throw new FS.ErrnoError(70);\r\n        }},major:(dev) => ((dev) >> 8),minor:(dev) => ((dev) & 0xff),makedev:(ma, mi) => ((ma) << 8 | (mi)),registerDevice:(dev, ops) => {\r\n        FS.devices[dev] = { stream_ops: ops };\r\n      },getDevice:(dev) => FS.devices[dev],getMounts:(mount) => {\r\n        var mounts = [];\r\n        var check = [mount];\r\n  \r\n        while (check.length) {\r\n          var m = check.pop();\r\n  \r\n          mounts.push(m);\r\n  \r\n          check.push.apply(check, m.mounts);\r\n        }\r\n  \r\n        return mounts;\r\n      },syncfs:(populate, callback) => {\r\n        if (typeof populate == 'function') {\r\n          callback = populate;\r\n          populate = false;\r\n        }\r\n  \r\n        FS.syncFSRequests++;\r\n  \r\n        if (FS.syncFSRequests > 1) {\r\n          err('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');\r\n        }\r\n  \r\n        var mounts = FS.getMounts(FS.root.mount);\r\n        var completed = 0;\r\n  \r\n        function doCallback(errCode) {\r\n          FS.syncFSRequests--;\r\n          return callback(errCode);\r\n        }\r\n  \r\n        function done(errCode) {\r\n          if (errCode) {\r\n            if (!done.errored) {\r\n              done.errored = true;\r\n              return doCallback(errCode);\r\n            }\r\n            return;\r\n          }\r\n          if (++completed >= mounts.length) {\r\n            doCallback(null);\r\n          }\r\n        };\r\n  \r\n        // sync all mounts\r\n        mounts.forEach((mount) => {\r\n          if (!mount.type.syncfs) {\r\n            return done(null);\r\n          }\r\n          mount.type.syncfs(mount, populate, done);\r\n        });\r\n      },mount:(type, opts, mountpoint) => {\r\n        var root = mountpoint === '/';\r\n        var pseudo = !mountpoint;\r\n        var node;\r\n  \r\n        if (root && FS.root) {\r\n          throw new FS.ErrnoError(10);\r\n        } else if (!root && !pseudo) {\r\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n          mountpoint = lookup.path;  // use the absolute path\r\n          node = lookup.node;\r\n  \r\n          if (FS.isMountpoint(node)) {\r\n            throw new FS.ErrnoError(10);\r\n          }\r\n  \r\n          if (!FS.isDir(node.mode)) {\r\n            throw new FS.ErrnoError(54);\r\n          }\r\n        }\r\n  \r\n        var mount = {\r\n          type: type,\r\n          opts: opts,\r\n          mountpoint: mountpoint,\r\n          mounts: []\r\n        };\r\n  \r\n        // create a root node for the fs\r\n        var mountRoot = type.mount(mount);\r\n        mountRoot.mount = mount;\r\n        mount.root = mountRoot;\r\n  \r\n        if (root) {\r\n          FS.root = mountRoot;\r\n        } else if (node) {\r\n          // set as a mountpoint\r\n          node.mounted = mount;\r\n  \r\n          // add the new mount to the current mount's children\r\n          if (node.mount) {\r\n            node.mount.mounts.push(mount);\r\n          }\r\n        }\r\n  \r\n        return mountRoot;\r\n      },unmount:(mountpoint) => {\r\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n        if (!FS.isMountpoint(lookup.node)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n  \r\n        // destroy the nodes for this mount, and all its child mounts\r\n        var node = lookup.node;\r\n        var mount = node.mounted;\r\n        var mounts = FS.getMounts(mount);\r\n  \r\n        Object.keys(FS.nameTable).forEach((hash) => {\r\n          var current = FS.nameTable[hash];\r\n  \r\n          while (current) {\r\n            var next = current.name_next;\r\n  \r\n            if (mounts.includes(current.mount)) {\r\n              FS.destroyNode(current);\r\n            }\r\n  \r\n            current = next;\r\n          }\r\n        });\r\n  \r\n        // no longer a mountpoint\r\n        node.mounted = null;\r\n  \r\n        // remove this mount from the child mounts\r\n        var idx = node.mount.mounts.indexOf(mount);\r\n        node.mount.mounts.splice(idx, 1);\r\n      },lookup:(parent, name) => {\r\n        return parent.node_ops.lookup(parent, name);\r\n      },mknod:(path, mode, dev) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        if (!name || name === '.' || name === '..') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.mayCreate(parent, name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.mknod) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.mknod(parent, name, mode, dev);\r\n      },create:(path, mode) => {\r\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\r\n        mode &= 4095;\r\n        mode |= 32768;\r\n        return FS.mknod(path, mode, 0);\r\n      },mkdir:(path, mode) => {\r\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\r\n        mode &= 511 | 512;\r\n        mode |= 16384;\r\n        return FS.mknod(path, mode, 0);\r\n      },mkdirTree:(path, mode) => {\r\n        var dirs = path.split('/');\r\n        var d = '';\r\n        for (var i = 0; i < dirs.length; ++i) {\r\n          if (!dirs[i]) continue;\r\n          d += '/' + dirs[i];\r\n          try {\r\n            FS.mkdir(d, mode);\r\n          } catch(e) {\r\n            if (e.errno != 20) throw e;\r\n          }\r\n        }\r\n      },mkdev:(path, mode, dev) => {\r\n        if (typeof dev == 'undefined') {\r\n          dev = mode;\r\n          mode = 438 /* 0666 */;\r\n        }\r\n        mode |= 8192;\r\n        return FS.mknod(path, mode, dev);\r\n      },symlink:(oldpath, newpath) => {\r\n        if (!PATH_FS.resolve(oldpath)) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var lookup = FS.lookupPath(newpath, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var newname = PATH.basename(newpath);\r\n        var errCode = FS.mayCreate(parent, newname);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.symlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.symlink(parent, newname, oldpath);\r\n      },rename:(old_path, new_path) => {\r\n        var old_dirname = PATH.dirname(old_path);\r\n        var new_dirname = PATH.dirname(new_path);\r\n        var old_name = PATH.basename(old_path);\r\n        var new_name = PATH.basename(new_path);\r\n        // parents must exist\r\n        var lookup, old_dir, new_dir;\r\n  \r\n        // let the errors from non existant directories percolate up\r\n        lookup = FS.lookupPath(old_path, { parent: true });\r\n        old_dir = lookup.node;\r\n        lookup = FS.lookupPath(new_path, { parent: true });\r\n        new_dir = lookup.node;\r\n  \r\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\r\n        // need to be part of the same mount\r\n        if (old_dir.mount !== new_dir.mount) {\r\n          throw new FS.ErrnoError(75);\r\n        }\r\n        // source must exist\r\n        var old_node = FS.lookupNode(old_dir, old_name);\r\n        // old path should not be an ancestor of the new path\r\n        var relative = PATH_FS.relative(old_path, new_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        // new path should not be an ancestor of the old path\r\n        relative = PATH_FS.relative(new_path, old_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(55);\r\n        }\r\n        // see if the new path already exists\r\n        var new_node;\r\n        try {\r\n          new_node = FS.lookupNode(new_dir, new_name);\r\n        } catch (e) {\r\n          // not fatal\r\n        }\r\n        // early out if nothing needs to change\r\n        if (old_node === new_node) {\r\n          return;\r\n        }\r\n        // we'll need to delete the old entry\r\n        var isdir = FS.isDir(old_node.mode);\r\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        // need delete permissions if we'll be overwriting.\r\n        // need create permissions if new doesn't already exist.\r\n        errCode = new_node ?\r\n          FS.mayDelete(new_dir, new_name, isdir) :\r\n          FS.mayCreate(new_dir, new_name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!old_dir.node_ops.rename) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        // if we are going to change the parent, check write permissions\r\n        if (new_dir !== old_dir) {\r\n          errCode = FS.nodePermissions(old_dir, 'w');\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // remove the node from the lookup hash\r\n        FS.hashRemoveNode(old_node);\r\n        // do the underlying fs rename\r\n        try {\r\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          // add the node back to the hash (in case node_ops.rename\r\n          // changed its name)\r\n          FS.hashAddNode(old_node);\r\n        }\r\n      },rmdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, true);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.rmdir) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.rmdir(parent, name);\r\n        FS.destroyNode(node);\r\n      },readdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        if (!node.node_ops.readdir) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        return node.node_ops.readdir(node);\r\n      },unlink:(path) => {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, false);\r\n        if (errCode) {\r\n          // According to POSIX, we should map EISDIR to EPERM, but\r\n          // we instead do what Linux does (and we must, as we use\r\n          // the musl linux libc).\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.unlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.unlink(parent, name);\r\n        FS.destroyNode(node);\r\n      },readlink:(path) => {\r\n        var lookup = FS.lookupPath(path);\r\n        var link = lookup.node;\r\n        if (!link) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!link.node_ops.readlink) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\r\n      },stat:(path, dontFollow) => {\r\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n        var node = lookup.node;\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!node.node_ops.getattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return node.node_ops.getattr(node);\r\n      },lstat:(path) => {\r\n        return FS.stat(path, true);\r\n      },chmod:(path, mode, dontFollow) => {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          mode: (mode & 4095) | (node.mode & ~4095),\r\n          timestamp: Date.now()\r\n        });\r\n      },lchmod:(path, mode) => {\r\n        FS.chmod(path, mode, true);\r\n      },fchmod:(fd, mode) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        FS.chmod(stream.node, mode);\r\n      },chown:(path, uid, gid, dontFollow) => {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Date.now()\r\n          // we ignore the uid / gid for now\r\n        });\r\n      },lchown:(path, uid, gid) => {\r\n        FS.chown(path, uid, gid, true);\r\n      },fchown:(fd, uid, gid) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        FS.chown(stream.node, uid, gid);\r\n      },truncate:(path, len) => {\r\n        if (len < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: true });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!FS.isFile(node.mode)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.nodePermissions(node, 'w');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          size: len,\r\n          timestamp: Date.now()\r\n        });\r\n      },ftruncate:(fd, len) => {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        FS.truncate(stream.node, len);\r\n      },utime:(path, atime, mtime) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Math.max(atime, mtime)\r\n        });\r\n      },open:(path, flags, mode) => {\r\n        if (path === \"\") {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;\r\n        mode = typeof mode == 'undefined' ? 438 /* 0666 */ : mode;\r\n        if ((flags & 64)) {\r\n          mode = (mode & 4095) | 32768;\r\n        } else {\r\n          mode = 0;\r\n        }\r\n        var node;\r\n        if (typeof path == 'object') {\r\n          node = path;\r\n        } else {\r\n          path = PATH.normalize(path);\r\n          try {\r\n            var lookup = FS.lookupPath(path, {\r\n              follow: !(flags & 131072)\r\n            });\r\n            node = lookup.node;\r\n          } catch (e) {\r\n            // ignore\r\n          }\r\n        }\r\n        // perhaps we need to create the node\r\n        var created = false;\r\n        if ((flags & 64)) {\r\n          if (node) {\r\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\r\n            if ((flags & 128)) {\r\n              throw new FS.ErrnoError(20);\r\n            }\r\n          } else {\r\n            // node doesn't exist, try to create it\r\n            node = FS.mknod(path, mode, 0);\r\n            created = true;\r\n          }\r\n        }\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        // can't truncate a device\r\n        if (FS.isChrdev(node.mode)) {\r\n          flags &= ~512;\r\n        }\r\n        // if asked only for a directory, then this must be one\r\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        // check permissions, if this is not a file we just created now (it is ok to\r\n        // create and write to a file with read-only permissions; it is read-only\r\n        // for later use)\r\n        if (!created) {\r\n          var errCode = FS.mayOpen(node, flags);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // do truncation if necessary\r\n        if ((flags & 512) && !created) {\r\n          FS.truncate(node, 0);\r\n        }\r\n        // we've already handled these, don't pass down to the underlying vfs\r\n        flags &= ~(128 | 512 | 131072);\r\n  \r\n        // register the stream with the filesystem\r\n        var stream = FS.createStream({\r\n          node: node,\r\n          path: FS.getPath(node),  // we want the absolute path to the node\r\n          flags: flags,\r\n          seekable: true,\r\n          position: 0,\r\n          stream_ops: node.stream_ops,\r\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\r\n          ungotten: [],\r\n          error: false\r\n        });\r\n        // call the new stream's open function\r\n        if (stream.stream_ops.open) {\r\n          stream.stream_ops.open(stream);\r\n        }\r\n        if (Module['logReadFiles'] && !(flags & 1)) {\r\n          if (!FS.readFiles) FS.readFiles = {};\r\n          if (!(path in FS.readFiles)) {\r\n            FS.readFiles[path] = 1;\r\n          }\r\n        }\r\n        return stream;\r\n      },close:(stream) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (stream.getdents) stream.getdents = null; // free readdir state\r\n        try {\r\n          if (stream.stream_ops.close) {\r\n            stream.stream_ops.close(stream);\r\n          }\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          FS.closeStream(stream.fd);\r\n        }\r\n        stream.fd = null;\r\n      },isClosed:(stream) => {\r\n        return stream.fd === null;\r\n      },llseek:(stream, offset, whence) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!stream.seekable || !stream.stream_ops.llseek) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        if (whence != 0 && whence != 1 && whence != 2) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n        stream.ungotten = [];\r\n        return stream.position;\r\n      },read:(stream, buffer, offset, length, position) => {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.read) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\r\n        if (!seeking) stream.position += bytesRead;\r\n        return bytesRead;\r\n      },write:(stream, buffer, offset, length, position, canOwn) => {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.write) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (stream.seekable && stream.flags & 1024) {\r\n          // seek to the end before writing in append mode\r\n          FS.llseek(stream, 0, 2);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\r\n        if (!seeking) stream.position += bytesWritten;\r\n        return bytesWritten;\r\n      },allocate:(stream, offset, length) => {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (offset < 0 || length <= 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (!stream.stream_ops.allocate) {\r\n          throw new FS.ErrnoError(138);\r\n        }\r\n        stream.stream_ops.allocate(stream, offset, length);\r\n      },mmap:(stream, length, position, prot, flags) => {\r\n        // User requests writing to file (prot & PROT_WRITE != 0).\r\n        // Checking if we have permissions to write to the file unless\r\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\r\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\r\n        // as all modifications will be visible only in the memory of\r\n        // the current process.\r\n        if ((prot & 2) !== 0\r\n            && (flags & 2) === 0\r\n            && (stream.flags & 2097155) !== 2) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if (!stream.stream_ops.mmap) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\r\n      },msync:(stream, buffer, offset, length, mmapFlags) => {\r\n        if (!stream.stream_ops.msync) {\r\n          return 0;\r\n        }\r\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\r\n      },munmap:(stream) => 0,ioctl:(stream, cmd, arg) => {\r\n        if (!stream.stream_ops.ioctl) {\r\n          throw new FS.ErrnoError(59);\r\n        }\r\n        return stream.stream_ops.ioctl(stream, cmd, arg);\r\n      },readFile:(path, opts = {}) => {\r\n        opts.flags = opts.flags || 0;\r\n        opts.encoding = opts.encoding || 'binary';\r\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\r\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\r\n        }\r\n        var ret;\r\n        var stream = FS.open(path, opts.flags);\r\n        var stat = FS.stat(path);\r\n        var length = stat.size;\r\n        var buf = new Uint8Array(length);\r\n        FS.read(stream, buf, 0, length, 0);\r\n        if (opts.encoding === 'utf8') {\r\n          ret = UTF8ArrayToString(buf, 0);\r\n        } else if (opts.encoding === 'binary') {\r\n          ret = buf;\r\n        }\r\n        FS.close(stream);\r\n        return ret;\r\n      },writeFile:(path, data, opts = {}) => {\r\n        opts.flags = opts.flags || 577;\r\n        var stream = FS.open(path, opts.flags, opts.mode);\r\n        if (typeof data == 'string') {\r\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\r\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\r\n        } else if (ArrayBuffer.isView(data)) {\r\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\r\n        } else {\r\n          throw new Error('Unsupported data type');\r\n        }\r\n        FS.close(stream);\r\n      },cwd:() => FS.currentPath,chdir:(path) => {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        if (lookup.node === null) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!FS.isDir(lookup.node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        var errCode = FS.nodePermissions(lookup.node, 'x');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        FS.currentPath = lookup.path;\r\n      },createDefaultDirectories:() => {\r\n        FS.mkdir('/tmp');\r\n        FS.mkdir('/home');\r\n        FS.mkdir('/home/web_user');\r\n      },createDefaultDevices:() => {\r\n        // create /dev\r\n        FS.mkdir('/dev');\r\n        // setup /dev/null\r\n        FS.registerDevice(FS.makedev(1, 3), {\r\n          read: () => 0,\r\n          write: (stream, buffer, offset, length, pos) => length,\r\n        });\r\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\r\n        // setup /dev/tty and /dev/tty1\r\n        // stderr needs to print output using err() rather than out()\r\n        // so we register a second tty just for it.\r\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\r\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\r\n        // setup /dev/[u]random\r\n        // use a buffer to avoid overhead of individual crypto calls per byte\r\n        var randomBuffer = new Uint8Array(1024), randomLeft = 0;\r\n        var randomByte = () => {\r\n          if (randomLeft === 0) {\r\n            randomLeft = randomFill(randomBuffer).byteLength;\r\n          }\r\n          return randomBuffer[--randomLeft];\r\n        };\r\n        FS.createDevice('/dev', 'random', randomByte);\r\n        FS.createDevice('/dev', 'urandom', randomByte);\r\n        // we're not going to emulate the actual shm device,\r\n        // just create the tmp dirs that reside in it commonly\r\n        FS.mkdir('/dev/shm');\r\n        FS.mkdir('/dev/shm/tmp');\r\n      },createSpecialDirectories:() => {\r\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\r\n        // name of the stream for fd 6 (see test_unistd_ttyname)\r\n        FS.mkdir('/proc');\r\n        var proc_self = FS.mkdir('/proc/self');\r\n        FS.mkdir('/proc/self/fd');\r\n        FS.mount({\r\n          mount: () => {\r\n            var node = FS.createNode(proc_self, 'fd', 16384 | 511 /* 0777 */, 73);\r\n            node.node_ops = {\r\n              lookup: (parent, name) => {\r\n                var fd = +name;\r\n                var stream = FS.getStream(fd);\r\n                if (!stream) throw new FS.ErrnoError(8);\r\n                var ret = {\r\n                  parent: null,\r\n                  mount: { mountpoint: 'fake' },\r\n                  node_ops: { readlink: () => stream.path },\r\n                };\r\n                ret.parent = ret; // make it look like a simple root node\r\n                return ret;\r\n              }\r\n            };\r\n            return node;\r\n          }\r\n        }, {}, '/proc/self/fd');\r\n      },createStandardStreams:() => {\r\n        // TODO deprecate the old functionality of a single\r\n        // input / output callback and that utilizes FS.createDevice\r\n        // and instead require a unique set of stream ops\r\n  \r\n        // by default, we symlink the standard streams to the\r\n        // default tty devices. however, if the standard streams\r\n        // have been overwritten we create a unique device for\r\n        // them instead.\r\n        if (Module['stdin']) {\r\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdin');\r\n        }\r\n        if (Module['stdout']) {\r\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdout');\r\n        }\r\n        if (Module['stderr']) {\r\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\r\n        } else {\r\n          FS.symlink('/dev/tty1', '/dev/stderr');\r\n        }\r\n  \r\n        // open default streams for the stdin, stdout and stderr devices\r\n        var stdin = FS.open('/dev/stdin', 0);\r\n        var stdout = FS.open('/dev/stdout', 1);\r\n        var stderr = FS.open('/dev/stderr', 1);\r\n      },ensureErrnoError:() => {\r\n        if (FS.ErrnoError) return;\r\n        FS.ErrnoError = /** @this{Object} */ function ErrnoError(errno, node) {\r\n          // We set the `name` property to be able to identify `FS.ErrnoError`\r\n          // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\r\n          // - when using PROXYFS, an error can come from an underlying FS\r\n          // as different FS objects have their own FS.ErrnoError each,\r\n          // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\r\n          // we'll use the reliable test `err.name == \"ErrnoError\"` instead\r\n          this.name = 'ErrnoError';\r\n          this.node = node;\r\n          this.setErrno = /** @this{Object} */ function(errno) {\r\n            this.errno = errno;\r\n          };\r\n          this.setErrno(errno);\r\n          this.message = 'FS error';\r\n  \r\n        };\r\n        FS.ErrnoError.prototype = new Error();\r\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\r\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\r\n        [44].forEach((code) => {\r\n          FS.genericErrors[code] = new FS.ErrnoError(code);\r\n          FS.genericErrors[code].stack = '<generic error, no stack>';\r\n        });\r\n      },staticInit:() => {\r\n        FS.ensureErrnoError();\r\n  \r\n        FS.nameTable = new Array(4096);\r\n  \r\n        FS.mount(MEMFS, {}, '/');\r\n  \r\n        FS.createDefaultDirectories();\r\n        FS.createDefaultDevices();\r\n        FS.createSpecialDirectories();\r\n  \r\n        FS.filesystems = {\r\n          'MEMFS': MEMFS,\r\n          'IDBFS': IDBFS,\r\n        };\r\n      },init:(input, output, error) => {\r\n        FS.init.initialized = true;\r\n  \r\n        FS.ensureErrnoError();\r\n  \r\n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\r\n        Module['stdin'] = input || Module['stdin'];\r\n        Module['stdout'] = output || Module['stdout'];\r\n        Module['stderr'] = error || Module['stderr'];\r\n  \r\n        FS.createStandardStreams();\r\n      },quit:() => {\r\n        FS.init.initialized = false;\r\n        // force-flush all streams, so we get musl std streams printed out\r\n        // close all of our streams\r\n        for (var i = 0; i < FS.streams.length; i++) {\r\n          var stream = FS.streams[i];\r\n          if (!stream) {\r\n            continue;\r\n          }\r\n          FS.close(stream);\r\n        }\r\n      },getMode:(canRead, canWrite) => {\r\n        var mode = 0;\r\n        if (canRead) mode |= 292 | 73;\r\n        if (canWrite) mode |= 146;\r\n        return mode;\r\n      },findObject:(path, dontResolveLastLink) => {\r\n        var ret = FS.analyzePath(path, dontResolveLastLink);\r\n        if (!ret.exists) {\r\n          return null;\r\n        }\r\n        return ret.object;\r\n      },analyzePath:(path, dontResolveLastLink) => {\r\n        // operate from within the context of the symlink's target\r\n        try {\r\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          path = lookup.path;\r\n        } catch (e) {\r\n        }\r\n        var ret = {\r\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\r\n          parentExists: false, parentPath: null, parentObject: null\r\n        };\r\n        try {\r\n          var lookup = FS.lookupPath(path, { parent: true });\r\n          ret.parentExists = true;\r\n          ret.parentPath = lookup.path;\r\n          ret.parentObject = lookup.node;\r\n          ret.name = PATH.basename(path);\r\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          ret.exists = true;\r\n          ret.path = lookup.path;\r\n          ret.object = lookup.node;\r\n          ret.name = lookup.node.name;\r\n          ret.isRoot = lookup.path === '/';\r\n        } catch (e) {\r\n          ret.error = e.errno;\r\n        };\r\n        return ret;\r\n      },createPath:(parent, path, canRead, canWrite) => {\r\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n        var parts = path.split('/').reverse();\r\n        while (parts.length) {\r\n          var part = parts.pop();\r\n          if (!part) continue;\r\n          var current = PATH.join2(parent, part);\r\n          try {\r\n            FS.mkdir(current);\r\n          } catch (e) {\r\n            // ignore EEXIST\r\n          }\r\n          parent = current;\r\n        }\r\n        return current;\r\n      },createFile:(parent, name, properties, canRead, canWrite) => {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS.getMode(canRead, canWrite);\r\n        return FS.create(path, mode);\r\n      },createDataFile:(parent, name, data, canRead, canWrite, canOwn) => {\r\n        var path = name;\r\n        if (parent) {\r\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n          path = name ? PATH.join2(parent, name) : parent;\r\n        }\r\n        var mode = FS.getMode(canRead, canWrite);\r\n        var node = FS.create(path, mode);\r\n        if (data) {\r\n          if (typeof data == 'string') {\r\n            var arr = new Array(data.length);\r\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\r\n            data = arr;\r\n          }\r\n          // make sure we can write to the file\r\n          FS.chmod(node, mode | 146);\r\n          var stream = FS.open(node, 577);\r\n          FS.write(stream, data, 0, data.length, 0, canOwn);\r\n          FS.close(stream);\r\n          FS.chmod(node, mode);\r\n        }\r\n        return node;\r\n      },createDevice:(parent, name, input, output) => {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS.getMode(!!input, !!output);\r\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\r\n        var dev = FS.makedev(FS.createDevice.major++, 0);\r\n        // Create a fake device that a set of stream ops to emulate\r\n        // the old behavior.\r\n        FS.registerDevice(dev, {\r\n          open: (stream) => {\r\n            stream.seekable = false;\r\n          },\r\n          close: (stream) => {\r\n            // flush any pending line data\r\n            if (output && output.buffer && output.buffer.length) {\r\n              output(10);\r\n            }\r\n          },\r\n          read: (stream, buffer, offset, length, pos /* ignored */) => {\r\n            var bytesRead = 0;\r\n            for (var i = 0; i < length; i++) {\r\n              var result;\r\n              try {\r\n                result = input();\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n              if (result === undefined && bytesRead === 0) {\r\n                throw new FS.ErrnoError(6);\r\n              }\r\n              if (result === null || result === undefined) break;\r\n              bytesRead++;\r\n              buffer[offset+i] = result;\r\n            }\r\n            if (bytesRead) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return bytesRead;\r\n          },\r\n          write: (stream, buffer, offset, length, pos) => {\r\n            for (var i = 0; i < length; i++) {\r\n              try {\r\n                output(buffer[offset+i]);\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n            }\r\n            if (length) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return i;\r\n          }\r\n        });\r\n        return FS.mkdev(path, mode, dev);\r\n      },forceLoadFile:(obj) => {\r\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\r\n        } else if (read_) {\r\n          // Command-line.\r\n          try {\r\n            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\r\n            //          read() will try to parse UTF8.\r\n            obj.contents = intArrayFromString(read_(obj.url), true);\r\n            obj.usedBytes = obj.contents.length;\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n        } else {\r\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\r\n        }\r\n      },createLazyFile:(parent, name, url, canRead, canWrite) => {\r\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\r\n        /** @constructor */\r\n        function LazyUint8Array() {\r\n          this.lengthKnown = false;\r\n          this.chunks = []; // Loaded chunks. Index is the chunk number\r\n        }\r\n        LazyUint8Array.prototype.get = /** @this{Object} */ function LazyUint8Array_get(idx) {\r\n          if (idx > this.length-1 || idx < 0) {\r\n            return undefined;\r\n          }\r\n          var chunkOffset = idx % this.chunkSize;\r\n          var chunkNum = (idx / this.chunkSize)|0;\r\n          return this.getter(chunkNum)[chunkOffset];\r\n        };\r\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\r\n          this.getter = getter;\r\n        };\r\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\r\n          // Find length\r\n          var xhr = new XMLHttpRequest();\r\n          xhr.open('HEAD', url, false);\r\n          xhr.send(null);\r\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n          var header;\r\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\r\n  \r\n          var chunkSize = 1024*1024; // Chunk size in bytes\r\n  \r\n          if (!hasByteServing) chunkSize = datalength;\r\n  \r\n          // Function to get a range from the remote URL.\r\n          var doXHR = (from, to) => {\r\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\r\n            if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\r\n  \r\n            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url, false);\r\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n  \r\n            // Some hints to the browser that we want binary data.\r\n            xhr.responseType = 'arraybuffer';\r\n            if (xhr.overrideMimeType) {\r\n              xhr.overrideMimeType('text/plain; charset=x-user-defined');\r\n            }\r\n  \r\n            xhr.send(null);\r\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n            if (xhr.response !== undefined) {\r\n              return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\r\n            }\r\n            return intArrayFromString(xhr.responseText || '', true);\r\n          };\r\n          var lazyArray = this;\r\n          lazyArray.setDataGetter((chunkNum) => {\r\n            var start = chunkNum * chunkSize;\r\n            var end = (chunkNum+1) * chunkSize - 1; // including this byte\r\n            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\r\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\r\n            }\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\r\n            return lazyArray.chunks[chunkNum];\r\n          });\r\n  \r\n          if (usesGzip || !datalength) {\r\n            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\r\n            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\r\n            datalength = this.getter(0).length;\r\n            chunkSize = datalength;\r\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\r\n          }\r\n  \r\n          this._length = datalength;\r\n          this._chunkSize = chunkSize;\r\n          this.lengthKnown = true;\r\n        };\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\r\n          var lazyArray = new LazyUint8Array();\r\n          Object.defineProperties(lazyArray, {\r\n            length: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._length;\r\n              }\r\n            },\r\n            chunkSize: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._chunkSize;\r\n              }\r\n            }\r\n          });\r\n  \r\n          var properties = { isDevice: false, contents: lazyArray };\r\n        } else {\r\n          var properties = { isDevice: false, url: url };\r\n        }\r\n  \r\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\r\n        // This is a total hack, but I want to get this lazy file code out of the\r\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\r\n        // be its own thin LAZYFS proxying calls to MEMFS.\r\n        if (properties.contents) {\r\n          node.contents = properties.contents;\r\n        } else if (properties.url) {\r\n          node.contents = null;\r\n          node.url = properties.url;\r\n        }\r\n        // Add a function that defers querying the file size until it is asked the first time.\r\n        Object.defineProperties(node, {\r\n          usedBytes: {\r\n            get: /** @this {FSNode} */ function() { return this.contents.length; }\r\n          }\r\n        });\r\n        // override each stream op with one that tries to force load the lazy file first\r\n        var stream_ops = {};\r\n        var keys = Object.keys(node.stream_ops);\r\n        keys.forEach((key) => {\r\n          var fn = node.stream_ops[key];\r\n          stream_ops[key] = function forceLoadLazyFile() {\r\n            FS.forceLoadFile(node);\r\n            return fn.apply(null, arguments);\r\n          };\r\n        });\r\n        function writeChunks(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= contents.length)\r\n            return 0;\r\n          var size = Math.min(contents.length - position, length);\r\n          if (contents.slice) { // normal array\r\n            for (var i = 0; i < size; i++) {\r\n              buffer[offset + i] = contents[position + i];\r\n            }\r\n          } else {\r\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\r\n              buffer[offset + i] = contents.get(position + i);\r\n            }\r\n          }\r\n          return size;\r\n        }\r\n        // use a custom read function\r\n        stream_ops.read = (stream, buffer, offset, length, position) => {\r\n          FS.forceLoadFile(node);\r\n          return writeChunks(stream, buffer, offset, length, position)\r\n        };\r\n        // use a custom mmap function\r\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\r\n          FS.forceLoadFile(node);\r\n          var ptr = mmapAlloc(length);\r\n          if (!ptr) {\r\n            throw new FS.ErrnoError(48);\r\n          }\r\n          writeChunks(stream, HEAP8, ptr, length, position);\r\n          return { ptr: ptr, allocated: true };\r\n        };\r\n        node.stream_ops = stream_ops;\r\n        return node;\r\n      },createPreloadedFile:(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\r\n        // TODO we should allow people to just pass in a complete filename instead\r\n        // of parent and name being that we just join them anyways\r\n        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\r\n        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname\r\n        function processData(byteArray) {\r\n          function finish(byteArray) {\r\n            if (preFinish) preFinish();\r\n            if (!dontCreateFile) {\r\n              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\r\n            }\r\n            if (onload) onload();\r\n            removeRunDependency(dep);\r\n          }\r\n          if (Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\r\n            if (onerror) onerror();\r\n            removeRunDependency(dep);\r\n          })) {\r\n            return;\r\n          }\r\n          finish(byteArray);\r\n        }\r\n        addRunDependency(dep);\r\n        if (typeof url == 'string') {\r\n          asyncLoad(url, (byteArray) => processData(byteArray), onerror);\r\n        } else {\r\n          processData(url);\r\n        }\r\n      }};\r\n  \r\n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\r\n  \r\n    /**\r\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\r\n     * array that contains uint8 values, returns a copy of that string as a\r\n     * Javascript String object.\r\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\r\n     * @param {number} idx\r\n     * @param {number=} maxBytesToRead\r\n     * @return {string}\r\n     */\r\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\r\n      var endIdx = idx + maxBytesToRead;\r\n      var endPtr = idx;\r\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\r\n      // null terminator by itself.  Also, use the length info to avoid running tiny\r\n      // strings through TextDecoder, since .subarray() allocates garbage.\r\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\r\n      // so that undefined means Infinity)\r\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n  \r\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\r\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\r\n      }\r\n      var str = '';\r\n      // If building with TextDecoder, we have already computed the string length\r\n      // above, so test loop end condition against that\r\n      while (idx < endPtr) {\r\n        // For UTF8 byte structure, see:\r\n        // http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // https://www.ietf.org/rfc/rfc2279.txt\r\n        // https://tools.ietf.org/html/rfc3629\r\n        var u0 = heapOrArray[idx++];\r\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\r\n        var u1 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\r\n        var u2 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xF0) == 0xE0) {\r\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\r\n        } else {\r\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\r\n        }\r\n  \r\n        if (u0 < 0x10000) {\r\n          str += String.fromCharCode(u0);\r\n        } else {\r\n          var ch = u0 - 0x10000;\r\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\r\n        }\r\n      }\r\n      return str;\r\n    }\r\n  \r\n  \r\n    /**\r\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\r\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\r\n     *\r\n     * @param {number} ptr\r\n     * @param {number=} maxBytesToRead - An optional length that specifies the\r\n     *   maximum number of bytes to read. You can omit this parameter to scan the\r\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\r\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\r\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\r\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\r\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\r\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\r\n     * @return {string}\r\n     */\r\n  function UTF8ToString(ptr, maxBytesToRead) {\r\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\r\n    }\r\n  var SYSCALLS = {DEFAULT_POLLMASK:5,calculateAt:function(dirfd, path, allowEmpty) {\r\n        if (PATH.isAbs(path)) {\r\n          return path;\r\n        }\r\n        // relative path\r\n        var dir;\r\n        if (dirfd === -100) {\r\n          dir = FS.cwd();\r\n        } else {\r\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\r\n          dir = dirstream.path;\r\n        }\r\n        if (path.length == 0) {\r\n          if (!allowEmpty) {\r\n            throw new FS.ErrnoError(44);;\r\n          }\r\n          return dir;\r\n        }\r\n        return PATH.join2(dir, path);\r\n      },doStat:function(func, path, buf) {\r\n        try {\r\n          var stat = func(path);\r\n        } catch (e) {\r\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\r\n            // an error occurred while trying to look up the path; we should just report ENOTDIR\r\n            return -54;\r\n          }\r\n          throw e;\r\n        }\r\n        HEAP32[((buf)>>2)] = stat.dev;\r\n        HEAP32[(((buf)+(8))>>2)] = stat.ino;\r\n        HEAP32[(((buf)+(12))>>2)] = stat.mode;\r\n        HEAPU32[(((buf)+(16))>>2)] = stat.nlink;\r\n        HEAP32[(((buf)+(20))>>2)] = stat.uid;\r\n        HEAP32[(((buf)+(24))>>2)] = stat.gid;\r\n        HEAP32[(((buf)+(28))>>2)] = stat.rdev;\r\n        (tempI64 = [stat.size>>>0,(tempDouble=stat.size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(40))>>2)] = tempI64[0],HEAP32[(((buf)+(44))>>2)] = tempI64[1]);\r\n        HEAP32[(((buf)+(48))>>2)] = 4096;\r\n        HEAP32[(((buf)+(52))>>2)] = stat.blocks;\r\n        var atime = stat.atime.getTime();\r\n        var mtime = stat.mtime.getTime();\r\n        var ctime = stat.ctime.getTime();\r\n        (tempI64 = [Math.floor(atime / 1000)>>>0,(tempDouble=Math.floor(atime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(56))>>2)] = tempI64[0],HEAP32[(((buf)+(60))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(64))>>2)] = (atime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(mtime / 1000)>>>0,(tempDouble=Math.floor(mtime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(72))>>2)] = tempI64[0],HEAP32[(((buf)+(76))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(80))>>2)] = (mtime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(ctime / 1000)>>>0,(tempDouble=Math.floor(ctime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(88))>>2)] = tempI64[0],HEAP32[(((buf)+(92))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(96))>>2)] = (ctime % 1000) * 1000;\r\n        (tempI64 = [stat.ino>>>0,(tempDouble=stat.ino,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(104))>>2)] = tempI64[0],HEAP32[(((buf)+(108))>>2)] = tempI64[1]);\r\n        return 0;\r\n      },doMsync:function(addr, stream, len, flags, offset) {\r\n        if (!FS.isFile(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (flags & 2) {\r\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\r\n          return 0;\r\n        }\r\n        var buffer = HEAPU8.slice(addr, addr + len);\r\n        FS.msync(stream, buffer, offset, len, flags);\r\n      },varargs:undefined,get:function() {\r\n        SYSCALLS.varargs += 4;\r\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\r\n        return ret;\r\n      },getStr:function(ptr) {\r\n        var ret = UTF8ToString(ptr);\r\n        return ret;\r\n      },getStreamFromFD:function(fd) {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) throw new FS.ErrnoError(8);\r\n        return stream;\r\n      }};\r\n  function ___syscall_chmod(path, mode) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.chmod(path, mode);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_fchmod(fd, mode) {\r\n  try {\r\n  \r\n      FS.fchmod(fd, mode);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function setErrNo(value) {\r\n      HEAP32[((___errno_location())>>2)] = value;\r\n      return value;\r\n    }\r\n  \r\n  function ___syscall_fcntl64(fd, cmd, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (cmd) {\r\n        case 0: {\r\n          var arg = SYSCALLS.get();\r\n          if (arg < 0) {\r\n            return -28;\r\n          }\r\n          var newStream;\r\n          newStream = FS.createStream(stream, arg);\r\n          return newStream.fd;\r\n        }\r\n        case 1:\r\n        case 2:\r\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\r\n        case 3:\r\n          return stream.flags;\r\n        case 4: {\r\n          var arg = SYSCALLS.get();\r\n          stream.flags |= arg;\r\n          return 0;\r\n        }\r\n        case 5:\r\n        /* case 5: Currently in musl F_GETLK64 has same value as F_GETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */ {\r\n          \r\n          var arg = SYSCALLS.get();\r\n          var offset = 0;\r\n          // We're always unlocked.\r\n          HEAP16[(((arg)+(offset))>>1)] = 2;\r\n          return 0;\r\n        }\r\n        case 6:\r\n        case 7:\r\n        /* case 6: Currently in musl F_SETLK64 has same value as F_SETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\r\n        /* case 7: Currently in musl F_SETLKW64 has same value as F_SETLKW, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\r\n          \r\n          \r\n          return 0; // Pretend that the locking is successful.\r\n        case 16:\r\n        case 8:\r\n          return -28; // These are for sockets. We don't have them fully implemented yet.\r\n        case 9:\r\n          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fcntl() returns that, and we set errno ourselves.\r\n          setErrNo(28);\r\n          return -1;\r\n        default: {\r\n          return -28;\r\n        }\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_fstat64(fd, buf) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      return SYSCALLS.doStat(FS.stat, stream.path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function convertI32PairToI53Checked(lo, hi) {\r\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  function ___syscall_ftruncate64(fd, length_low, length_high) {\r\n  try {\r\n  \r\n      var length = convertI32PairToI53Checked(length_low, length_high); if (isNaN(length)) return -61;\r\n      FS.ftruncate(fd, length);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function stringToUTF8(str, outPtr, maxBytesToWrite) {\r\n      return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\r\n    }\r\n  \r\n  function ___syscall_getcwd(buf, size) {\r\n  try {\r\n  \r\n      if (size === 0) return -28;\r\n      var cwd = FS.cwd();\r\n      var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\r\n      if (size < cwdLengthInBytes) return -68;\r\n      stringToUTF8(cwd, buf, size);\r\n      return cwdLengthInBytes;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function ___syscall_getdents64(fd, dirp, count) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd)\r\n      if (!stream.getdents) {\r\n        stream.getdents = FS.readdir(stream.path);\r\n      }\r\n  \r\n      var struct_size = 280;\r\n      var pos = 0;\r\n      var off = FS.llseek(stream, 0, 1);\r\n  \r\n      var idx = Math.floor(off / struct_size);\r\n  \r\n      while (idx < stream.getdents.length && pos + struct_size <= count) {\r\n        var id;\r\n        var type;\r\n        var name = stream.getdents[idx];\r\n        if (name === '.') {\r\n          id = stream.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else if (name === '..') {\r\n          var lookup = FS.lookupPath(stream.path, { parent: true });\r\n          id = lookup.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else {\r\n          var child = FS.lookupNode(stream.node, name);\r\n          id = child.id;\r\n          type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.\r\n                 FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.\r\n                 FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.\r\n                 8;                             // DT_REG, regular file.\r\n        }\r\n        (tempI64 = [id>>>0,(tempDouble=id,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((dirp + pos)>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(4))>>2)] = tempI64[1]);\r\n        (tempI64 = [(idx + 1) * struct_size>>>0,(tempDouble=(idx + 1) * struct_size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((dirp + pos)+(8))>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(12))>>2)] = tempI64[1]);\r\n        HEAP16[(((dirp + pos)+(16))>>1)] = 280;\r\n        HEAP8[(((dirp + pos)+(18))>>0)] = type;\r\n        stringToUTF8(name, dirp + pos + 19, 256);\r\n        pos += struct_size;\r\n        idx += 1;\r\n      }\r\n      FS.llseek(stream, idx * struct_size, 0);\r\n      return pos;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_ioctl(fd, op, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (op) {\r\n        case 21509:\r\n        case 21505: {\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21510:\r\n        case 21511:\r\n        case 21512:\r\n        case 21506:\r\n        case 21507:\r\n        case 21508: {\r\n          if (!stream.tty) return -59;\r\n          return 0; // no-op, not actually adjusting terminal settings\r\n        }\r\n        case 21519: {\r\n          if (!stream.tty) return -59;\r\n          var argp = SYSCALLS.get();\r\n          HEAP32[((argp)>>2)] = 0;\r\n          return 0;\r\n        }\r\n        case 21520: {\r\n          if (!stream.tty) return -59;\r\n          return -28; // not supported\r\n        }\r\n        case 21531: {\r\n          var argp = SYSCALLS.get();\r\n          return FS.ioctl(stream, op, argp);\r\n        }\r\n        case 21523: {\r\n          // TODO: in theory we should write to the winsize struct that gets\r\n          // passed in, but for now musl doesn't read anything on it\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21524: {\r\n          // TODO: technically, this ioctl call should change the window size.\r\n          // but, since emscripten doesn't have any concept of a terminal window\r\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        default: return -28; // not supported\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_lstat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.lstat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_mkdirat(dirfd, path, mode) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      // remove a trailing slash, if one - /a/b/ has basename of '', but\r\n      // we want to create b in the context of this function\r\n      path = PATH.normalize(path);\r\n      if (path[path.length-1] === '/') path = path.substr(0, path.length-1);\r\n      FS.mkdir(path, mode, 0);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_newfstatat(dirfd, path, buf, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      var nofollow = flags & 256;\r\n      var allowEmpty = flags & 4096;\r\n      flags = flags & (~6400);\r\n      path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\r\n      return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_openat(dirfd, path, flags, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      var mode = varargs ? SYSCALLS.get() : 0;\r\n      return FS.open(path, flags, mode).fd;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_rmdir(path) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.rmdir(path);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_stat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_unlinkat(dirfd, path, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      if (flags === 0) {\r\n        FS.unlink(path);\r\n      } else if (flags === 512) {\r\n        FS.rmdir(path);\r\n      } else {\r\n        abort('Invalid flags passed to unlinkat');\r\n      }\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  var nowIsMonotonic = true;;\r\n  function __emscripten_get_now_is_monotonic() {\r\n      return nowIsMonotonic;\r\n    }\r\n\r\n  function readI53FromI64(ptr) {\r\n      return HEAPU32[ptr>>2] + HEAP32[ptr+4>>2] * 4294967296;\r\n    }\r\n  \r\n  function isLeapYear(year) {\r\n        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);\r\n    }\r\n  \r\n  var MONTH_DAYS_LEAP_CUMULATIVE = [0,31,60,91,121,152,182,213,244,274,305,335];\r\n  \r\n  var MONTH_DAYS_REGULAR_CUMULATIVE = [0,31,59,90,120,151,181,212,243,273,304,334];\r\n  function ydayFromDate(date) {\r\n      var leap = isLeapYear(date.getFullYear());\r\n      var monthDaysCumulative = (leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE);\r\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1; // -1 since it's days since Jan 1\r\n  \r\n      return yday;\r\n    }\r\n  function __localtime_js(time, tmPtr) {\r\n      var date = new Date(readI53FromI64(time)*1000);\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getFullYear()-1900;\r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n  \r\n      var yday = ydayFromDate(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      HEAP32[(((tmPtr)+(36))>>2)] = -(date.getTimezoneOffset() * 60);\r\n  \r\n      // Attention: DST is in December in South, and some regions don't have DST at all.\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\r\n      HEAP32[(((tmPtr)+(32))>>2)] = dst;\r\n    }\r\n\r\n  function __mktime_js(tmPtr) {\r\n      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,\r\n                          HEAP32[(((tmPtr)+(16))>>2)],\r\n                          HEAP32[(((tmPtr)+(12))>>2)],\r\n                          HEAP32[(((tmPtr)+(8))>>2)],\r\n                          HEAP32[(((tmPtr)+(4))>>2)],\r\n                          HEAP32[((tmPtr)>>2)],\r\n                          0);\r\n  \r\n      // There's an ambiguous hour when the time goes back; the tm_isdst field is\r\n      // used to disambiguate it.  Date() basically guesses, so we fix it up if it\r\n      // guessed wrong, or fill in tm_isdst with the guess if it's -1.\r\n      var dst = HEAP32[(((tmPtr)+(32))>>2)];\r\n      var guessedOffset = date.getTimezoneOffset();\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South\r\n      if (dst < 0) {\r\n        // Attention: some regions don't have DST at all.\r\n        HEAP32[(((tmPtr)+(32))>>2)] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\r\n      } else if ((dst > 0) != (dstOffset == guessedOffset)) {\r\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\r\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\r\n        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.\r\n        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);\r\n      }\r\n  \r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n      var yday = ydayFromDate(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      // To match expected behavior, update fields from date\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getYear();\r\n  \r\n      return (date.getTime() / 1000)|0;\r\n    }\r\n\r\n  \r\n  \r\n  function stringToNewUTF8(str) {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = _malloc(size);\r\n      if (ret) stringToUTF8(str, ret, size);\r\n      return ret;\r\n    }\r\n  function __tzset_js(timezone, daylight, tzname) {\r\n      // TODO: Use (malleable) environment variables instead of system settings.\r\n      var currentYear = new Date().getFullYear();\r\n      var winter = new Date(currentYear, 0, 1);\r\n      var summer = new Date(currentYear, 6, 1);\r\n      var winterOffset = winter.getTimezoneOffset();\r\n      var summerOffset = summer.getTimezoneOffset();\r\n  \r\n      // Local standard timezone offset. Local standard time is not adjusted for daylight savings.\r\n      // This code uses the fact that getTimezoneOffset returns a greater value during Standard Time versus Daylight Saving Time (DST).\r\n      // Thus it determines the expected output during Standard Time, and it compares whether the output of the given date the same (Standard) or less (DST).\r\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\r\n  \r\n      // timezone is specified as seconds west of UTC (\"The external variable\r\n      // `timezone` shall be set to the difference, in seconds, between\r\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\r\n      // as returned by stdTimezoneOffset.\r\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\r\n      HEAPU32[((timezone)>>2)] = stdTimezoneOffset * 60;\r\n  \r\n      HEAP32[((daylight)>>2)] = Number(winterOffset != summerOffset);\r\n  \r\n      function extractZone(date) {\r\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\r\n        return match ? match[1] : \"GMT\";\r\n      };\r\n      var winterName = extractZone(winter);\r\n      var summerName = extractZone(summer);\r\n      var winterNamePtr = stringToNewUTF8(winterName);\r\n      var summerNamePtr = stringToNewUTF8(summerName);\r\n      if (summerOffset < winterOffset) {\r\n        // Northern hemisphere\r\n        HEAPU32[((tzname)>>2)] = winterNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = summerNamePtr;\r\n      } else {\r\n        HEAPU32[((tzname)>>2)] = summerNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = winterNamePtr;\r\n      }\r\n    }\r\n\r\n  function _abort() {\r\n      abort('');\r\n    }\r\n\r\n  function _emscripten_set_main_loop_timing(mode, value) {\r\n      Browser.mainLoop.timingMode = mode;\r\n      Browser.mainLoop.timingValue = value;\r\n  \r\n      if (!Browser.mainLoop.func) {\r\n        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.\r\n      }\r\n  \r\n      if (!Browser.mainLoop.running) {\r\n        \r\n        Browser.mainLoop.running = true;\r\n      }\r\n      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {\r\n          var timeUntilNextTick = Math.max(0, Browser.mainLoop.tickStartTime + value - _emscripten_get_now())|0;\r\n          setTimeout(Browser.mainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop\r\n        };\r\n        Browser.mainLoop.method = 'timeout';\r\n      } else if (mode == 1 /*EM_TIMING_RAF*/) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {\r\n          Browser.requestAnimationFrame(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'rAF';\r\n      } else if (mode == 2 /*EM_TIMING_SETIMMEDIATE*/) {\r\n        if (typeof setImmediate == 'undefined') {\r\n          // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)\r\n          var setImmediates = [];\r\n          var emscriptenMainLoopMessageId = 'setimmediate';\r\n          /** @param {Event} event */\r\n          var Browser_setImmediate_messageHandler = (event) => {\r\n            // When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,\r\n            // so check for both cases.\r\n            if (event.data === emscriptenMainLoopMessageId || event.data.target === emscriptenMainLoopMessageId) {\r\n              event.stopPropagation();\r\n              setImmediates.shift()();\r\n            }\r\n          };\r\n          addEventListener(\"message\", Browser_setImmediate_messageHandler, true);\r\n          setImmediate = /** @type{function(function(): ?, ...?): number} */(function Browser_emulated_setImmediate(func) {\r\n            setImmediates.push(func);\r\n            if (ENVIRONMENT_IS_WORKER) {\r\n              if (Module['setImmediates'] === undefined) Module['setImmediates'] = [];\r\n              Module['setImmediates'].push(func);\r\n              postMessage({target: emscriptenMainLoopMessageId}); // In --proxy-to-worker, route the message via proxyClient.js\r\n            } else postMessage(emscriptenMainLoopMessageId, \"*\"); // On the main thread, can just send the message to itself.\r\n          })\r\n        }\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {\r\n          setImmediate(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'immediate';\r\n      }\r\n      return 0;\r\n    }\r\n  \r\n  var _emscripten_get_now;_emscripten_get_now = () => performance.now();\r\n  ;\r\n  \r\n  \r\n    /**\r\n     * @param {number=} arg\r\n     * @param {boolean=} noSetTiming\r\n     */\r\n  function setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop, arg, noSetTiming) {\r\n      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');\r\n  \r\n      Browser.mainLoop.func = browserIterationFunc;\r\n      Browser.mainLoop.arg = arg;\r\n  \r\n      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;\r\n      function checkIsRunning() {\r\n        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) {\r\n          \r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n  \r\n      // We create the loop runner here but it is not actually running until\r\n      // _emscripten_set_main_loop_timing is called (which might happen a\r\n      // later time).  This member signifies that the current runner has not\r\n      // yet been started so that we can call runtimeKeepalivePush when it\r\n      // gets it timing set for the first time.\r\n      Browser.mainLoop.running = false;\r\n      Browser.mainLoop.runner = function Browser_mainLoop_runner() {\r\n        if (ABORT) return;\r\n        if (Browser.mainLoop.queue.length > 0) {\r\n          var start = Date.now();\r\n          var blocker = Browser.mainLoop.queue.shift();\r\n          blocker.func(blocker.arg);\r\n          if (Browser.mainLoop.remainingBlockers) {\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);\r\n            if (blocker.counted) {\r\n              Browser.mainLoop.remainingBlockers = next;\r\n            } else {\r\n              // not counted, but move the progress along a tiny bit\r\n              next = next + 0.5; // do not steal all the next one's progress\r\n              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;\r\n            }\r\n          }\r\n          out('main loop blocker \"' + blocker.name + '\" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);\r\n          Browser.mainLoop.updateStatus();\r\n  \r\n          // catches pause/resume main loop from blocker execution\r\n          if (!checkIsRunning()) return;\r\n  \r\n          setTimeout(Browser.mainLoop.runner, 0);\r\n          return;\r\n        }\r\n  \r\n        // catch pauses from non-main loop sources\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Implement very basic swap interval control\r\n        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;\r\n        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {\r\n          // Not the scheduled time to render this frame - skip.\r\n          Browser.mainLoop.scheduler();\r\n          return;\r\n        } else if (Browser.mainLoop.timingMode == 0/*EM_TIMING_SETTIMEOUT*/) {\r\n          Browser.mainLoop.tickStartTime = _emscripten_get_now();\r\n        }\r\n  \r\n        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize\r\n        // VBO double-buffering and reduce GPU stalls.\r\n        GL.newRenderingFrameStarted();\r\n  \r\n        Browser.mainLoop.runIter(browserIterationFunc);\r\n  \r\n        // catch pauses from the main loop itself\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able\r\n        // to queue the newest produced audio samples.\r\n        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()\r\n        //       do not need to be hardcoded into this function, but can be more generic.\r\n        if (typeof SDL == 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (!noSetTiming) {\r\n        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);\r\n        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (simulateInfiniteLoop) {\r\n        throw 'unwind';\r\n      }\r\n    }\r\n  \r\n  function handleException(e) {\r\n      // Certain exception types we do not treat as errors since they are used for\r\n      // internal control flow.\r\n      // 1. ExitStatus, which is thrown by exit()\r\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\r\n      //    that wish to return to JS event loop.\r\n      if (e instanceof ExitStatus || e == 'unwind') {\r\n        return EXITSTATUS;\r\n      }\r\n      quit_(1, e);\r\n    }\r\n  \r\n  \r\n  function _proc_exit(code) {\r\n      EXITSTATUS = code;\r\n      if (!keepRuntimeAlive()) {\r\n        if (Module['onExit']) Module['onExit'](code);\r\n        ABORT = true;\r\n      }\r\n      quit_(code, new ExitStatus(code));\r\n    }\r\n  /** @suppress {duplicate } */\r\n  /** @param {boolean|number=} implicit */\r\n  function exitJS(status, implicit) {\r\n      EXITSTATUS = status;\r\n  \r\n      _proc_exit(status);\r\n    }\r\n  var _exit = exitJS;\r\n  \r\n  function maybeExit() {\r\n      if (!keepRuntimeAlive()) {\r\n        try {\r\n          _exit(EXITSTATUS);\r\n        } catch (e) {\r\n          handleException(e);\r\n        }\r\n      }\r\n    }\r\n  function callUserCallback(func) {\r\n      if (ABORT) {\r\n        return;\r\n      }\r\n      try {\r\n        func();\r\n        maybeExit();\r\n      } catch (e) {\r\n        handleException(e);\r\n      }\r\n    }\r\n  \r\n  /** @param {number=} timeout */\r\n  function safeSetTimeout(func, timeout) {\r\n      \r\n      return setTimeout(() => {\r\n        \r\n        callUserCallback(func);\r\n      }, timeout);\r\n    }\r\n  \r\n  function warnOnce(text) {\r\n      if (!warnOnce.shown) warnOnce.shown = {};\r\n      if (!warnOnce.shown[text]) {\r\n        warnOnce.shown[text] = 1;\r\n        err(text);\r\n      }\r\n    }\r\n  \r\n  \r\n  var Browser = {mainLoop:{running:false,scheduler:null,method:\"\",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function() {\r\n          Browser.mainLoop.scheduler = null;\r\n          // Incrementing this signals the previous main loop that it's now become old, and it must return.\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n        },resume:function() {\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n          var timingMode = Browser.mainLoop.timingMode;\r\n          var timingValue = Browser.mainLoop.timingValue;\r\n          var func = Browser.mainLoop.func;\r\n          Browser.mainLoop.func = null;\r\n          // do not set timing and call scheduler, we will do it on the next lines\r\n          setMainLoop(func, 0, false, Browser.mainLoop.arg, true);\r\n          _emscripten_set_main_loop_timing(timingMode, timingValue);\r\n          Browser.mainLoop.scheduler();\r\n        },updateStatus:function() {\r\n          if (Module['setStatus']) {\r\n            var message = Module['statusMessage'] || 'Please wait...';\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var expected = Browser.mainLoop.expectedBlockers;\r\n            if (remaining) {\r\n              if (remaining < expected) {\r\n                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');\r\n              } else {\r\n                Module['setStatus'](message);\r\n              }\r\n            } else {\r\n              Module['setStatus']('');\r\n            }\r\n          }\r\n        },runIter:function(func) {\r\n          if (ABORT) return;\r\n          if (Module['preMainLoop']) {\r\n            var preRet = Module['preMainLoop']();\r\n            if (preRet === false) {\r\n              return; // |return false| skips a frame\r\n            }\r\n          }\r\n          callUserCallback(func);\r\n          if (Module['postMainLoop']) Module['postMainLoop']();\r\n        }},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function() {\r\n        if (!Module[\"preloadPlugins\"]) Module[\"preloadPlugins\"] = []; // needs to exist even in workers\r\n  \r\n        if (Browser.initted) return;\r\n        Browser.initted = true;\r\n  \r\n        try {\r\n          new Blob();\r\n          Browser.hasBlobConstructor = true;\r\n        } catch(e) {\r\n          Browser.hasBlobConstructor = false;\r\n          err(\"warning: no blob constructor, cannot create blobs with mimetypes\");\r\n        }\r\n        Browser.BlobBuilder = typeof MozBlobBuilder != \"undefined\" ? MozBlobBuilder : (typeof WebKitBlobBuilder != \"undefined\" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? err(\"warning: no BlobBuilder\") : null));\r\n        Browser.URLObject = typeof window != \"undefined\" ? (window.URL ? window.URL : window.webkitURL) : undefined;\r\n        if (!Module.noImageDecoding && typeof Browser.URLObject == 'undefined') {\r\n          err(\"warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.\");\r\n          Module.noImageDecoding = true;\r\n        }\r\n  \r\n        // Support for plugins that can process preloaded files. You can add more of these to\r\n        // your app by creating and appending to Module.preloadPlugins.\r\n        //\r\n        // Each plugin is asked if it can handle a file based on the file's name. If it can,\r\n        // it is given the file's raw data. When it is done, it calls a callback with the file's\r\n        // (possibly modified) data. For example, a plugin might decompress a file, or it\r\n        // might create some side data structure for use later (like an Image element, etc.).\r\n  \r\n        var imagePlugin = {};\r\n        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {\r\n          return !Module.noImageDecoding && /\\.(jpg|jpeg|png|bmp)$/i.test(name);\r\n        };\r\n        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {\r\n          var b = null;\r\n          if (Browser.hasBlobConstructor) {\r\n            try {\r\n              b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n              if (b.size !== byteArray.length) { // Safari bug #118630\r\n                // Safari's Blob can only take an ArrayBuffer\r\n                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });\r\n              }\r\n            } catch(e) {\r\n              warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');\r\n            }\r\n          }\r\n          if (!b) {\r\n            var bb = new Browser.BlobBuilder();\r\n            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range\r\n            b = bb.getBlob();\r\n          }\r\n          var url = Browser.URLObject.createObjectURL(b);\r\n          var img = new Image();\r\n          img.onload = () => {\r\n            assert(img.complete, 'Image ' + name + ' could not be decoded');\r\n            var canvas = /** @type {!HTMLCanvasElement} */ (document.createElement('canvas'));\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            var ctx = canvas.getContext('2d');\r\n            ctx.drawImage(img, 0, 0);\r\n            preloadedImages[name] = canvas;\r\n            Browser.URLObject.revokeObjectURL(url);\r\n            if (onload) onload(byteArray);\r\n          };\r\n          img.onerror = (event) => {\r\n            out('Image ' + url + ' could not be decoded');\r\n            if (onerror) onerror();\r\n          };\r\n          img.src = url;\r\n        };\r\n        Module['preloadPlugins'].push(imagePlugin);\r\n  \r\n        var audioPlugin = {};\r\n        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {\r\n          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };\r\n        };\r\n        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {\r\n          var done = false;\r\n          function finish(audio) {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = audio;\r\n            if (onload) onload(byteArray);\r\n          }\r\n          function fail() {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = new Audio(); // empty shim\r\n            if (onerror) onerror();\r\n          }\r\n          if (Browser.hasBlobConstructor) {\r\n            try {\r\n              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n            } catch(e) {\r\n              return fail();\r\n            }\r\n            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!\r\n            var audio = new Audio();\r\n            audio.addEventListener('canplaythrough', () => finish(audio), false); // use addEventListener due to chromium bug 124926\r\n            audio.onerror = function audio_onerror(event) {\r\n              if (done) return;\r\n              err('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');\r\n              function encode64(data) {\r\n                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n                var PAD = '=';\r\n                var ret = '';\r\n                var leftchar = 0;\r\n                var leftbits = 0;\r\n                for (var i = 0; i < data.length; i++) {\r\n                  leftchar = (leftchar << 8) | data[i];\r\n                  leftbits += 8;\r\n                  while (leftbits >= 6) {\r\n                    var curr = (leftchar >> (leftbits-6)) & 0x3f;\r\n                    leftbits -= 6;\r\n                    ret += BASE[curr];\r\n                  }\r\n                }\r\n                if (leftbits == 2) {\r\n                  ret += BASE[(leftchar&3) << 4];\r\n                  ret += PAD + PAD;\r\n                } else if (leftbits == 4) {\r\n                  ret += BASE[(leftchar&0xf) << 2];\r\n                  ret += PAD;\r\n                }\r\n                return ret;\r\n              }\r\n              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);\r\n              finish(audio); // we don't wait for confirmation this worked - but it's worth trying\r\n            };\r\n            audio.src = url;\r\n            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror\r\n            safeSetTimeout(() => {\r\n              finish(audio); // try to use it even though it is not necessarily ready to play\r\n            }, 10000);\r\n          } else {\r\n            return fail();\r\n          }\r\n        };\r\n        Module['preloadPlugins'].push(audioPlugin);\r\n  \r\n        // Canvas event setup\r\n  \r\n        function pointerLockChange() {\r\n          Browser.pointerLock = document['pointerLockElement'] === Module['canvas'] ||\r\n                                document['mozPointerLockElement'] === Module['canvas'] ||\r\n                                document['webkitPointerLockElement'] === Module['canvas'] ||\r\n                                document['msPointerLockElement'] === Module['canvas'];\r\n        }\r\n        var canvas = Module['canvas'];\r\n        if (canvas) {\r\n          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module\r\n          // Module['forcedAspectRatio'] = 4 / 3;\r\n  \r\n          canvas.requestPointerLock = canvas['requestPointerLock'] ||\r\n                                      canvas['mozRequestPointerLock'] ||\r\n                                      canvas['webkitRequestPointerLock'] ||\r\n                                      canvas['msRequestPointerLock'] ||\r\n                                      (() => {});\r\n          canvas.exitPointerLock = document['exitPointerLock'] ||\r\n                                   document['mozExitPointerLock'] ||\r\n                                   document['webkitExitPointerLock'] ||\r\n                                   document['msExitPointerLock'] ||\r\n                                   (() => {}); // no-op if function does not exist\r\n          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);\r\n  \r\n          document.addEventListener('pointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mozpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mspointerlockchange', pointerLockChange, false);\r\n  \r\n          if (Module['elementPointerLock']) {\r\n            canvas.addEventListener(\"click\", (ev) => {\r\n              if (!Browser.pointerLock && Module['canvas'].requestPointerLock) {\r\n                Module['canvas'].requestPointerLock();\r\n                ev.preventDefault();\r\n              }\r\n            }, false);\r\n          }\r\n        }\r\n      },handledByPreloadPlugin:function(byteArray, fullname, finish, onerror) {\r\n        // Ensure plugins are ready.\r\n        Browser.init();\r\n  \r\n        var handled = false;\r\n        Module['preloadPlugins'].forEach((plugin) => {\r\n          if (handled) return;\r\n          if (plugin['canHandle'](fullname)) {\r\n            plugin['handle'](byteArray, fullname, finish, onerror);\r\n            handled = true;\r\n          }\r\n        });\r\n        return handled;\r\n      },createContext:function(/** @type {HTMLCanvasElement} */ canvas, useWebGL, setInModule, webGLContextAttributes) {\r\n        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.\r\n  \r\n        var ctx;\r\n        var contextHandle;\r\n        if (useWebGL) {\r\n          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.\r\n          var contextAttributes = {\r\n            antialias: false,\r\n            alpha: false,\r\n            majorVersion: (typeof WebGL2RenderingContext != 'undefined') ? 2 : 1,\r\n          };\r\n  \r\n          if (webGLContextAttributes) {\r\n            for (var attribute in webGLContextAttributes) {\r\n              contextAttributes[attribute] = webGLContextAttributes[attribute];\r\n            }\r\n          }\r\n  \r\n          // This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not\r\n          // actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function\r\n          // Browser.createContext() should not even be emitted.\r\n          if (typeof GL != 'undefined') {\r\n            contextHandle = GL.createContext(canvas, contextAttributes);\r\n            if (contextHandle) {\r\n              ctx = GL.getContext(contextHandle).GLctx;\r\n            }\r\n          }\r\n        } else {\r\n          ctx = canvas.getContext('2d');\r\n        }\r\n  \r\n        if (!ctx) return null;\r\n  \r\n        if (setInModule) {\r\n          if (!useWebGL) assert(typeof GLctx == 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');\r\n  \r\n          Module.ctx = ctx;\r\n          if (useWebGL) GL.makeContextCurrent(contextHandle);\r\n          Module.useWebGL = useWebGL;\r\n          Browser.moduleContextCreatedCallbacks.forEach((callback) => callback());\r\n          Browser.init();\r\n        }\r\n        return ctx;\r\n      },destroyContext:function(canvas, useWebGL, setInModule) {},fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:function(lockPointer, resizeCanvas) {\r\n        Browser.lockPointer = lockPointer;\r\n        Browser.resizeCanvas = resizeCanvas;\r\n        if (typeof Browser.lockPointer == 'undefined') Browser.lockPointer = true;\r\n        if (typeof Browser.resizeCanvas == 'undefined') Browser.resizeCanvas = false;\r\n  \r\n        var canvas = Module['canvas'];\r\n        function fullscreenChange() {\r\n          Browser.isFullscreen = false;\r\n          var canvasContainer = canvas.parentNode;\r\n          if ((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n               document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n               document['webkitCurrentFullScreenElement']) === canvasContainer) {\r\n            canvas.exitFullscreen = Browser.exitFullscreen;\r\n            if (Browser.lockPointer) canvas.requestPointerLock();\r\n            Browser.isFullscreen = true;\r\n            if (Browser.resizeCanvas) {\r\n              Browser.setFullscreenCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          } else {\r\n            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen\r\n            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\r\n            canvasContainer.parentNode.removeChild(canvasContainer);\r\n  \r\n            if (Browser.resizeCanvas) {\r\n              Browser.setWindowedCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          }\r\n          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullscreen);\r\n          if (Module['onFullscreen']) Module['onFullscreen'](Browser.isFullscreen);\r\n        }\r\n  \r\n        if (!Browser.fullscreenHandlersInstalled) {\r\n          Browser.fullscreenHandlersInstalled = true;\r\n          document.addEventListener('fullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('mozfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('webkitfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('MSFullscreenChange', fullscreenChange, false);\r\n        }\r\n  \r\n        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root\r\n        var canvasContainer = document.createElement(\"div\");\r\n        canvas.parentNode.insertBefore(canvasContainer, canvas);\r\n        canvasContainer.appendChild(canvas);\r\n  \r\n        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)\r\n        canvasContainer.requestFullscreen = canvasContainer['requestFullscreen'] ||\r\n                                            canvasContainer['mozRequestFullScreen'] ||\r\n                                            canvasContainer['msRequestFullscreen'] ||\r\n                                           (canvasContainer['webkitRequestFullscreen'] ? () => canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) : null) ||\r\n                                           (canvasContainer['webkitRequestFullScreen'] ? () => canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) : null);\r\n  \r\n        canvasContainer.requestFullscreen();\r\n      },exitFullscreen:function() {\r\n        // This is workaround for chrome. Trying to exit from fullscreen\r\n        // not in fullscreen state will cause \"TypeError: Document not active\"\r\n        // in chrome. See https://github.com/emscripten-core/emscripten/pull/8236\r\n        if (!Browser.isFullscreen) {\r\n          return false;\r\n        }\r\n  \r\n        var CFS = document['exitFullscreen'] ||\r\n                  document['cancelFullScreen'] ||\r\n                  document['mozCancelFullScreen'] ||\r\n                  document['msExitFullscreen'] ||\r\n                  document['webkitCancelFullScreen'] ||\r\n            (() => {});\r\n        CFS.apply(document, []);\r\n        return true;\r\n      },nextRAF:0,fakeRequestAnimationFrame:function(func) {\r\n        // try to keep 60fps between calls to here\r\n        var now = Date.now();\r\n        if (Browser.nextRAF === 0) {\r\n          Browser.nextRAF = now + 1000/60;\r\n        } else {\r\n          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0\r\n            Browser.nextRAF += 1000/60;\r\n          }\r\n        }\r\n        var delay = Math.max(Browser.nextRAF - now, 0);\r\n        setTimeout(func, delay);\r\n      },requestAnimationFrame:function(func) {\r\n        if (typeof requestAnimationFrame == 'function') {\r\n          requestAnimationFrame(func);\r\n          return;\r\n        }\r\n        var RAF = Browser.fakeRequestAnimationFrame;\r\n        RAF(func);\r\n      },safeSetTimeout:function(func, timeout) {\r\n        // Legacy function, this is used by the SDL2 port so we need to keep it\r\n        // around at least until that is updated.\r\n        // See https://github.com/libsdl-org/SDL/pull/6304\r\n        return safeSetTimeout(func, timeout);\r\n      },safeRequestAnimationFrame:function(func) {\r\n        \r\n        return Browser.requestAnimationFrame(() => {\r\n          \r\n          callUserCallback(func);\r\n        });\r\n      },getMimetype:function(name) {\r\n        return {\r\n          'jpg': 'image/jpeg',\r\n          'jpeg': 'image/jpeg',\r\n          'png': 'image/png',\r\n          'bmp': 'image/bmp',\r\n          'ogg': 'audio/ogg',\r\n          'wav': 'audio/wav',\r\n          'mp3': 'audio/mpeg'\r\n        }[name.substr(name.lastIndexOf('.')+1)];\r\n      },getUserMedia:function(func) {\r\n        if (!window.getUserMedia) {\r\n          window.getUserMedia = navigator['getUserMedia'] ||\r\n                                navigator['mozGetUserMedia'];\r\n        }\r\n        window.getUserMedia(func);\r\n      },getMovementX:function(event) {\r\n        return event['movementX'] ||\r\n               event['mozMovementX'] ||\r\n               event['webkitMovementX'] ||\r\n               0;\r\n      },getMovementY:function(event) {\r\n        return event['movementY'] ||\r\n               event['mozMovementY'] ||\r\n               event['webkitMovementY'] ||\r\n               0;\r\n      },getMouseWheelDelta:function(event) {\r\n        var delta = 0;\r\n        switch (event.type) {\r\n          case 'DOMMouseScroll':\r\n            // 3 lines make up a step\r\n            delta = event.detail / 3;\r\n            break;\r\n          case 'mousewheel':\r\n            // 120 units make up a step\r\n            delta = event.wheelDelta / 120;\r\n            break;\r\n          case 'wheel':\r\n            delta = event.deltaY\r\n            switch (event.deltaMode) {\r\n              case 0:\r\n                // DOM_DELTA_PIXEL: 100 pixels make up a step\r\n                delta /= 100;\r\n                break;\r\n              case 1:\r\n                // DOM_DELTA_LINE: 3 lines make up a step\r\n                delta /= 3;\r\n                break;\r\n              case 2:\r\n                // DOM_DELTA_PAGE: A page makes up 80 steps\r\n                delta *= 80;\r\n                break;\r\n              default:\r\n                throw 'unrecognized mouse wheel delta mode: ' + event.deltaMode;\r\n            }\r\n            break;\r\n          default:\r\n            throw 'unrecognized mouse wheel event: ' + event.type;\r\n        }\r\n        return delta;\r\n      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function(event) { // event should be mousemove, mousedown or mouseup\r\n        if (Browser.pointerLock) {\r\n          // When the pointer is locked, calculate the coordinates\r\n          // based on the movement of the mouse.\r\n          // Workaround for Firefox bug 764498\r\n          if (event.type != 'mousemove' &&\r\n              ('mozMovementX' in event)) {\r\n            Browser.mouseMovementX = Browser.mouseMovementY = 0;\r\n          } else {\r\n            Browser.mouseMovementX = Browser.getMovementX(event);\r\n            Browser.mouseMovementY = Browser.getMovementY(event);\r\n          }\r\n  \r\n          // check if SDL is available\r\n          if (typeof SDL != \"undefined\") {\r\n            Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;\r\n            Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;\r\n          } else {\r\n            // just add the mouse delta to the current absolut mouse position\r\n            // FIXME: ideally this should be clamped against the canvas size and zero\r\n            Browser.mouseX += Browser.mouseMovementX;\r\n            Browser.mouseY += Browser.mouseMovementY;\r\n          }\r\n        } else {\r\n          // Otherwise, calculate the movement based on the changes\r\n          // in the coordinates.\r\n          var rect = Module[\"canvas\"].getBoundingClientRect();\r\n          var cw = Module[\"canvas\"].width;\r\n          var ch = Module[\"canvas\"].height;\r\n  \r\n          // Neither .scrollX or .pageXOffset are defined in a spec, but\r\n          // we prefer .scrollX because it is currently in a spec draft.\r\n          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)\r\n          var scrollX = ((typeof window.scrollX != 'undefined') ? window.scrollX : window.pageXOffset);\r\n          var scrollY = ((typeof window.scrollY != 'undefined') ? window.scrollY : window.pageYOffset);\r\n  \r\n          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {\r\n            var touch = event.touch;\r\n            if (touch === undefined) {\r\n              return; // the \"touch\" property is only defined in SDL\r\n  \r\n            }\r\n            var adjustedX = touch.pageX - (scrollX + rect.left);\r\n            var adjustedY = touch.pageY - (scrollY + rect.top);\r\n  \r\n            adjustedX = adjustedX * (cw / rect.width);\r\n            adjustedY = adjustedY * (ch / rect.height);\r\n  \r\n            var coords = { x: adjustedX, y: adjustedY };\r\n  \r\n            if (event.type === 'touchstart') {\r\n              Browser.lastTouches[touch.identifier] = coords;\r\n              Browser.touches[touch.identifier] = coords;\r\n            } else if (event.type === 'touchend' || event.type === 'touchmove') {\r\n              var last = Browser.touches[touch.identifier];\r\n              if (!last) last = coords;\r\n              Browser.lastTouches[touch.identifier] = last;\r\n              Browser.touches[touch.identifier] = coords;\r\n            }\r\n            return;\r\n          }\r\n  \r\n          var x = event.pageX - (scrollX + rect.left);\r\n          var y = event.pageY - (scrollY + rect.top);\r\n  \r\n          // the canvas might be CSS-scaled compared to its backbuffer;\r\n          // SDL-using content will want mouse coordinates in terms\r\n          // of backbuffer units.\r\n          x = x * (cw / rect.width);\r\n          y = y * (ch / rect.height);\r\n  \r\n          Browser.mouseMovementX = x - Browser.mouseX;\r\n          Browser.mouseMovementY = y - Browser.mouseY;\r\n          Browser.mouseX = x;\r\n          Browser.mouseY = y;\r\n        }\r\n      },resizeListeners:[],updateResizeListeners:function() {\r\n        var canvas = Module['canvas'];\r\n        Browser.resizeListeners.forEach((listener) => listener(canvas.width, canvas.height));\r\n      },setCanvasSize:function(width, height, noUpdates) {\r\n        var canvas = Module['canvas'];\r\n        Browser.updateCanvasDimensions(canvas, width, height);\r\n        if (!noUpdates) Browser.updateResizeListeners();\r\n      },windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:function() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags | 0x00800000; // set SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },setWindowedCanvasSize:function() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },updateCanvasDimensions:function(canvas, wNative, hNative) {\r\n        if (wNative && hNative) {\r\n          canvas.widthNative = wNative;\r\n          canvas.heightNative = hNative;\r\n        } else {\r\n          wNative = canvas.widthNative;\r\n          hNative = canvas.heightNative;\r\n        }\r\n        var w = wNative;\r\n        var h = hNative;\r\n        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {\r\n          if (w/h < Module['forcedAspectRatio']) {\r\n            w = Math.round(h * Module['forcedAspectRatio']);\r\n          } else {\r\n            h = Math.round(w / Module['forcedAspectRatio']);\r\n          }\r\n        }\r\n        if (((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n             document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {\r\n           var factor = Math.min(screen.width / w, screen.height / h);\r\n           w = Math.round(w * factor);\r\n           h = Math.round(h * factor);\r\n        }\r\n        if (Browser.resizeCanvas) {\r\n          if (canvas.width  != w) canvas.width  = w;\r\n          if (canvas.height != h) canvas.height = h;\r\n          if (typeof canvas.style != 'undefined') {\r\n            canvas.style.removeProperty( \"width\");\r\n            canvas.style.removeProperty(\"height\");\r\n          }\r\n        } else {\r\n          if (canvas.width  != wNative) canvas.width  = wNative;\r\n          if (canvas.height != hNative) canvas.height = hNative;\r\n          if (typeof canvas.style != 'undefined') {\r\n            if (w != wNative || h != hNative) {\r\n              canvas.style.setProperty( \"width\", w + \"px\", \"important\");\r\n              canvas.style.setProperty(\"height\", h + \"px\", \"important\");\r\n            } else {\r\n              canvas.style.removeProperty( \"width\");\r\n              canvas.style.removeProperty(\"height\");\r\n            }\r\n          }\r\n        }\r\n      }};\r\n  \r\n  var EGL = {errorCode:12288,defaultDisplayInitialized:false,currentContext:0,currentReadSurface:0,currentDrawSurface:0,contextAttributes:{alpha:false,depth:false,stencil:false,antialias:false},stringCache:{},setErrorCode:function(code) {\r\n        EGL.errorCode = code;\r\n      },chooseConfig:function(display, attribList, config, config_size, numConfigs) {\r\n        if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n          EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n          return 0;\r\n        }\r\n  \r\n        if (attribList) {\r\n          // read attribList if it is non-null\r\n          for (;;) {\r\n            var param = HEAP32[((attribList)>>2)];\r\n            if (param == 0x3021 /*EGL_ALPHA_SIZE*/) {\r\n              var alphaSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.alpha = (alphaSize > 0);\r\n            } else if (param == 0x3025 /*EGL_DEPTH_SIZE*/) {\r\n              var depthSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.depth = (depthSize > 0);\r\n            } else if (param == 0x3026 /*EGL_STENCIL_SIZE*/) {\r\n              var stencilSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.stencil = (stencilSize > 0);\r\n            } else if (param == 0x3031 /*EGL_SAMPLES*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples > 0);\r\n            } else if (param == 0x3032 /*EGL_SAMPLE_BUFFERS*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples == 1);\r\n            } else if (param == 0x3100 /*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/) {\r\n              var requestedPriority = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.lowLatency = (requestedPriority != 0x3103 /*EGL_CONTEXT_PRIORITY_LOW_IMG*/);\r\n            } else if (param == 0x3038 /*EGL_NONE*/) {\r\n                break;\r\n            }\r\n            attribList += 8;\r\n          }\r\n        }\r\n  \r\n        if ((!config || !config_size) && !numConfigs) {\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n        }\r\n        if (numConfigs) {\r\n          HEAP32[((numConfigs)>>2)] = 1; // Total number of supported configs: 1.\r\n        }\r\n        if (config && config_size > 0) {\r\n          HEAP32[((config)>>2)] = 62002;\r\n        }\r\n  \r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      }};\r\n  function _eglBindAPI(api) {\r\n      if (api == 0x30A0 /* EGL_OPENGL_ES_API */) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      }\r\n      // if (api == 0x30A1 /* EGL_OPENVG_API */ || api == 0x30A2 /* EGL_OPENGL_API */) {\r\n      EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n      return 0;\r\n    }\r\n\r\n  function _eglChooseConfig(display, attrib_list, configs, config_size, numConfigs) {\r\n      return EGL.chooseConfig(display, attrib_list, configs, config_size, numConfigs);\r\n    }\r\n\r\n  function webgl_enable_ANGLE_instanced_arrays(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 26 and Google Chrome 30 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('ANGLE_instanced_arrays');\r\n      if (ext) {\r\n        ctx['vertexAttribDivisor'] = function(index, divisor) { ext['vertexAttribDivisorANGLE'](index, divisor); };\r\n        ctx['drawArraysInstanced'] = function(mode, first, count, primcount) { ext['drawArraysInstancedANGLE'](mode, first, count, primcount); };\r\n        ctx['drawElementsInstanced'] = function(mode, count, type, indices, primcount) { ext['drawElementsInstancedANGLE'](mode, count, type, indices, primcount); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_OES_vertex_array_object(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 25 and WebKit 536.28/desktop Safari 6.0.3 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('OES_vertex_array_object');\r\n      if (ext) {\r\n        ctx['createVertexArray'] = function() { return ext['createVertexArrayOES'](); };\r\n        ctx['deleteVertexArray'] = function(vao) { ext['deleteVertexArrayOES'](vao); };\r\n        ctx['bindVertexArray'] = function(vao) { ext['bindVertexArrayOES'](vao); };\r\n        ctx['isVertexArray'] = function(vao) { return ext['isVertexArrayOES'](vao); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_draw_buffers(ctx) {\r\n      // Extension available in WebGL 1 from Firefox 28 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('WEBGL_draw_buffers');\r\n      if (ext) {\r\n        ctx['drawBuffers'] = function(n, bufs) { ext['drawBuffersWEBGL'](n, bufs); };\r\n        return 1;\r\n      }\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(ctx) {\r\n      // Closure is expected to be allowed to minify the '.dibvbi' property, so not accessing it quoted.\r\n      return !!(ctx.dibvbi = ctx.getExtension('WEBGL_draw_instanced_base_vertex_base_instance'));\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(ctx) {\r\n      // Closure is expected to be allowed to minify the '.mdibvbi' property, so not accessing it quoted.\r\n      return !!(ctx.mdibvbi = ctx.getExtension('WEBGL_multi_draw_instanced_base_vertex_base_instance'));\r\n    }\r\n  \r\n  function webgl_enable_WEBGL_multi_draw(ctx) {\r\n      // Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.\r\n      return !!(ctx.multiDrawWebgl = ctx.getExtension('WEBGL_multi_draw'));\r\n    }\r\n  \r\n  \r\n  var GL = {counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:[],offscreenCanvases:{},queries:[],samplers:[],transformFeedbacks:[],syncs:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],stringCache:{},stringiCache:{},unpackAlignment:4,recordError:function recordError(errorCode) {\r\n        if (!GL.lastError) {\r\n          GL.lastError = errorCode;\r\n        }\r\n      },getNewId:function(table) {\r\n        var ret = GL.counter++;\r\n        for (var i = table.length; i < ret; i++) {\r\n          table[i] = null;\r\n        }\r\n        return ret;\r\n      },MAX_TEMP_BUFFER_SIZE:2097152,numTempVertexBuffersPerSize:64,log2ceilLookup:function(i) {\r\n        return 32 - Math.clz32(i === 0 ? 0 : i - 1);\r\n      },generateTempBuffers:function(quads, context) {\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        context.tempVertexBufferCounters1 = [];\r\n        context.tempVertexBufferCounters2 = [];\r\n        context.tempVertexBufferCounters1.length = context.tempVertexBufferCounters2.length = largestIndex+1;\r\n        context.tempVertexBuffers1 = [];\r\n        context.tempVertexBuffers2 = [];\r\n        context.tempVertexBuffers1.length = context.tempVertexBuffers2.length = largestIndex+1;\r\n        context.tempIndexBuffers = [];\r\n        context.tempIndexBuffers.length = largestIndex+1;\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          context.tempIndexBuffers[i] = null; // Created on-demand\r\n          context.tempVertexBufferCounters1[i] = context.tempVertexBufferCounters2[i] = 0;\r\n          var ringbufferLength = GL.numTempVertexBuffersPerSize;\r\n          context.tempVertexBuffers1[i] = [];\r\n          context.tempVertexBuffers2[i] = [];\r\n          var ringbuffer1 = context.tempVertexBuffers1[i];\r\n          var ringbuffer2 = context.tempVertexBuffers2[i];\r\n          ringbuffer1.length = ringbuffer2.length = ringbufferLength;\r\n          for (var j = 0; j < ringbufferLength; ++j) {\r\n            ringbuffer1[j] = ringbuffer2[j] = null; // Created on-demand\r\n          }\r\n        }\r\n  \r\n        if (quads) {\r\n          // GL_QUAD indexes can be precalculated\r\n          context.tempQuadIndexBuffer = GLctx.createBuffer();\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, context.tempQuadIndexBuffer);\r\n          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;\r\n          var quadIndexes = new Uint16Array(numIndexes);\r\n          var i = 0, v = 0;\r\n          while (1) {\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+1;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+3;\r\n            if (i >= numIndexes) break;\r\n            v += 4;\r\n          }\r\n          context.GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, quadIndexes, 0x88E4 /*GL_STATIC_DRAW*/);\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n        }\r\n      },getTempVertexBuffer:function getTempVertexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ringbuffer = GL.currentContext.tempVertexBuffers1[idx];\r\n        var nextFreeBufferIndex = GL.currentContext.tempVertexBufferCounters1[idx];\r\n        GL.currentContext.tempVertexBufferCounters1[idx] = (GL.currentContext.tempVertexBufferCounters1[idx]+1) & (GL.numTempVertexBuffersPerSize-1);\r\n        var vbo = ringbuffer[nextFreeBufferIndex];\r\n        if (vbo) {\r\n          return vbo;\r\n        }\r\n        var prevVBO = GLctx.getParameter(0x8894 /*GL_ARRAY_BUFFER_BINDING*/);\r\n        ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, ringbuffer[nextFreeBufferIndex]);\r\n        GLctx.bufferData(0x8892 /*GL_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, prevVBO);\r\n        return ringbuffer[nextFreeBufferIndex];\r\n      },getTempIndexBuffer:function getTempIndexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ibo = GL.currentContext.tempIndexBuffers[idx];\r\n        if (ibo) {\r\n          return ibo;\r\n        }\r\n        var prevIBO = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n        GL.currentContext.tempIndexBuffers[idx] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, GL.currentContext.tempIndexBuffers[idx]);\r\n        GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, prevIBO);\r\n        return GL.currentContext.tempIndexBuffers[idx];\r\n      },newRenderingFrameStarted:function newRenderingFrameStarted() {\r\n        if (!GL.currentContext) {\r\n          return;\r\n        }\r\n        var vb = GL.currentContext.tempVertexBuffers1;\r\n        GL.currentContext.tempVertexBuffers1 = GL.currentContext.tempVertexBuffers2;\r\n        GL.currentContext.tempVertexBuffers2 = vb;\r\n        vb = GL.currentContext.tempVertexBufferCounters1;\r\n        GL.currentContext.tempVertexBufferCounters1 = GL.currentContext.tempVertexBufferCounters2;\r\n        GL.currentContext.tempVertexBufferCounters2 = vb;\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          GL.currentContext.tempVertexBufferCounters1[i] = 0;\r\n        }\r\n      },getSource:function(shader, count, string, length) {\r\n        var source = '';\r\n        for (var i = 0; i < count; ++i) {\r\n          var len = length ? HEAP32[(((length)+(i*4))>>2)] : -1;\r\n          source += UTF8ToString(HEAP32[(((string)+(i*4))>>2)], len < 0 ? undefined : len);\r\n        }\r\n        return source;\r\n      },calcBufLength:function calcBufLength(size, type, stride, count) {\r\n        if (stride > 0) {\r\n          return count * stride;  // XXXvlad this is not exactly correct I don't think\r\n        }\r\n        var typeSize = GL.byteSizeByType[type - GL.byteSizeByTypeRoot];\r\n        return size * typeSize * count;\r\n      },usedTempBuffers:[],preDrawHandleClientVertexAttribBindings:function preDrawHandleClientVertexAttribBindings(count) {\r\n        GL.resetBufferBinding = false;\r\n  \r\n        // TODO: initial pass to detect ranges we need to upload, might not need an upload per attrib\r\n        for (var i = 0; i < GL.currentContext.maxVertexAttribs; ++i) {\r\n          var cb = GL.currentContext.clientBuffers[i];\r\n          if (!cb.clientside || !cb.enabled) continue;\r\n  \r\n          GL.resetBufferBinding = true;\r\n  \r\n          var size = GL.calcBufLength(cb.size, cb.type, cb.stride, count);\r\n          var buf = GL.getTempVertexBuffer(size);\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, buf);\r\n          GLctx.bufferSubData(0x8892 /*GL_ARRAY_BUFFER*/,\r\n                                   0,\r\n                                   HEAPU8.subarray(cb.ptr, cb.ptr + size));\r\n          cb.vertexAttribPointerAdaptor.call(GLctx, i, cb.size, cb.type, cb.normalized, cb.stride, 0);\r\n        }\r\n      },postDrawHandleClientVertexAttribBindings:function postDrawHandleClientVertexAttribBindings() {\r\n        if (GL.resetBufferBinding) {\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, GL.buffers[GLctx.currentArrayBufferBinding]);\r\n        }\r\n      },createContext:function(/** @type {HTMLCanvasElement} */ canvas, webGLContextAttributes) {\r\n  \r\n        // BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL context on a canvas,\r\n        // calling .getContext() will always return that context independent of which 'webgl' or 'webgl2'\r\n        // context version was passed. See https://bugs.webkit.org/show_bug.cgi?id=222758 and\r\n        // https://github.com/emscripten-core/emscripten/issues/13295.\r\n        // TODO: Once the bug is fixed and shipped in Safari, adjust the Safari version field in above check.\r\n        if (!canvas.getContextSafariWebGL2Fixed) {\r\n          canvas.getContextSafariWebGL2Fixed = canvas.getContext;\r\n          /** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */\r\n          function fixedGetContext(ver, attrs) {\r\n            var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\r\n            return ((ver == 'webgl') == (gl instanceof WebGLRenderingContext)) ? gl : null;\r\n          }\r\n          canvas.getContext = fixedGetContext;\r\n        }\r\n  \r\n        var ctx =\r\n          (webGLContextAttributes.majorVersion > 1)\r\n          ?\r\n            canvas.getContext(\"webgl2\", webGLContextAttributes)\r\n          :\r\n          (canvas.getContext(\"webgl\", webGLContextAttributes)\r\n            // https://caniuse.com/#feat=webgl\r\n            );\r\n  \r\n        if (!ctx) return 0;\r\n  \r\n        var handle = GL.registerContext(ctx, webGLContextAttributes);\r\n  \r\n        return handle;\r\n      },registerContext:function(ctx, webGLContextAttributes) {\r\n        // without pthreads a context is just an integer ID\r\n        var handle = GL.getNewId(GL.contexts);\r\n  \r\n        var context = {\r\n          handle: handle,\r\n          attributes: webGLContextAttributes,\r\n          version: webGLContextAttributes.majorVersion,\r\n          GLctx: ctx\r\n        };\r\n  \r\n        // Store the created context object so that we can access the context given a canvas without having to pass the parameters again.\r\n        if (ctx.canvas) ctx.canvas.GLctxObject = context;\r\n        GL.contexts[handle] = context;\r\n        if (typeof webGLContextAttributes.enableExtensionsByDefault == 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {\r\n          GL.initExtensions(context);\r\n        }\r\n  \r\n        context.maxVertexAttribs = context.GLctx.getParameter(0x8869 /*GL_MAX_VERTEX_ATTRIBS*/);\r\n        context.clientBuffers = [];\r\n        for (var i = 0; i < context.maxVertexAttribs; i++) {\r\n          context.clientBuffers[i] = { enabled: false, clientside: false, size: 0, type: 0, normalized: 0, stride: 0, ptr: 0, vertexAttribPointerAdaptor: null };\r\n        }\r\n  \r\n        GL.generateTempBuffers(false, context);\r\n  \r\n        return handle;\r\n      },makeContextCurrent:function(contextHandle) {\r\n  \r\n        GL.currentContext = GL.contexts[contextHandle]; // Active Emscripten GL layer context object.\r\n        Module.ctx = GLctx = GL.currentContext && GL.currentContext.GLctx; // Active WebGL context object.\r\n        return !(contextHandle && !GLctx);\r\n      },getContext:function(contextHandle) {\r\n        return GL.contexts[contextHandle];\r\n      },deleteContext:function(contextHandle) {\r\n        if (GL.currentContext === GL.contexts[contextHandle]) GL.currentContext = null;\r\n        if (typeof JSEvents == 'object') JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas); // Release all JS event handlers on the DOM element that the GL context is associated with since the context is now deleted.\r\n        if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined; // Make sure the canvas object no longer refers to the context object so there are no GC surprises.\r\n        GL.contexts[contextHandle] = null;\r\n      },initExtensions:function(context) {\r\n        // If this function is called without a specific context object, init the extensions of the currently active context.\r\n        if (!context) context = GL.currentContext;\r\n  \r\n        if (context.initExtensionsDone) return;\r\n        context.initExtensionsDone = true;\r\n  \r\n        var GLctx = context.GLctx;\r\n  \r\n        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist.\r\n  \r\n        // Extensions that are only available in WebGL 1 (the calls will be no-ops if called on a WebGL 2 context active)\r\n        webgl_enable_ANGLE_instanced_arrays(GLctx);\r\n        webgl_enable_OES_vertex_array_object(GLctx);\r\n        webgl_enable_WEBGL_draw_buffers(GLctx);\r\n        // Extensions that are available from WebGL >= 2 (no-op if called on a WebGL 1 context active)\r\n        webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);\r\n        webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);\r\n  \r\n        // On WebGL 2, EXT_disjoint_timer_query is replaced with an alternative\r\n        // that's based on core APIs, and exposes only the queryCounterEXT()\r\n        // entrypoint.\r\n        if (context.version >= 2) {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query_webgl2\");\r\n        }\r\n  \r\n        // However, Firefox exposes the WebGL 1 version on WebGL 2 as well and\r\n        // thus we look for the WebGL 1 version again if the WebGL 2 version\r\n        // isn't present. https://bugzilla.mozilla.org/show_bug.cgi?id=1328882\r\n        if (context.version < 2 || !GLctx.disjointTimerQueryExt)\r\n        {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query\");\r\n        }\r\n  \r\n        webgl_enable_WEBGL_multi_draw(GLctx);\r\n  \r\n        // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n        var exts = GLctx.getSupportedExtensions() || [];\r\n        exts.forEach(function(ext) {\r\n          // WEBGL_lose_context, WEBGL_debug_renderer_info and WEBGL_debug_shaders are not enabled by default.\r\n          if (!ext.includes('lose_context') && !ext.includes('debug')) {\r\n            // Call .getExtension() to enable that extension permanently.\r\n            GLctx.getExtension(ext);\r\n          }\r\n        });\r\n      }};\r\n  \r\n  function _eglCreateContext(display, config, hmm, contextAttribs) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n  \r\n      // EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.\r\n      // So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.\r\n      var glesContextVersion = 1;\r\n      for (;;) {\r\n        var param = HEAP32[((contextAttribs)>>2)];\r\n        if (param == 0x3098 /*EGL_CONTEXT_CLIENT_VERSION*/) {\r\n          glesContextVersion = HEAP32[(((contextAttribs)+(4))>>2)];\r\n        } else if (param == 0x3038 /*EGL_NONE*/) {\r\n          break;\r\n        } else {\r\n          /* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */\r\n          EGL.setErrorCode(0x3004 /*EGL_BAD_ATTRIBUTE*/);\r\n          return 0;\r\n        }\r\n        contextAttribs += 8;\r\n      }\r\n      if (glesContextVersion < 2 || glesContextVersion > 3) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n  \r\n      EGL.contextAttributes.majorVersion = glesContextVersion - 1; // WebGL 1 is GLES 2, WebGL2 is GLES3\r\n      EGL.contextAttributes.minorVersion = 0;\r\n  \r\n      EGL.context = GL.createContext(Module['canvas'], EGL.contextAttributes);\r\n  \r\n      if (EGL.context != 0) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n  \r\n        // Run callbacks so that GL emulation works\r\n        GL.makeContextCurrent(EGL.context);\r\n        Module.useWebGL = true;\r\n        Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });\r\n  \r\n        // Note: This function only creates a context, but it shall not make it active.\r\n        GL.makeContextCurrent(null);\r\n        return 62004; // Magic ID for Emscripten EGLContext\r\n      } else {\r\n        EGL.setErrorCode(0x3009 /* EGL_BAD_MATCH */); // By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n    }\r\n\r\n  function _eglCreateWindowSurface(display, config, win, attrib_list) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      // TODO: Examine attrib_list! Parameters that can be present there are:\r\n      // - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)\r\n      // - EGL_VG_COLORSPACE (can't be set)\r\n      // - EGL_VG_ALPHA_FORMAT (can't be set)\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 62006; /* Magic ID for Emscripten 'default surface' */\r\n    }\r\n\r\n  \r\n  function _eglDestroyContext(display, context) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (context != 62004 /* Magic ID for Emscripten EGLContext */) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.deleteContext(EGL.context);\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.currentContext == context) {\r\n        EGL.currentContext = 0;\r\n      }\r\n      return 1 /* EGL_TRUE */;\r\n    }\r\n\r\n  function _eglDestroySurface(display, surface) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (surface != 62006 /* Magic ID for the only EGLSurface supported by Emscripten */) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 1;\r\n      }\r\n      if (EGL.currentReadSurface == surface) {\r\n        EGL.currentReadSurface = 0;\r\n      }\r\n      if (EGL.currentDrawSurface == surface) {\r\n        EGL.currentDrawSurface = 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1; /* Magic ID for Emscripten 'default surface' */\r\n    }\r\n\r\n  function _eglGetConfigAttrib(display, config, attribute, value) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      if (!value) {\r\n        EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n        return 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      switch (attribute) {\r\n      case 0x3020: // EGL_BUFFER_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 32 : 24;\r\n        return 1;\r\n      case 0x3021: // EGL_ALPHA_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 8 : 0;\r\n        return 1;\r\n      case 0x3022: // EGL_BLUE_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3023: // EGL_GREEN_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3024: // EGL_RED_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3025: // EGL_DEPTH_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.depth ? 24 : 0;\r\n        return 1;\r\n      case 0x3026: // EGL_STENCIL_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.stencil ? 8 : 0;\r\n        return 1;\r\n      case 0x3027: // EGL_CONFIG_CAVEAT\r\n        // We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3028: // EGL_CONFIG_ID\r\n        HEAP32[((value)>>2)] = 62002;\r\n        return 1;\r\n      case 0x3029: // EGL_LEVEL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302A: // EGL_MAX_PBUFFER_HEIGHT\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302B: // EGL_MAX_PBUFFER_PIXELS\r\n        HEAP32[((value)>>2)] = 16777216;\r\n        return 1;\r\n      case 0x302C: // EGL_MAX_PBUFFER_WIDTH\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302D: // EGL_NATIVE_RENDERABLE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302E: // EGL_NATIVE_VISUAL_ID\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302F: // EGL_NATIVE_VISUAL_TYPE\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3031: // EGL_SAMPLES\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 4 : 0;\r\n        return 1;\r\n      case 0x3032: // EGL_SAMPLE_BUFFERS\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 1 : 0;\r\n        return 1;\r\n      case 0x3033: // EGL_SURFACE_TYPE\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3034: // EGL_TRANSPARENT_TYPE\r\n        // If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3035: // EGL_TRANSPARENT_BLUE_VALUE\r\n      case 0x3036: // EGL_TRANSPARENT_GREEN_VALUE\r\n      case 0x3037: // EGL_TRANSPARENT_RED_VALUE\r\n        // \"If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined.\"\r\n        HEAP32[((value)>>2)] = -1;\r\n        return 1;\r\n      case 0x3039: // EGL_BIND_TO_TEXTURE_RGB\r\n      case 0x303A: // EGL_BIND_TO_TEXTURE_RGBA\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303B: // EGL_MIN_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303C: // EGL_MAX_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 1;\r\n        return 1;\r\n      case 0x303D: // EGL_LUMINANCE_SIZE\r\n      case 0x303E: // EGL_ALPHA_MASK_SIZE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303F: // EGL_COLOR_BUFFER_TYPE\r\n        // EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.\r\n        HEAP32[((value)>>2)] = 0x308E;\r\n        return 1;\r\n      case 0x3040: // EGL_RENDERABLE_TYPE\r\n        // A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3042: // EGL_CONFORMANT\r\n        // \"EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API.\"\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      default:\r\n        EGL.setErrorCode(0x3004 /* EGL_BAD_ATTRIBUTE */);\r\n        return 0;\r\n      }\r\n    }\r\n\r\n  function _eglGetDisplay(nativeDisplayType) {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      // Note: As a 'conformant' implementation of EGL, we would prefer to init here only if the user\r\n      //       calls this function with EGL_DEFAULT_DISPLAY. Other display IDs would be preferred to be unsupported\r\n      //       and EGL_NO_DISPLAY returned. Uncomment the following code lines to do this.\r\n      // Instead, an alternative route has been preferred, namely that the Emscripten EGL implementation\r\n      // \"emulates\" X11, and eglGetDisplay is expected to accept/receive a pointer to an X11 Display object.\r\n      // Therefore, be lax and allow anything to be passed in, and return the magic handle to our default EGLDisplay object.\r\n  \r\n  //    if (nativeDisplayType == 0 /* EGL_DEFAULT_DISPLAY */) {\r\n          return 62000; // Magic ID for Emscripten 'default display'\r\n  //    }\r\n  //    else\r\n  //      return 0; // EGL_NO_DISPLAY\r\n    }\r\n\r\n  function _eglGetError() {\r\n      return EGL.errorCode;\r\n    }\r\n\r\n  function _eglInitialize(display, majorVersion, minorVersion) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (majorVersion) {\r\n        HEAP32[((majorVersion)>>2)] = 1; // Advertise EGL Major version: '1'\r\n      }\r\n      if (minorVersion) {\r\n        HEAP32[((minorVersion)>>2)] = 4; // Advertise EGL Minor version: '4'\r\n      }\r\n      EGL.defaultDisplayInitialized = true;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  \r\n  function _eglMakeCurrent(display, draw, read, context) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0 /* EGL_FALSE */;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      if (context != 0 && context != 62004 /* Magic ID for Emscripten EGLContext */) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n      if ((read != 0 && read != 62006) || (draw != 0 && draw != 62006 /* Magic ID for Emscripten 'default surface' */)) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.makeContextCurrent(context ? EGL.context : null);\r\n  \r\n      EGL.currentContext = context;\r\n      EGL.currentDrawSurface = draw;\r\n      EGL.currentReadSurface = read;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1 /* EGL_TRUE */;\r\n    }\r\n\r\n  \r\n  function _eglQueryString(display, name) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.stringCache[name]) return EGL.stringCache[name];\r\n      var ret;\r\n      switch (name) {\r\n        case 0x3053 /* EGL_VENDOR */: ret = stringToNewUTF8(\"Emscripten\"); break;\r\n        case 0x3054 /* EGL_VERSION */: ret = stringToNewUTF8(\"1.4 Emscripten EGL\"); break;\r\n        case 0x3055 /* EGL_EXTENSIONS */:  ret = stringToNewUTF8(\"\"); break; // Currently not supporting any EGL extensions.\r\n        case 0x308D /* EGL_CLIENT_APIS */: ret = stringToNewUTF8(\"OpenGL_ES\"); break;\r\n        default:\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n      }\r\n      EGL.stringCache[name] = ret;\r\n      return ret;\r\n    }\r\n\r\n  function _eglSwapBuffers() {\r\n  \r\n      if (!EGL.defaultDisplayInitialized) {\r\n        EGL.setErrorCode(0x3001 /* EGL_NOT_INITIALIZED */);\r\n      } else if (!Module.ctx) {\r\n        EGL.setErrorCode(0x3002 /* EGL_BAD_ACCESS */);\r\n      } else if (Module.ctx.isContextLost()) {\r\n        EGL.setErrorCode(0x300E /* EGL_CONTEXT_LOST */);\r\n      } else {\r\n        // According to documentation this does an implicit flush.\r\n        // Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871\r\n        // the flush was removed since this _may_ result in slowing code down.\r\n        //_glFlush();\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1 /* EGL_TRUE */;\r\n      }\r\n      return 0 /* EGL_FALSE */;\r\n    }\r\n\r\n  \r\n  function _eglSwapInterval(display, interval) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (interval == 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 0);\r\n      else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, interval);\r\n  \r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  function _eglTerminate(display) {\r\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      EGL.currentContext = 0;\r\n      EGL.currentReadSurface = 0;\r\n      EGL.currentDrawSurface = 0;\r\n      EGL.defaultDisplayInitialized = false;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _eglWaitClient() {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n  var _eglWaitGL = _eglWaitClient;\r\n\r\n  function _eglWaitNative(nativeEngineId) {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    }\r\n\r\n  var readEmAsmArgsArray = [];\r\n  function readEmAsmArgs(sigPtr, buf) {\r\n      readEmAsmArgsArray.length = 0;\r\n      var ch;\r\n      // Most arguments are i32s, so shift the buffer pointer so it is a plain\r\n      // index into HEAP32.\r\n      buf >>= 2;\r\n      while (ch = HEAPU8[sigPtr++]) {\r\n        // Floats are always passed as doubles, and doubles and int64s take up 8\r\n        // bytes (two 32-bit slots) in memory, align reads to these:\r\n        buf += (ch != 105/*i*/) & buf;\r\n        readEmAsmArgsArray.push(\r\n          ch == 105/*i*/ ? HEAP32[buf] :\r\n         HEAPF64[buf++ >> 1]\r\n        );\r\n        ++buf;\r\n      }\r\n      return readEmAsmArgsArray;\r\n    }\r\n  function runEmAsmFunction(code, sigPtr, argbuf) {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    }\r\n  function _emscripten_asm_const_int(code, sigPtr, argbuf) {\r\n      return runEmAsmFunction(code, sigPtr, argbuf);\r\n    }\r\n\r\n  function runMainThreadEmAsm(code, sigPtr, argbuf, sync) {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    }\r\n  function _emscripten_asm_const_int_sync_on_main_thread(code, sigPtr, argbuf) {\r\n      return runMainThreadEmAsm(code, sigPtr, argbuf, 1);\r\n    }\r\n\r\n  function _emscripten_date_now() {\r\n      return Date.now();\r\n    }\r\n\r\n  function withStackSave(f) {\r\n      var stack = stackSave();\r\n      var ret = f();\r\n      stackRestore(stack);\r\n      return ret;\r\n    }\r\n  var JSEvents = {inEventHandler:0,removeAllEventListeners:function() {\r\n        for (var i = JSEvents.eventHandlers.length-1; i >= 0; --i) {\r\n          JSEvents._removeHandler(i);\r\n        }\r\n        JSEvents.eventHandlers = [];\r\n        JSEvents.deferredCalls = [];\r\n      },registerRemoveEventListeners:function() {\r\n        if (!JSEvents.removeEventListenersRegistered) {\r\n          __ATEXIT__.push(JSEvents.removeAllEventListeners);\r\n          JSEvents.removeEventListenersRegistered = true;\r\n        }\r\n      },deferredCalls:[],deferCall:function(targetFunction, precedence, argsList) {\r\n        function arraysHaveEqualContent(arrA, arrB) {\r\n          if (arrA.length != arrB.length) return false;\r\n  \r\n          for (var i in arrA) {\r\n            if (arrA[i] != arrB[i]) return false;\r\n          }\r\n          return true;\r\n        }\r\n        // Test if the given call was already queued, and if so, don't add it again.\r\n        for (var i in JSEvents.deferredCalls) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\r\n            return;\r\n          }\r\n        }\r\n        JSEvents.deferredCalls.push({\r\n          targetFunction: targetFunction,\r\n          precedence: precedence,\r\n          argsList: argsList\r\n        });\r\n  \r\n        JSEvents.deferredCalls.sort(function(x,y) { return x.precedence < y.precedence; });\r\n      },removeDeferredCalls:function(targetFunction) {\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\r\n            JSEvents.deferredCalls.splice(i, 1);\r\n            --i;\r\n          }\r\n        }\r\n      },canPerformEventHandlerRequests:function() {\r\n        return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\r\n      },runDeferredCalls:function() {\r\n        if (!JSEvents.canPerformEventHandlerRequests()) {\r\n          return;\r\n        }\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          JSEvents.deferredCalls.splice(i, 1);\r\n          --i;\r\n          call.targetFunction.apply(null, call.argsList);\r\n        }\r\n      },eventHandlers:[],removeAllHandlersOnTarget:function(target, eventTypeString) {\r\n        for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n          if (JSEvents.eventHandlers[i].target == target && \r\n            (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\r\n             JSEvents._removeHandler(i--);\r\n           }\r\n        }\r\n      },_removeHandler:function(i) {\r\n        var h = JSEvents.eventHandlers[i];\r\n        h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\r\n        JSEvents.eventHandlers.splice(i, 1);\r\n      },registerOrRemoveHandler:function(eventHandler) {\r\n        var jsEventHandler = function jsEventHandler(event) {\r\n          // Increment nesting count for the event handler.\r\n          ++JSEvents.inEventHandler;\r\n          JSEvents.currentEventHandler = eventHandler;\r\n          // Process any old deferred calls the user has placed.\r\n          JSEvents.runDeferredCalls();\r\n          // Process the actual event, calls back to user C code handler.\r\n          eventHandler.handlerFunc(event);\r\n          // Process any new deferred calls that were placed right now from this event handler.\r\n          JSEvents.runDeferredCalls();\r\n          // Out of event handler - restore nesting count.\r\n          --JSEvents.inEventHandler;\r\n        };\r\n        \r\n        if (eventHandler.callbackfunc) {\r\n          eventHandler.eventListenerFunc = jsEventHandler;\r\n          eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\r\n          JSEvents.eventHandlers.push(eventHandler);\r\n          JSEvents.registerRemoveEventListeners();\r\n        } else {\r\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n            if (JSEvents.eventHandlers[i].target == eventHandler.target\r\n             && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\r\n               JSEvents._removeHandler(i--);\r\n             }\r\n          }\r\n        }\r\n      },getNodeNameForTarget:function(target) {\r\n        if (!target) return '';\r\n        if (target == window) return '#window';\r\n        if (target == screen) return '#screen';\r\n        return (target && target.nodeName) ? target.nodeName : '';\r\n      },fullscreenEnabled:function() {\r\n        return document.fullscreenEnabled\r\n        // Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.\r\n        // TODO: If Safari at some point ships with unprefixed version, update the version check above.\r\n        || document.webkitFullscreenEnabled\r\n         ;\r\n      }};\r\n  \r\n  function setLetterbox(element, topBottom, leftRight) {\r\n        // Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.\r\n        element.style.paddingLeft = element.style.paddingRight = leftRight + 'px';\r\n        element.style.paddingTop = element.style.paddingBottom = topBottom + 'px';\r\n    }\r\n  \r\n  function hideEverythingExceptGivenElement(onlyVisibleElement) {\r\n      var child = onlyVisibleElement;\r\n      var parent = child.parentNode;\r\n      var hiddenElements = [];\r\n      while (child != document.body) {\r\n        var children = parent.children;\r\n        for (var i = 0; i < children.length; ++i) {\r\n          if (children[i] != child) {\r\n            hiddenElements.push({ node: children[i], displayState: children[i].style.display });\r\n            children[i].style.display = 'none';\r\n          }\r\n        }\r\n        child = parent;\r\n        parent = parent.parentNode;\r\n      }\r\n      return hiddenElements;\r\n    }\r\n  \r\n  var restoreOldWindowedStyle = null;\r\n  \r\n  \r\n  \r\n  function maybeCStringToJsString(cString) {\r\n      // \"cString > 2\" checks if the input is a number, and isn't of the special\r\n      // values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).\r\n      // In other words, if cString > 2 then it's a pointer to a valid place in\r\n      // memory, and points to a C string.\r\n      return cString > 2 ? UTF8ToString(cString) : cString;\r\n    }\r\n  \r\n  var specialHTMLTargets = [0, document, window];\r\n  function findEventTarget(target) {\r\n      target = maybeCStringToJsString(target);\r\n      var domElement = specialHTMLTargets[target] || document.querySelector(target);\r\n      return domElement;\r\n    }\r\n  function findCanvasEventTarget(target) { return findEventTarget(target); }\r\n  function _emscripten_get_canvas_element_size(target, width, height) {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      HEAP32[((width)>>2)] = canvas.width;\r\n      HEAP32[((height)>>2)] = canvas.height;\r\n    }\r\n  \r\n  \r\n  \r\n  function stringToUTF8OnStack(str) {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = stackAlloc(size);\r\n      stringToUTF8(str, ret, size);\r\n      return ret;\r\n    }\r\n  function getCanvasElementSize(target) {\r\n      return withStackSave(function() {\r\n        var w = stackAlloc(8);\r\n        var h = w + 4;\r\n  \r\n        var targetInt = stringToUTF8OnStack(target.id);\r\n        var ret = _emscripten_get_canvas_element_size(targetInt, w, h);\r\n        var size = [HEAP32[((w)>>2)], HEAP32[((h)>>2)]];\r\n        return size;\r\n      });\r\n    }\r\n  \r\n  \r\n  function _emscripten_set_canvas_element_size(target, width, height) {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      return 0;\r\n    }\r\n  \r\n  \r\n  function setCanvasElementSize(target, width, height) {\r\n      if (!target.controlTransferredOffscreen) {\r\n        target.width = width;\r\n        target.height = height;\r\n      } else {\r\n        // This function is being called from high-level JavaScript code instead of asm.js/Wasm,\r\n        // and it needs to synchronously proxy over to another thread, so marshal the string onto the heap to do the call.\r\n        withStackSave(function() {\r\n          var targetInt = stringToUTF8OnStack(target.id);\r\n          _emscripten_set_canvas_element_size(targetInt, width, height);\r\n        });\r\n      }\r\n    }\r\n  function registerRestoreOldStyle(canvas) {\r\n      var canvasSize = getCanvasElementSize(canvas);\r\n      var oldWidth = canvasSize[0];\r\n      var oldHeight = canvasSize[1];\r\n      var oldCssWidth = canvas.style.width;\r\n      var oldCssHeight = canvas.style.height;\r\n      var oldBackgroundColor = canvas.style.backgroundColor; // Chrome reads color from here.\r\n      var oldDocumentBackgroundColor = document.body.style.backgroundColor; // IE11 reads color from here.\r\n      // Firefox always has black background color.\r\n      var oldPaddingLeft = canvas.style.paddingLeft; // Chrome, FF, Safari\r\n      var oldPaddingRight = canvas.style.paddingRight;\r\n      var oldPaddingTop = canvas.style.paddingTop;\r\n      var oldPaddingBottom = canvas.style.paddingBottom;\r\n      var oldMarginLeft = canvas.style.marginLeft; // IE11\r\n      var oldMarginRight = canvas.style.marginRight;\r\n      var oldMarginTop = canvas.style.marginTop;\r\n      var oldMarginBottom = canvas.style.marginBottom;\r\n      var oldDocumentBodyMargin = document.body.style.margin;\r\n      var oldDocumentOverflow = document.documentElement.style.overflow; // Chrome, Firefox\r\n      var oldDocumentScroll = document.body.scroll; // IE\r\n      var oldImageRendering = canvas.style.imageRendering;\r\n  \r\n      function restoreOldStyle() {\r\n        var fullscreenElement = document.fullscreenElement\r\n          || document.webkitFullscreenElement\r\n          ;\r\n        if (!fullscreenElement) {\r\n          document.removeEventListener('fullscreenchange', restoreOldStyle);\r\n  \r\n          // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n          // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n          document.removeEventListener('webkitfullscreenchange', restoreOldStyle);\r\n  \r\n          setCanvasElementSize(canvas, oldWidth, oldHeight);\r\n  \r\n          canvas.style.width = oldCssWidth;\r\n          canvas.style.height = oldCssHeight;\r\n          canvas.style.backgroundColor = oldBackgroundColor; // Chrome\r\n          // IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color\r\n          // before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user\r\n          // had explicitly set so subsequent fullscreen transitions would not set background color properly.\r\n          if (!oldDocumentBackgroundColor) document.body.style.backgroundColor = 'white';\r\n          document.body.style.backgroundColor = oldDocumentBackgroundColor; // IE11\r\n          canvas.style.paddingLeft = oldPaddingLeft; // Chrome, FF, Safari\r\n          canvas.style.paddingRight = oldPaddingRight;\r\n          canvas.style.paddingTop = oldPaddingTop;\r\n          canvas.style.paddingBottom = oldPaddingBottom;\r\n          canvas.style.marginLeft = oldMarginLeft; // IE11\r\n          canvas.style.marginRight = oldMarginRight;\r\n          canvas.style.marginTop = oldMarginTop;\r\n          canvas.style.marginBottom = oldMarginBottom;\r\n          document.body.style.margin = oldDocumentBodyMargin;\r\n          document.documentElement.style.overflow = oldDocumentOverflow; // Chrome, Firefox\r\n          document.body.scroll = oldDocumentScroll; // IE\r\n          canvas.style.imageRendering = oldImageRendering;\r\n          if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, oldWidth, oldHeight);\r\n  \r\n          if (currentFullscreenStrategy.canvasResizedCallback) {\r\n            ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\r\n          }\r\n        }\r\n      }\r\n      document.addEventListener('fullscreenchange', restoreOldStyle);\r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      document.addEventListener('webkitfullscreenchange', restoreOldStyle);\r\n      return restoreOldStyle;\r\n    }\r\n  \r\n  function restoreHiddenElements(hiddenElements) {\r\n      for (var i = 0; i < hiddenElements.length; ++i) {\r\n        hiddenElements[i].node.style.display = hiddenElements[i].displayState;\r\n      }\r\n    }\r\n  \r\n  var currentFullscreenStrategy = {};\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  /** @suppress {checkTypes} */\r\n  function jstoi_q(str) {\r\n      return parseInt(str);\r\n    }\r\n  function softFullscreenResizeWebGLRenderTarget() {\r\n      var dpr = devicePixelRatio;\r\n      var inHiDPIFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode == 2;\r\n      var inAspectRatioFixedFullscreenMode = currentFullscreenStrategy.scaleMode == 2;\r\n      var inPixelPerfectFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode != 0;\r\n      var inCenteredWithoutScalingFullscreenMode = currentFullscreenStrategy.scaleMode == 3;\r\n      var screenWidth = inHiDPIFullscreenMode ? Math.round(innerWidth*dpr) : innerWidth;\r\n      var screenHeight = inHiDPIFullscreenMode ? Math.round(innerHeight*dpr) : innerHeight;\r\n      var w = screenWidth;\r\n      var h = screenHeight;\r\n      var canvas = currentFullscreenStrategy.target;\r\n      var canvasSize = getCanvasElementSize(canvas);\r\n      var x = canvasSize[0];\r\n      var y = canvasSize[1];\r\n      var topMargin;\r\n  \r\n      if (inAspectRatioFixedFullscreenMode) {\r\n        if (w*y < x*h) h = (w * y / x) | 0;\r\n        else if (w*y > x*h) w = (h * x / y) | 0;\r\n        topMargin = ((screenHeight - h) / 2) | 0;\r\n      }\r\n  \r\n      if (inPixelPerfectFullscreenMode) {\r\n        setCanvasElementSize(canvas, w, h);\r\n        if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, w, h);\r\n      }\r\n  \r\n      // Back to CSS pixels.\r\n      if (inHiDPIFullscreenMode) {\r\n        topMargin /= dpr;\r\n        w /= dpr;\r\n        h /= dpr;\r\n        // Round to nearest 4 digits of precision.\r\n        w = Math.round(w*1e4)/1e4;\r\n        h = Math.round(h*1e4)/1e4;\r\n        topMargin = Math.round(topMargin*1e4)/1e4;\r\n      }\r\n  \r\n      if (inCenteredWithoutScalingFullscreenMode) {\r\n        var t = (innerHeight - jstoi_q(canvas.style.height)) / 2;\r\n        var b = (innerWidth - jstoi_q(canvas.style.width)) / 2;\r\n        setLetterbox(canvas, t, b);\r\n      } else {\r\n        canvas.style.width = w + 'px';\r\n        canvas.style.height = h + 'px';\r\n        var b = (innerWidth - w) / 2;\r\n        setLetterbox(canvas, topMargin, b);\r\n      }\r\n  \r\n      if (!inCenteredWithoutScalingFullscreenMode && currentFullscreenStrategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\r\n      }\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  function getBoundingClientRect(e) {\r\n      return specialHTMLTargets.indexOf(e) < 0 ? e.getBoundingClientRect() : {'left':0,'top':0};\r\n    }\r\n  function JSEvents_resizeCanvasForFullscreen(target, strategy) {\r\n      var restoreOldStyle = registerRestoreOldStyle(target);\r\n      var cssWidth = strategy.softFullscreen ? innerWidth : screen.width;\r\n      var cssHeight = strategy.softFullscreen ? innerHeight : screen.height;\r\n      var rect = getBoundingClientRect(target);\r\n      var windowedCssWidth = rect.width;\r\n      var windowedCssHeight = rect.height;\r\n      var canvasSize = getCanvasElementSize(target);\r\n      var windowedRttWidth = canvasSize[0];\r\n      var windowedRttHeight = canvasSize[1];\r\n  \r\n      if (strategy.scaleMode == 3) {\r\n        setLetterbox(target, (cssHeight - windowedCssHeight) / 2, (cssWidth - windowedCssWidth) / 2);\r\n        cssWidth = windowedCssWidth;\r\n        cssHeight = windowedCssHeight;\r\n      } else if (strategy.scaleMode == 2) {\r\n        if (cssWidth*windowedRttHeight < windowedRttWidth*cssHeight) {\r\n          var desiredCssHeight = windowedRttHeight * cssWidth / windowedRttWidth;\r\n          setLetterbox(target, (cssHeight - desiredCssHeight) / 2, 0);\r\n          cssHeight = desiredCssHeight;\r\n        } else {\r\n          var desiredCssWidth = windowedRttWidth * cssHeight / windowedRttHeight;\r\n          setLetterbox(target, 0, (cssWidth - desiredCssWidth) / 2);\r\n          cssWidth = desiredCssWidth;\r\n        }\r\n      }\r\n  \r\n      // If we are adding padding, must choose a background color or otherwise Chrome will give the\r\n      // padding a default white color. Do it only if user has not customized their own background color.\r\n      if (!target.style.backgroundColor) target.style.backgroundColor = 'black';\r\n      // IE11 does the same, but requires the color to be set in the document body.\r\n      if (!document.body.style.backgroundColor) document.body.style.backgroundColor = 'black'; // IE11\r\n      // Firefox always shows black letterboxes independent of style color.\r\n  \r\n      target.style.width = cssWidth + 'px';\r\n      target.style.height = cssHeight + 'px';\r\n  \r\n      if (strategy.filteringMode == 1) {\r\n        target.style.imageRendering = 'optimizeSpeed';\r\n        target.style.imageRendering = '-moz-crisp-edges';\r\n        target.style.imageRendering = '-o-crisp-edges';\r\n        target.style.imageRendering = '-webkit-optimize-contrast';\r\n        target.style.imageRendering = 'optimize-contrast';\r\n        target.style.imageRendering = 'crisp-edges';\r\n        target.style.imageRendering = 'pixelated';\r\n      }\r\n  \r\n      var dpiScale = (strategy.canvasResolutionScaleMode == 2) ? devicePixelRatio : 1;\r\n      if (strategy.canvasResolutionScaleMode != 0) {\r\n        var newWidth = (cssWidth * dpiScale)|0;\r\n        var newHeight = (cssHeight * dpiScale)|0;\r\n        setCanvasElementSize(target, newWidth, newHeight);\r\n        if (target.GLctxObject) target.GLctxObject.GLctx.viewport(0, 0, newWidth, newHeight);\r\n      }\r\n      return restoreOldStyle;\r\n    }\r\n  \r\n  function _emscripten_enter_soft_fullscreen(target, fullscreenStrategy) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      var strategy = {\r\n          scaleMode: HEAP32[((fullscreenStrategy)>>2)],\r\n          canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\r\n          filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\r\n          canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\r\n          canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)],\r\n          target: target,\r\n          softFullscreen: true\r\n      };\r\n  \r\n      var restoreOldStyle = JSEvents_resizeCanvasForFullscreen(target, strategy);\r\n  \r\n      document.documentElement.style.overflow = 'hidden';  // Firefox, Chrome\r\n      document.body.scroll = \"no\"; // IE11\r\n      document.body.style.margin = '0px'; // Override default document margin area on all browsers.\r\n  \r\n      var hiddenElements = hideEverythingExceptGivenElement(target);\r\n  \r\n      function restoreWindowedState() {\r\n        restoreOldStyle();\r\n        restoreHiddenElements(hiddenElements);\r\n        removeEventListener('resize', softFullscreenResizeWebGLRenderTarget);\r\n        if (strategy.canvasResizedCallback) {\r\n          ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n        }\r\n        currentFullscreenStrategy = 0;\r\n      }\r\n      restoreOldWindowedStyle = restoreWindowedState;\r\n      currentFullscreenStrategy = strategy;\r\n      addEventListener('resize', softFullscreenResizeWebGLRenderTarget);\r\n  \r\n      // Inform the caller that the canvas size has changed.\r\n      if (strategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function JSEvents_requestFullscreen(target, strategy) {\r\n      // EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.\r\n      if (strategy.scaleMode != 0 || strategy.canvasResolutionScaleMode != 0) {\r\n        JSEvents_resizeCanvasForFullscreen(target, strategy);\r\n      }\r\n  \r\n      if (target.requestFullscreen) {\r\n        target.requestFullscreen();\r\n      } else if (target.webkitRequestFullscreen) {\r\n        target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n      } else {\r\n        return JSEvents.fullscreenEnabled() ? -3 : -1;\r\n      }\r\n  \r\n      currentFullscreenStrategy = strategy;\r\n  \r\n      if (strategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n  \r\n  function _emscripten_exit_fullscreen() {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(JSEvents_requestFullscreen);\r\n  \r\n      var d = specialHTMLTargets[1];\r\n      if (d.exitFullscreen) {\r\n        d.fullscreenElement && d.exitFullscreen();\r\n      } else if (d.webkitExitFullscreen) {\r\n        d.webkitFullscreenElement && d.webkitExitFullscreen();\r\n      } else {\r\n        return -1;\r\n      }\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  function requestPointerLock(target) {\r\n      if (target.requestPointerLock) {\r\n        target.requestPointerLock();\r\n      } else {\r\n        // document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,\r\n        // or if the whole browser just doesn't support the feature.\r\n        if (document.body.requestPointerLock\r\n          ) {\r\n          return -3;\r\n        }\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n  function _emscripten_exit_pointerlock() {\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(requestPointerLock);\r\n  \r\n      if (document.exitPointerLock) {\r\n        document.exitPointerLock();\r\n      } else {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_exit_soft_fullscreen() {\r\n      if (restoreOldWindowedStyle) restoreOldWindowedStyle();\r\n      restoreOldWindowedStyle = null;\r\n  \r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_get_device_pixel_ratio() {\r\n      return devicePixelRatio;\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_get_element_css_size(target, width, height) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAPF64[((width)>>3)] = rect.width;\r\n      HEAPF64[((height)>>3)] = rect.height;\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  function fillGamepadEventData(eventStruct, e) {\r\n      HEAPF64[((eventStruct)>>3)] = e.timestamp;\r\n      for (var i = 0; i < e.axes.length; ++i) {\r\n        HEAPF64[(((eventStruct+i*8)+(16))>>3)] = e.axes[i];\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i].value;\r\n        } else {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i];\r\n        }\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i].pressed;\r\n        } else {\r\n          // Assigning a boolean to HEAP32, that's ok, but Closure would like to warn about it:\r\n          /** @suppress {checkTypes} */\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i] == 1;\r\n        }\r\n      }\r\n      HEAP32[(((eventStruct)+(1296))>>2)] = e.connected;\r\n      HEAP32[(((eventStruct)+(1300))>>2)] = e.index;\r\n      HEAP32[(((eventStruct)+(8))>>2)] = e.axes.length;\r\n      HEAP32[(((eventStruct)+(12))>>2)] = e.buttons.length;\r\n      stringToUTF8(e.id, eventStruct + 1304, 64);\r\n      stringToUTF8(e.mapping, eventStruct + 1368, 64);\r\n    }\r\n  function _emscripten_get_gamepad_status(index, gamepadState) {\r\n  \r\n      // INVALID_PARAM is returned on a Gamepad index that never was there.\r\n      if (index < 0 || index >= JSEvents.lastGamepadState.length) return -5;\r\n  \r\n      // NO_DATA is returned on a Gamepad index that was removed.\r\n      // For previously disconnected gamepads there should be an empty slot (null/undefined/false) at the index.\r\n      // This is because gamepads must keep their original position in the array.\r\n      // For example, removing the first of two gamepads produces [null/undefined/false, gamepad].\r\n      if (!JSEvents.lastGamepadState[index]) return -7;\r\n  \r\n      fillGamepadEventData(gamepadState, JSEvents.lastGamepadState[index]);\r\n      return 0;\r\n    }\r\n\r\n\r\n  function _emscripten_get_num_gamepads() {\r\n      // N.B. Do not call emscripten_get_num_gamepads() unless having first called emscripten_sample_gamepad_data(), and that has returned EMSCRIPTEN_RESULT_SUCCESS.\r\n      // Otherwise the following line will throw an exception.\r\n      return JSEvents.lastGamepadState.length;\r\n    }\r\n\r\n  function _emscripten_get_screen_size(width, height) {\r\n      HEAP32[((width)>>2)] = screen.width;\r\n      HEAP32[((height)>>2)] = screen.height;\r\n    }\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }\r\n  var _emscripten_glActiveTexture = _glActiveTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glAttachShader(program, shader) {\r\n      GLctx.attachShader(GL.programs[program], GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glAttachShader = _glAttachShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginQuery(target, id) {\r\n      GLctx.beginQuery(target, GL.queries[id]);\r\n    }\r\n  var _emscripten_glBeginQuery = _glBeginQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginQueryEXT(target, id) {\r\n      GLctx.disjointTimerQueryExt['beginQueryEXT'](target, GL.queries[id]);\r\n    }\r\n  var _emscripten_glBeginQueryEXT = _glBeginQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginTransformFeedback(x0) { GLctx.beginTransformFeedback(x0) }\r\n  var _emscripten_glBeginTransformFeedback = _glBeginTransformFeedback;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glBindAttribLocation(program, index, name) {\r\n      GLctx.bindAttribLocation(GL.programs[program], index, UTF8ToString(name));\r\n    }\r\n  var _emscripten_glBindAttribLocation = _glBindAttribLocation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBuffer(target, buffer) {\r\n      if (target == 0x8892 /*GL_ARRAY_BUFFER*/) {\r\n        GLctx.currentArrayBufferBinding = buffer;\r\n      } else if (target == 0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/) {\r\n        GLctx.currentElementArrayBufferBinding = buffer;\r\n      }\r\n  \r\n      if (target == 0x88EB /*GL_PIXEL_PACK_BUFFER*/) {\r\n        // In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2 API function call when a buffer is bound to\r\n        // GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that binding point is non-null to know what is\r\n        // the proper API function to call.\r\n        GLctx.currentPixelPackBufferBinding = buffer;\r\n      } else if (target == 0x88EC /*GL_PIXEL_UNPACK_BUFFER*/) {\r\n        // In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to\r\n        // use a different WebGL 2 API function call when a buffer is bound to\r\n        // GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that\r\n        // binding point is non-null to know what is the proper API function to\r\n        // call.\r\n        GLctx.currentPixelUnpackBufferBinding = buffer;\r\n      }\r\n      GLctx.bindBuffer(target, GL.buffers[buffer]);\r\n    }\r\n  var _emscripten_glBindBuffer = _glBindBuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBufferBase(target, index, buffer) {\r\n      GLctx.bindBufferBase(target, index, GL.buffers[buffer]);\r\n    }\r\n  var _emscripten_glBindBufferBase = _glBindBufferBase;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindBufferRange(target, index, buffer, offset, ptrsize) {\r\n      GLctx.bindBufferRange(target, index, GL.buffers[buffer], offset, ptrsize);\r\n    }\r\n  var _emscripten_glBindBufferRange = _glBindBufferRange;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindFramebuffer(target, framebuffer) {\r\n  \r\n      GLctx.bindFramebuffer(target, GL.framebuffers[framebuffer]);\r\n  \r\n    }\r\n  var _emscripten_glBindFramebuffer = _glBindFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindRenderbuffer(target, renderbuffer) {\r\n      GLctx.bindRenderbuffer(target, GL.renderbuffers[renderbuffer]);\r\n    }\r\n  var _emscripten_glBindRenderbuffer = _glBindRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindSampler(unit, sampler) {\r\n      GLctx.bindSampler(unit, GL.samplers[sampler]);\r\n    }\r\n  var _emscripten_glBindSampler = _glBindSampler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindTexture(target, texture) {\r\n      GLctx.bindTexture(target, GL.textures[texture]);\r\n    }\r\n  var _emscripten_glBindTexture = _glBindTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindTransformFeedback(target, id) {\r\n      GLctx.bindTransformFeedback(target, GL.transformFeedbacks[id]);\r\n    }\r\n  var _emscripten_glBindTransformFeedback = _glBindTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBindVertexArray(vao) {\r\n      GLctx.bindVertexArray(GL.vaos[vao]);\r\n      var ibo = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n      GLctx.currentElementArrayBufferBinding = ibo ? (ibo.name | 0) : 0;\r\n    }\r\n  var _emscripten_glBindVertexArray = _glBindVertexArray;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glBindVertexArrayOES = _glBindVertexArray;\r\n  var _emscripten_glBindVertexArrayOES = _glBindVertexArrayOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendColor(x0, x1, x2, x3) { GLctx.blendColor(x0, x1, x2, x3) }\r\n  var _emscripten_glBlendColor = _glBlendColor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendEquation(x0) { GLctx.blendEquation(x0) }\r\n  var _emscripten_glBlendEquation = _glBlendEquation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendEquationSeparate(x0, x1) { GLctx.blendEquationSeparate(x0, x1) }\r\n  var _emscripten_glBlendEquationSeparate = _glBlendEquationSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendFunc(x0, x1) { GLctx.blendFunc(x0, x1) }\r\n  var _emscripten_glBlendFunc = _glBlendFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendFuncSeparate(x0, x1, x2, x3) { GLctx.blendFuncSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glBlendFuncSeparate = _glBlendFuncSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) { GLctx.blitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) }\r\n  var _emscripten_glBlitFramebuffer = _glBlitFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBufferData(target, size, data, usage) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        // If size is zero, WebGL would interpret uploading the whole input arraybuffer (starting from given offset), which would\r\n        // not make sense in WebAssembly, so avoid uploading if size is zero. However we must still call bufferData to establish a\r\n        // backing storage of zero bytes.\r\n        if (data && size) {\r\n          GLctx.bufferData(target, HEAPU8, usage, data, size);\r\n        } else {\r\n          GLctx.bufferData(target, size, usage);\r\n        }\r\n      } else {\r\n        // N.b. here first form specifies a heap subarray, second form an integer size, so the ?: code here is polymorphic. It is advised to avoid\r\n        // randomly mixing both uses in calling code, to avoid any potential JS engine JIT issues.\r\n        GLctx.bufferData(target, data ? HEAPU8.subarray(data, data+size) : size, usage);\r\n      }\r\n    }\r\n  var _emscripten_glBufferData = _glBufferData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBufferSubData(target, offset, size, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        size && GLctx.bufferSubData(target, offset, HEAPU8, data, size);\r\n        return;\r\n      }\r\n      GLctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));\r\n    }\r\n  var _emscripten_glBufferSubData = _glBufferSubData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCheckFramebufferStatus(x0) { return GLctx.checkFramebufferStatus(x0) }\r\n  var _emscripten_glCheckFramebufferStatus = _glCheckFramebufferStatus;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClear(x0) { GLctx.clear(x0) }\r\n  var _emscripten_glClear = _glClear;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferfi(x0, x1, x2, x3) { GLctx.clearBufferfi(x0, x1, x2, x3) }\r\n  var _emscripten_glClearBufferfi = _glClearBufferfi;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferfv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferfv(buffer, drawbuffer, HEAPF32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferfv = _glClearBufferfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferiv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferiv(buffer, drawbuffer, HEAP32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferiv = _glClearBufferiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferuiv(buffer, drawbuffer, value) {\r\n  \r\n      GLctx.clearBufferuiv(buffer, drawbuffer, HEAPU32, value>>2);\r\n    }\r\n  var _emscripten_glClearBufferuiv = _glClearBufferuiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }\r\n  var _emscripten_glClearColor = _glClearColor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearDepthf(x0) { GLctx.clearDepth(x0) }\r\n  var _emscripten_glClearDepthf = _glClearDepthf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearStencil(x0) { GLctx.clearStencil(x0) }\r\n  var _emscripten_glClearStencil = _glClearStencil;\r\n\r\n  function convertI32PairToI53(lo, hi) {\r\n      return (lo >>> 0) + hi * 4294967296;\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glClientWaitSync(sync, flags, timeout_low, timeout_high) {\r\n      // WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.\r\n      // In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.\r\n      // Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)\r\n      // See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      return GLctx.clientWaitSync(GL.syncs[sync], flags, timeout);\r\n    }\r\n  var _emscripten_glClientWaitSync = _glClientWaitSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glColorMask(red, green, blue, alpha) {\r\n      GLctx.colorMask(!!red, !!green, !!blue, !!alpha);\r\n    }\r\n  var _emscripten_glColorMask = _glColorMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompileShader(shader) {\r\n      GLctx.compileShader(GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glCompileShader = _glCompileShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data);\r\n        } else {\r\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    }\r\n  var _emscripten_glCompressedTexImage2D = _glCompressedTexImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data);\r\n      } else {\r\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, HEAPU8, data, imageSize);\r\n      }\r\n    }\r\n  var _emscripten_glCompressedTexImage3D = _glCompressedTexImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);\r\n        } else {\r\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    }\r\n  var _emscripten_glCompressedTexSubImage2D = _glCompressedTexSubImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\r\n      } else {\r\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, HEAPU8, data, imageSize);\r\n      }\r\n    }\r\n  var _emscripten_glCompressedTexSubImage3D = _glCompressedTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyBufferSubData(x0, x1, x2, x3, x4) { GLctx.copyBufferSubData(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glCopyBufferSubData = _glCopyBufferSubData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\r\n  var _emscripten_glCopyTexImage2D = _glCopyTexImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\r\n  var _emscripten_glCopyTexSubImage2D = _glCopyTexSubImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) { GLctx.copyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) }\r\n  var _emscripten_glCopyTexSubImage3D = _glCopyTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCreateProgram() {\r\n      var id = GL.getNewId(GL.programs);\r\n      var program = GLctx.createProgram();\r\n      // Store additional information needed for each shader program:\r\n      program.name = id;\r\n      // Lazy cache results of glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)\r\n      program.maxUniformLength = program.maxAttributeLength = program.maxUniformBlockNameLength = 0;\r\n      program.uniformIdCounter = 1;\r\n      GL.programs[id] = program;\r\n      return id;\r\n    }\r\n  var _emscripten_glCreateProgram = _glCreateProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCreateShader(shaderType) {\r\n      var id = GL.getNewId(GL.shaders);\r\n      GL.shaders[id] = GLctx.createShader(shaderType);\r\n  \r\n      return id;\r\n    }\r\n  var _emscripten_glCreateShader = _glCreateShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCullFace(x0) { GLctx.cullFace(x0) }\r\n  var _emscripten_glCullFace = _glCullFace;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteBuffers(n, buffers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((buffers)+(i*4))>>2)];\r\n        var buffer = GL.buffers[id];\r\n  \r\n        // From spec: \"glDeleteBuffers silently ignores 0's and names that do not\r\n        // correspond to existing buffer objects.\"\r\n        if (!buffer) continue;\r\n  \r\n        GLctx.deleteBuffer(buffer);\r\n        buffer.name = 0;\r\n        GL.buffers[id] = null;\r\n  \r\n        if (id == GLctx.currentArrayBufferBinding) GLctx.currentArrayBufferBinding = 0;\r\n        if (id == GLctx.currentElementArrayBufferBinding) GLctx.currentElementArrayBufferBinding = 0;\r\n        if (id == GLctx.currentPixelPackBufferBinding) GLctx.currentPixelPackBufferBinding = 0;\r\n        if (id == GLctx.currentPixelUnpackBufferBinding) GLctx.currentPixelUnpackBufferBinding = 0;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteBuffers = _glDeleteBuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteFramebuffers(n, framebuffers) {\r\n      for (var i = 0; i < n; ++i) {\r\n        var id = HEAP32[(((framebuffers)+(i*4))>>2)];\r\n        var framebuffer = GL.framebuffers[id];\r\n        if (!framebuffer) continue; // GL spec: \"glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects\".\r\n        GLctx.deleteFramebuffer(framebuffer);\r\n        framebuffer.name = 0;\r\n        GL.framebuffers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteFramebuffers = _glDeleteFramebuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteProgram(id) {\r\n      if (!id) return;\r\n      var program = GL.programs[id];\r\n      if (!program) { // glDeleteProgram actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteProgram(program);\r\n      program.name = 0;\r\n      GL.programs[id] = null;\r\n    }\r\n  var _emscripten_glDeleteProgram = _glDeleteProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteQueries(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.deleteQuery(query);\r\n        GL.queries[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteQueries = _glDeleteQueries;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteQueriesEXT(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);\r\n        GL.queries[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteQueriesEXT = _glDeleteQueriesEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteRenderbuffers(n, renderbuffers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];\r\n        var renderbuffer = GL.renderbuffers[id];\r\n        if (!renderbuffer) continue; // GL spec: \"glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects\".\r\n        GLctx.deleteRenderbuffer(renderbuffer);\r\n        renderbuffer.name = 0;\r\n        GL.renderbuffers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteRenderbuffers = _glDeleteRenderbuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteSamplers(n, samplers) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((samplers)+(i*4))>>2)];\r\n        var sampler = GL.samplers[id];\r\n        if (!sampler) continue;\r\n        GLctx.deleteSampler(sampler);\r\n        sampler.name = 0;\r\n        GL.samplers[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteSamplers = _glDeleteSamplers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteShader(id) {\r\n      if (!id) return;\r\n      var shader = GL.shaders[id];\r\n      if (!shader) { // glDeleteShader actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteShader(shader);\r\n      GL.shaders[id] = null;\r\n    }\r\n  var _emscripten_glDeleteShader = _glDeleteShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteSync(id) {\r\n      if (!id) return;\r\n      var sync = GL.syncs[id];\r\n      if (!sync) { // glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteSync(sync);\r\n      sync.name = 0;\r\n      GL.syncs[id] = null;\r\n    }\r\n  var _emscripten_glDeleteSync = _glDeleteSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteTextures(n, textures) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((textures)+(i*4))>>2)];\r\n        var texture = GL.textures[id];\r\n        if (!texture) continue; // GL spec: \"glDeleteTextures silently ignores 0s and names that do not correspond to existing textures\".\r\n        GLctx.deleteTexture(texture);\r\n        texture.name = 0;\r\n        GL.textures[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteTextures = _glDeleteTextures;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteTransformFeedbacks(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var transformFeedback = GL.transformFeedbacks[id];\r\n        if (!transformFeedback) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.deleteTransformFeedback(transformFeedback);\r\n        transformFeedback.name = 0;\r\n        GL.transformFeedbacks[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteTransformFeedbacks = _glDeleteTransformFeedbacks;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDeleteVertexArrays(n, vaos) {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((vaos)+(i*4))>>2)];\r\n        GLctx.deleteVertexArray(GL.vaos[id]);\r\n        GL.vaos[id] = null;\r\n      }\r\n    }\r\n  var _emscripten_glDeleteVertexArrays = _glDeleteVertexArrays;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDeleteVertexArraysOES = _glDeleteVertexArrays;\r\n  var _emscripten_glDeleteVertexArraysOES = _glDeleteVertexArraysOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthFunc(x0) { GLctx.depthFunc(x0) }\r\n  var _emscripten_glDepthFunc = _glDepthFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthMask(flag) {\r\n      GLctx.depthMask(!!flag);\r\n    }\r\n  var _emscripten_glDepthMask = _glDepthMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthRangef(x0, x1) { GLctx.depthRange(x0, x1) }\r\n  var _emscripten_glDepthRangef = _glDepthRangef;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDetachShader(program, shader) {\r\n      GLctx.detachShader(GL.programs[program], GL.shaders[shader]);\r\n    }\r\n  var _emscripten_glDetachShader = _glDetachShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDisable(x0) { GLctx.disable(x0) }\r\n  var _emscripten_glDisable = _glDisable;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDisableVertexAttribArray(index) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = false;\r\n      GLctx.disableVertexAttribArray(index);\r\n    }\r\n  var _emscripten_glDisableVertexAttribArray = _glDisableVertexAttribArray;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawArrays(mode, first, count) {\r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(first + count);\r\n  \r\n      GLctx.drawArrays(mode, first, count);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings();\r\n    }\r\n  var _emscripten_glDrawArrays = _glDrawArrays;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawArraysInstanced(mode, first, count, primcount) {\r\n      GLctx.drawArraysInstanced(mode, first, count, primcount);\r\n    }\r\n  var _emscripten_glDrawArraysInstanced = _glDrawArraysInstanced;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedANGLE = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedANGLE = _glDrawArraysInstancedANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedARB = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedARB = _glDrawArraysInstancedARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedEXT = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedEXT = _glDrawArraysInstancedEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedNV = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedNV = _glDrawArraysInstancedNV;\r\n\r\n  var tempFixedLengthArray = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glDrawBuffers(n, bufs) {\r\n  \r\n      var bufArray = tempFixedLengthArray[n];\r\n      for (var i = 0; i < n; i++) {\r\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.drawBuffers(bufArray);\r\n    }\r\n  var _emscripten_glDrawBuffers = _glDrawBuffers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawBuffersEXT = _glDrawBuffers;\r\n  var _emscripten_glDrawBuffersEXT = _glDrawBuffersEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawBuffersWEBGL = _glDrawBuffers;\r\n  var _emscripten_glDrawBuffersWEBGL = _glDrawBuffersWEBGL;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawElements(mode, count, type, indices) {\r\n      var buf;\r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        var size = GL.calcBufLength(1, type, 0, count);\r\n        buf = GL.getTempIndexBuffer(size);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, buf);\r\n        GLctx.bufferSubData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/,\r\n                                 0,\r\n                                 HEAPU8.subarray(indices, indices + size));\r\n        // the index is now 0\r\n        indices = 0;\r\n      }\r\n  \r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      GLctx.drawElements(mode, count, type, indices);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n      }\r\n    }\r\n  var _emscripten_glDrawElements = _glDrawElements;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawElementsInstanced(mode, count, type, indices, primcount) {\r\n      GLctx.drawElementsInstanced(mode, count, type, indices, primcount);\r\n    }\r\n  var _emscripten_glDrawElementsInstanced = _glDrawElementsInstanced;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedANGLE = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedANGLE = _glDrawElementsInstancedANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedARB = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedARB = _glDrawElementsInstancedARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedEXT = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedEXT = _glDrawElementsInstancedEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedNV = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedNV = _glDrawElementsInstancedNV;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDrawRangeElements(mode, start, end, count, type, indices) {\r\n      // TODO: This should be a trivial pass-though function registered at the bottom of this page as\r\n      // glFuncs[6][1] += ' drawRangeElements';\r\n      // but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,\r\n      // we work around by ignoring the range.\r\n      _glDrawElements(mode, count, type, indices);\r\n    }\r\n  var _emscripten_glDrawRangeElements = _glDrawRangeElements;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEnable(x0) { GLctx.enable(x0) }\r\n  var _emscripten_glEnable = _glEnable;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEnableVertexAttribArray(index) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = true;\r\n      GLctx.enableVertexAttribArray(index);\r\n    }\r\n  var _emscripten_glEnableVertexAttribArray = _glEnableVertexAttribArray;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndQuery(x0) { GLctx.endQuery(x0) }\r\n  var _emscripten_glEndQuery = _glEndQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndQueryEXT(target) {\r\n      GLctx.disjointTimerQueryExt['endQueryEXT'](target);\r\n    }\r\n  var _emscripten_glEndQueryEXT = _glEndQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndTransformFeedback() { GLctx.endTransformFeedback() }\r\n  var _emscripten_glEndTransformFeedback = _glEndTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFenceSync(condition, flags) {\r\n      var sync = GLctx.fenceSync(condition, flags);\r\n      if (sync) {\r\n        var id = GL.getNewId(GL.syncs);\r\n        sync.name = id;\r\n        GL.syncs[id] = sync;\r\n        return id;\r\n      }\r\n      return 0; // Failed to create a sync object\r\n    }\r\n  var _emscripten_glFenceSync = _glFenceSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFinish() { GLctx.finish() }\r\n  var _emscripten_glFinish = _glFinish;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFlush() { GLctx.flush() }\r\n  var _emscripten_glFlush = _glFlush;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer) {\r\n      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,\r\n                                         GL.renderbuffers[renderbuffer]);\r\n    }\r\n  var _emscripten_glFramebufferRenderbuffer = _glFramebufferRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferTexture2D(target, attachment, textarget, texture, level) {\r\n      GLctx.framebufferTexture2D(target, attachment, textarget,\r\n                                      GL.textures[texture], level);\r\n    }\r\n  var _emscripten_glFramebufferTexture2D = _glFramebufferTexture2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFramebufferTextureLayer(target, attachment, texture, level, layer) {\r\n      GLctx.framebufferTextureLayer(target, attachment, GL.textures[texture], level, layer);\r\n    }\r\n  var _emscripten_glFramebufferTextureLayer = _glFramebufferTextureLayer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFrontFace(x0) { GLctx.frontFace(x0) }\r\n  var _emscripten_glFrontFace = _glFrontFace;\r\n\r\n  function __glGenObject(n, buffers, createFunction, objectTable\r\n      ) {\r\n      for (var i = 0; i < n; i++) {\r\n        var buffer = GLctx[createFunction]();\r\n        var id = buffer && GL.getNewId(objectTable);\r\n        if (buffer) {\r\n          buffer.name = id;\r\n          objectTable[id] = buffer;\r\n        } else {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n        }\r\n        HEAP32[(((buffers)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenBuffers(n, buffers) {\r\n      __glGenObject(n, buffers, 'createBuffer', GL.buffers\r\n        );\r\n    }\r\n  var _emscripten_glGenBuffers = _glGenBuffers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenFramebuffers(n, ids) {\r\n      __glGenObject(n, ids, 'createFramebuffer', GL.framebuffers\r\n        );\r\n    }\r\n  var _emscripten_glGenFramebuffers = _glGenFramebuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenQueries(n, ids) {\r\n      __glGenObject(n, ids, 'createQuery', GL.queries\r\n        );\r\n    }\r\n  var _emscripten_glGenQueries = _glGenQueries;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenQueriesEXT(n, ids) {\r\n      for (var i = 0; i < n; i++) {\r\n        var query = GLctx.disjointTimerQueryExt['createQueryEXT']();\r\n        if (!query) {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n          while (i < n) HEAP32[(((ids)+(i++*4))>>2)] = 0;\r\n          return;\r\n        }\r\n        var id = GL.getNewId(GL.queries);\r\n        query.name = id;\r\n        GL.queries[id] = query;\r\n        HEAP32[(((ids)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  var _emscripten_glGenQueriesEXT = _glGenQueriesEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenRenderbuffers(n, renderbuffers) {\r\n      __glGenObject(n, renderbuffers, 'createRenderbuffer', GL.renderbuffers\r\n        );\r\n    }\r\n  var _emscripten_glGenRenderbuffers = _glGenRenderbuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenSamplers(n, samplers) {\r\n      __glGenObject(n, samplers, 'createSampler', GL.samplers\r\n        );\r\n    }\r\n  var _emscripten_glGenSamplers = _glGenSamplers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenTextures(n, textures) {\r\n      __glGenObject(n, textures, 'createTexture', GL.textures\r\n        );\r\n    }\r\n  var _emscripten_glGenTextures = _glGenTextures;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenTransformFeedbacks(n, ids) {\r\n      __glGenObject(n, ids, 'createTransformFeedback', GL.transformFeedbacks\r\n        );\r\n    }\r\n  var _emscripten_glGenTransformFeedbacks = _glGenTransformFeedbacks;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenVertexArrays(n, arrays) {\r\n      __glGenObject(n, arrays, 'createVertexArray', GL.vaos\r\n        );\r\n    }\r\n  var _emscripten_glGenVertexArrays = _glGenVertexArrays;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGenVertexArraysOES = _glGenVertexArrays;\r\n  var _emscripten_glGenVertexArraysOES = _glGenVertexArraysOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenerateMipmap(x0) { GLctx.generateMipmap(x0) }\r\n  var _emscripten_glGenerateMipmap = _glGenerateMipmap;\r\n\r\n  \r\n  function __glGetActiveAttribOrUniform(funcName, program, index, bufSize, length, size, type, name) {\r\n      program = GL.programs[program];\r\n      var info = GLctx[funcName](program, index);\r\n      if (info) { // If an error occurs, nothing will be written to length, size and type and name.\r\n        var numBytesWrittenExclNull = name && stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n        if (size) HEAP32[((size)>>2)] = info.size;\r\n        if (type) HEAP32[((type)>>2)] = info.type;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveAttrib(program, index, bufSize, length, size, type, name) {\r\n      __glGetActiveAttribOrUniform('getActiveAttrib', program, index, bufSize, length, size, type, name);\r\n    }\r\n  var _emscripten_glGetActiveAttrib = _glGetActiveAttrib;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniform(program, index, bufSize, length, size, type, name) {\r\n      __glGetActiveAttribOrUniform('getActiveUniform', program, index, bufSize, length, size, type, name);\r\n    }\r\n  var _emscripten_glGetActiveUniform = _glGetActiveUniform;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformBlockName(program, uniformBlockIndex, bufSize, length, uniformBlockName) {\r\n      program = GL.programs[program];\r\n  \r\n      var result = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\r\n      if (!result) return; // If an error occurs, nothing will be written to uniformBlockName or length.\r\n      if (uniformBlockName && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(result, uniformBlockName, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformBlockName = _glGetActiveUniformBlockName;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformBlockiv(program, uniformBlockIndex, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8A41 /* GL_UNIFORM_BLOCK_NAME_LENGTH */) {\r\n        var name = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\r\n        HEAP32[((params)>>2)] = name.length+1;\r\n        return;\r\n      }\r\n  \r\n      var result = GLctx.getActiveUniformBlockParameter(program, uniformBlockIndex, pname);\r\n      if (result === null) return; // If an error occurs, nothing should be written to params.\r\n      if (pname == 0x8A43 /*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/) {\r\n        for (var i = 0; i < result.length; i++) {\r\n          HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n        }\r\n      } else {\r\n        HEAP32[((params)>>2)] = result;\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformBlockiv = _glGetActiveUniformBlockiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetActiveUniformsiv(program, uniformCount, uniformIndices, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && uniformIndices == 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var ids = [];\r\n      for (var i = 0; i < uniformCount; i++) {\r\n        ids.push(HEAP32[(((uniformIndices)+(i*4))>>2)]);\r\n      }\r\n  \r\n      var result = GLctx.getActiveUniforms(program, ids, pname);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to params.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetActiveUniformsiv = _glGetActiveUniformsiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetAttachedShaders(program, maxCount, count, shaders) {\r\n      var result = GLctx.getAttachedShaders(GL.programs[program]);\r\n      var len = result.length;\r\n      if (len > maxCount) {\r\n        len = maxCount;\r\n      }\r\n      HEAP32[((count)>>2)] = len;\r\n      for (var i = 0; i < len; ++i) {\r\n        var id = GL.shaders.indexOf(result[i]);\r\n        HEAP32[(((shaders)+(i*4))>>2)] = id;\r\n      }\r\n    }\r\n  var _emscripten_glGetAttachedShaders = _glGetAttachedShaders;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetAttribLocation(program, name) {\r\n      return GLctx.getAttribLocation(GL.programs[program], UTF8ToString(name));\r\n    }\r\n  var _emscripten_glGetAttribLocation = _glGetAttribLocation;\r\n\r\n  function writeI53ToI64(ptr, num) {\r\n      HEAPU32[ptr>>2] = num;\r\n      HEAPU32[ptr+4>>2] = (num - HEAPU32[ptr>>2])/4294967296;\r\n    }\r\n  \r\n  function emscriptenWebGLGet(name_, p, type) {\r\n      // Guard against user passing a null pointer.\r\n      // Note that GLES2 spec does not say anything about how passing a null pointer should be treated.\r\n      // Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but\r\n      // better to report an error instead of doing anything random.\r\n      if (!p) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = undefined;\r\n      switch (name_) { // Handle a few trivial GLES values\r\n        case 0x8DFA: // GL_SHADER_COMPILER\r\n          ret = 1;\r\n          break;\r\n        case 0x8DF8: // GL_SHADER_BINARY_FORMATS\r\n          if (type != 0 && type != 1) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n          }\r\n          return; // Do not write anything to the out pointer, since no binary formats are supported.\r\n        case 0x87FE: // GL_NUM_PROGRAM_BINARY_FORMATS\r\n        case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS\r\n          ret = 0;\r\n          break;\r\n        case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS\r\n          // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),\r\n          // so implement it ourselves to allow C++ GLES2 code get the length.\r\n          var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);\r\n          ret = formats ? formats.length : 0;\r\n          break;\r\n  \r\n        case 0x821D: // GL_NUM_EXTENSIONS\r\n          if (GL.currentContext.version < 2) {\r\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n            return;\r\n          }\r\n          // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n          var exts = GLctx.getSupportedExtensions() || [];\r\n          ret = 2 * exts.length; // each extension is duplicated, first in unprefixed WebGL form, and then a second time with \"GL_\" prefix.\r\n          break;\r\n        case 0x821B: // GL_MAJOR_VERSION\r\n        case 0x821C: // GL_MINOR_VERSION\r\n          if (GL.currentContext.version < 2) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          ret = name_ == 0x821B ? 3 : 0; // return version 3.0\r\n          break;\r\n      }\r\n  \r\n      if (ret === undefined) {\r\n        var result = GLctx.getParameter(name_);\r\n        switch (typeof result) {\r\n          case \"number\":\r\n            ret = result;\r\n            break;\r\n          case \"boolean\":\r\n            ret = result ? 1 : 0;\r\n            break;\r\n          case \"string\":\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          case \"object\":\r\n            if (result === null) {\r\n              // null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise\r\n              // can mean an invalid name_, which we need to report as an error\r\n              switch (name_) {\r\n                case 0x8894: // ARRAY_BUFFER_BINDING\r\n                case 0x8B8D: // CURRENT_PROGRAM\r\n                case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING\r\n                case 0x8CA6: // FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING\r\n                case 0x8CA7: // RENDERBUFFER_BINDING\r\n                case 0x8069: // TEXTURE_BINDING_2D\r\n                case 0x85B5: // WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES\r\n                case 0x8F36: // COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER\r\n                case 0x8F37: // COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER\r\n                case 0x88ED: // PIXEL_PACK_BUFFER_BINDING\r\n                case 0x88EF: // PIXEL_UNPACK_BUFFER_BINDING\r\n                case 0x8CAA: // READ_FRAMEBUFFER_BINDING\r\n                case 0x8919: // SAMPLER_BINDING\r\n                case 0x8C1D: // TEXTURE_BINDING_2D_ARRAY\r\n                case 0x806A: // TEXTURE_BINDING_3D\r\n                case 0x8E25: // TRANSFORM_FEEDBACK_BINDING\r\n                case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n                case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                case 0x8514: { // TEXTURE_BINDING_CUBE_MAP\r\n                  ret = 0;\r\n                  break;\r\n                }\r\n                default: {\r\n                  GL.recordError(0x500); // GL_INVALID_ENUM\r\n                  return;\r\n                }\r\n              }\r\n            } else if (result instanceof Float32Array ||\r\n                       result instanceof Uint32Array ||\r\n                       result instanceof Int32Array ||\r\n                       result instanceof Array) {\r\n              for (var i = 0; i < result.length; ++i) {\r\n                switch (type) {\r\n                  case 0: HEAP32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 2: HEAPF32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 4: HEAP8[(((p)+(i))>>0)] = result[i] ? 1 : 0; break;\r\n                }\r\n              }\r\n              return;\r\n            } else {\r\n              try {\r\n                ret = result.name | 0;\r\n              } catch(e) {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                err('GL_INVALID_ENUM in glGet' + type + 'v: Unknown object returned from WebGL getParameter(' + name_ + ')! (error: ' + e + ')');\r\n                return;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            err('GL_INVALID_ENUM in glGet' + type + 'v: Native code calling glGet' + type + 'v(' + name_ + ') and it returns ' + result + ' of type ' + typeof(result) + '!');\r\n            return;\r\n        }\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(p, ret); break;\r\n        case 0: HEAP32[((p)>>2)] = ret; break;\r\n        case 2:   HEAPF32[((p)>>2)] = ret; break;\r\n        case 4: HEAP8[((p)>>0)] = ret ? 1 : 0; break;\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetBooleanv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 4);\r\n    }\r\n  var _emscripten_glGetBooleanv = _glGetBooleanv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetBufferParameteri64v(target, value, data) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      writeI53ToI64(data, GLctx.getBufferParameter(target, value));\r\n    }\r\n  var _emscripten_glGetBufferParameteri64v = _glGetBufferParameteri64v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetBufferParameteriv(target, value, data) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((data)>>2)] = GLctx.getBufferParameter(target, value);\r\n    }\r\n  var _emscripten_glGetBufferParameteriv = _glGetBufferParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetError() {\r\n      var error = GLctx.getError() || GL.lastError;\r\n      GL.lastError = 0/*GL_NO_ERROR*/;\r\n      return error;\r\n    }\r\n  var _emscripten_glGetError = _glGetError;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetFloatv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 2);\r\n    }\r\n  var _emscripten_glGetFloatv = _glGetFloatv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetFragDataLocation(program, name) {\r\n      return GLctx.getFragDataLocation(GL.programs[program], UTF8ToString(name));\r\n    }\r\n  var _emscripten_glGetFragDataLocation = _glGetFragDataLocation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetFramebufferAttachmentParameteriv(target, attachment, pname, params) {\r\n      var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);\r\n      if (result instanceof WebGLRenderbuffer ||\r\n          result instanceof WebGLTexture) {\r\n        result = result.name | 0;\r\n      }\r\n      HEAP32[((params)>>2)] = result;\r\n    }\r\n  var _emscripten_glGetFramebufferAttachmentParameteriv = _glGetFramebufferAttachmentParameteriv;\r\n\r\n  function emscriptenWebGLGetIndexed(target, index, data, type) {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var result = GLctx.getIndexedParameter(target, index);\r\n      var ret;\r\n      switch (typeof result) {\r\n        case 'boolean':\r\n          ret = result ? 1 : 0;\r\n          break;\r\n        case 'number':\r\n          ret = result;\r\n          break;\r\n        case 'object':\r\n          if (result === null) {\r\n            switch (target) {\r\n              case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n              case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                ret = 0;\r\n                break;\r\n              default: {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                return;\r\n              }\r\n            }\r\n          } else if (result instanceof WebGLBuffer) {\r\n            ret = result.name | 0;\r\n          } else {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          GL.recordError(0x500); // GL_INVALID_ENUM\r\n          return;\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(data, ret); break;\r\n        case 0: HEAP32[((data)>>2)] = ret; break;\r\n        case 2: HEAPF32[((data)>>2)] = ret; break;\r\n        case 4: HEAP8[((data)>>0)] = ret ? 1 : 0; break;\r\n        default: throw 'internal emscriptenWebGLGetIndexed() error, bad type: ' + type;\r\n      }\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glGetInteger64i_v(target, index, data) {\r\n      emscriptenWebGLGetIndexed(target, index, data, 1);\r\n    }\r\n  var _emscripten_glGetInteger64i_v = _glGetInteger64i_v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetInteger64v(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 1);\r\n    }\r\n  var _emscripten_glGetInteger64v = _glGetInteger64v;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetIntegeri_v(target, index, data) {\r\n      emscriptenWebGLGetIndexed(target, index, data, 0);\r\n    }\r\n  var _emscripten_glGetIntegeri_v = _glGetIntegeri_v;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetIntegerv(name_, p) {\r\n      emscriptenWebGLGet(name_, p, 0);\r\n    }\r\n  var _emscripten_glGetIntegerv = _glGetIntegerv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetInternalformativ(target, internalformat, pname, bufSize, params) {\r\n      if (bufSize < 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx.getInternalformatParameter(target, internalformat, pname);\r\n      if (ret === null) return;\r\n      for (var i = 0; i < ret.length && i < bufSize; ++i) {\r\n        HEAP32[(((params)+(i*4))>>2)] = ret[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetInternalformativ = _glGetInternalformativ;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramBinary(program, bufSize, length, binaryFormat, binary) {\r\n      GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n    }\r\n  var _emscripten_glGetProgramBinary = _glGetProgramBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramInfoLog(program, maxLength, length, infoLog) {\r\n      var log = GLctx.getProgramInfoLog(GL.programs[program]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetProgramInfoLog = _glGetProgramInfoLog;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetProgramiv(program, pname, p) {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      if (program >= GL.counter) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getProgramInfoLog(program);\r\n        if (log === null) log = '(unknown error)';\r\n        HEAP32[((p)>>2)] = log.length + 1;\r\n      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {\r\n        if (!program.maxUniformLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n            program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformLength;\r\n      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {\r\n        if (!program.maxAttributeLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B89/*GL_ACTIVE_ATTRIBUTES*/); ++i) {\r\n            program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxAttributeLength;\r\n      } else if (pname == 0x8A35 /* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */) {\r\n        if (!program.maxUniformBlockNameLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/); ++i) {\r\n            program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformBlockNameLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getProgramParameter(program, pname);\r\n      }\r\n    }\r\n  var _emscripten_glGetProgramiv = _glGetProgramiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjecti64vEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param;\r\n      if (GL.currentContext.version < 2)\r\n      {\r\n        param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      }\r\n      else {\r\n        param = GLctx.getQueryParameter(query, pname);\r\n      }\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      writeI53ToI64(params, ret);\r\n    }\r\n  var _emscripten_glGetQueryObjecti64vEXT = _glGetQueryObjecti64vEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjectivEXT(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    }\r\n  var _emscripten_glGetQueryObjectivEXT = _glGetQueryObjectivEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectui64vEXT = _glGetQueryObjecti64vEXT;\r\n  var _emscripten_glGetQueryObjectui64vEXT = _glGetQueryObjectui64vEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryObjectuiv(id, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.getQueryParameter(query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    }\r\n  var _emscripten_glGetQueryObjectuiv = _glGetQueryObjectuiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectuivEXT = _glGetQueryObjectivEXT;\r\n  var _emscripten_glGetQueryObjectuivEXT = _glGetQueryObjectuivEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryiv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getQuery(target, pname);\r\n    }\r\n  var _emscripten_glGetQueryiv = _glGetQueryiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetQueryivEXT(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.disjointTimerQueryExt['getQueryEXT'](target, pname);\r\n    }\r\n  var _emscripten_glGetQueryivEXT = _glGetQueryivEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetRenderbufferParameteriv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getRenderbufferParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetRenderbufferParameteriv = _glGetRenderbufferParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSamplerParameterfv(sampler, pname, params) {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\r\n    }\r\n  var _emscripten_glGetSamplerParameterfv = _glGetSamplerParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSamplerParameteriv(sampler, pname, params) {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\r\n    }\r\n  var _emscripten_glGetSamplerParameteriv = _glGetSamplerParameteriv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderInfoLog(shader, maxLength, length, infoLog) {\r\n      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetShaderInfoLog = _glGetShaderInfoLog;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderPrecisionFormat(shaderType, precisionType, range, precision) {\r\n      var result = GLctx.getShaderPrecisionFormat(shaderType, precisionType);\r\n      HEAP32[((range)>>2)] = result.rangeMin;\r\n      HEAP32[(((range)+(4))>>2)] = result.rangeMax;\r\n      HEAP32[((precision)>>2)] = result.precision;\r\n    }\r\n  var _emscripten_glGetShaderPrecisionFormat = _glGetShaderPrecisionFormat;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderSource(shader, bufSize, length, source) {\r\n      var result = GLctx.getShaderSource(GL.shaders[shader]);\r\n      if (!result) return; // If an error occurs, nothing will be written to length or source.\r\n      var numBytesWrittenExclNull = (bufSize > 0 && source) ? stringToUTF8(result, source, bufSize) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    }\r\n  var _emscripten_glGetShaderSource = _glGetShaderSource;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetShaderiv(shader, pname, p) {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n        if (log === null) log = '(unknown error)';\r\n        // The GLES2 specification says that if the shader has an empty info log,\r\n        // a value of 0 is returned. Otherwise the log has a null char appended.\r\n        // (An empty string is falsey, so we can just check that instead of\r\n        // looking at log.length.)\r\n        var logLength = log ? log.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = logLength;\r\n      } else if (pname == 0x8B88) { // GL_SHADER_SOURCE_LENGTH\r\n        var source = GLctx.getShaderSource(GL.shaders[shader]);\r\n        // source may be a null, or the empty string, both of which are falsey\r\n        // values that we report a 0 length for.\r\n        var sourceLength = source ? source.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = sourceLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getShaderParameter(GL.shaders[shader], pname);\r\n      }\r\n    }\r\n  var _emscripten_glGetShaderiv = _glGetShaderiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetString(name_) {\r\n      var ret = GL.stringCache[name_];\r\n      if (!ret) {\r\n        switch (name_) {\r\n          case 0x1F03 /* GL_EXTENSIONS */:\r\n            var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n            exts = exts.concat(exts.map(function(e) { return \"GL_\" + e; }));\r\n            ret = stringToNewUTF8(exts.join(' '));\r\n            break;\r\n          case 0x1F00 /* GL_VENDOR */:\r\n          case 0x1F01 /* GL_RENDERER */:\r\n          case 0x9245 /* UNMASKED_VENDOR_WEBGL */:\r\n          case 0x9246 /* UNMASKED_RENDERER_WEBGL */:\r\n            var s = GLctx.getParameter(name_);\r\n            if (!s) {\r\n              GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            }\r\n            ret = s && stringToNewUTF8(s);\r\n            break;\r\n  \r\n          case 0x1F02 /* GL_VERSION */:\r\n            var glVersion = GLctx.getParameter(0x1F02 /*GL_VERSION*/);\r\n            // return GLES version string corresponding to the version of the WebGL context\r\n            if (GL.currentContext.version >= 2) glVersion = 'OpenGL ES 3.0 (' + glVersion + ')';\r\n            else\r\n            {\r\n              glVersion = 'OpenGL ES 2.0 (' + glVersion + ')';\r\n            }\r\n            ret = stringToNewUTF8(glVersion);\r\n            break;\r\n          case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:\r\n            var glslVersion = GLctx.getParameter(0x8B8C /*GL_SHADING_LANGUAGE_VERSION*/);\r\n            // extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'\r\n            var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\r\n            var ver_num = glslVersion.match(ver_re);\r\n            if (ver_num !== null) {\r\n              if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + '0'; // ensure minor version has 2 digits\r\n              glslVersion = 'OpenGL ES GLSL ES ' + ver_num[1] + ' (' + glslVersion + ')';\r\n            }\r\n            ret = stringToNewUTF8(glslVersion);\r\n            break;\r\n          default:\r\n            GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            // fall through\r\n        }\r\n        GL.stringCache[name_] = ret;\r\n      }\r\n      return ret;\r\n    }\r\n  var _emscripten_glGetString = _glGetString;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetStringi(name, index) {\r\n      if (GL.currentContext.version < 2) {\r\n        GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n        return 0;\r\n      }\r\n      var stringiCache = GL.stringiCache[name];\r\n      if (stringiCache) {\r\n        if (index < 0 || index >= stringiCache.length) {\r\n          GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n          return 0;\r\n        }\r\n        return stringiCache[index];\r\n      }\r\n      switch (name) {\r\n        case 0x1F03 /* GL_EXTENSIONS */:\r\n          var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n          exts = exts.concat(exts.map(function(e) { return \"GL_\" + e; }));\r\n          exts = exts.map(function(e) { return stringToNewUTF8(e); });\r\n  \r\n          stringiCache = GL.stringiCache[name] = exts;\r\n          if (index < 0 || index >= stringiCache.length) {\r\n            GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n            return 0;\r\n          }\r\n          return stringiCache[index];\r\n        default:\r\n          GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n          return 0;\r\n      }\r\n    }\r\n  var _emscripten_glGetStringi = _glGetStringi;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetSynciv(sync, pname, bufSize, length, values) {\r\n      if (bufSize < 0) {\r\n        // GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,\r\n        // so raise GL_INVALID_VALUE here as well.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!values) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx.getSyncParameter(GL.syncs[sync], pname);\r\n      if (ret !== null) {\r\n        HEAP32[((values)>>2)] = ret;\r\n        if (length) HEAP32[((length)>>2)] = 1; // Report a single value outputted.\r\n      }\r\n    }\r\n  var _emscripten_glGetSynciv = _glGetSynciv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTexParameterfv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetTexParameterfv = _glGetTexParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTexParameteriv(target, pname, params) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    }\r\n  var _emscripten_glGetTexParameteriv = _glGetTexParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetTransformFeedbackVarying(program, index, bufSize, length, size, type, name) {\r\n      program = GL.programs[program];\r\n      var info = GLctx.getTransformFeedbackVarying(program, index);\r\n      if (!info) return; // If an error occurred, the return parameters length, size, type and name will be unmodified.\r\n  \r\n      if (name && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n  \r\n      if (size) HEAP32[((size)>>2)] = info.size;\r\n      if (type) HEAP32[((type)>>2)] = info.type;\r\n    }\r\n  var _emscripten_glGetTransformFeedbackVarying = _glGetTransformFeedbackVarying;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformBlockIndex(program, uniformBlockName) {\r\n      return GLctx.getUniformBlockIndex(GL.programs[program], UTF8ToString(uniformBlockName));\r\n    }\r\n  var _emscripten_glGetUniformBlockIndex = _glGetUniformBlockIndex;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformIndices(program, uniformCount, uniformNames, uniformIndices) {\r\n      if (!uniformIndices) {\r\n        // GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense\r\n        // if uniformIndices == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && (uniformNames == 0 || uniformIndices == 0)) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var names = [];\r\n      for (var i = 0; i < uniformCount; i++)\r\n        names.push(UTF8ToString(HEAP32[(((uniformNames)+(i*4))>>2)]));\r\n  \r\n      var result = GLctx.getUniformIndices(program, names);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to uniformIndices.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((uniformIndices)+(i*4))>>2)] = result[i];\r\n      }\r\n    }\r\n  var _emscripten_glGetUniformIndices = _glGetUniformIndices;\r\n\r\n  \r\n  /** @noinline */\r\n  function webglGetLeftBracePos(name) {\r\n      return name.slice(-1) == ']' && name.lastIndexOf('[');\r\n    }\r\n  \r\n  function webglPrepareUniformLocationsBeforeFirstUse(program) {\r\n      var uniformLocsById = program.uniformLocsById, // Maps GLuint -> WebGLUniformLocation\r\n        uniformSizeAndIdsByName = program.uniformSizeAndIdsByName, // Maps name -> [uniform array length, GLuint]\r\n        i, j;\r\n  \r\n      // On the first time invocation of glGetUniformLocation on this shader program:\r\n      // initialize cache data structures and discover which uniforms are arrays.\r\n      if (!uniformLocsById) {\r\n        // maps GLint integer locations to WebGLUniformLocations\r\n        program.uniformLocsById = uniformLocsById = {};\r\n        // maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations\r\n        program.uniformArrayNamesById = {};\r\n  \r\n        for (i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n          var u = GLctx.getActiveUniform(program, i);\r\n          var nm = u.name;\r\n          var sz = u.size;\r\n          var lb = webglGetLeftBracePos(nm);\r\n          var arrayName = lb > 0 ? nm.slice(0, lb) : nm;\r\n  \r\n          // Assign a new location.\r\n          var id = program.uniformIdCounter;\r\n          program.uniformIdCounter += sz;\r\n          // Eagerly get the location of the uniformArray[0] base element.\r\n          // The remaining indices >0 will be left for lazy evaluation to\r\n          // improve performance. Those may never be needed to fetch, if the\r\n          // application fills arrays always in full starting from the first\r\n          // element of the array.\r\n          uniformSizeAndIdsByName[arrayName] = [sz, id];\r\n  \r\n          // Store placeholder integers in place that highlight that these\r\n          // >0 index locations are array indices pending population.\r\n          for(j = 0; j < sz; ++j) {\r\n            uniformLocsById[id] = j;\r\n            program.uniformArrayNamesById[id++] = arrayName;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformLocation(program, name) {\r\n  \r\n      name = UTF8ToString(name);\r\n  \r\n      if (program = GL.programs[program]) {\r\n        webglPrepareUniformLocationsBeforeFirstUse(program);\r\n        var uniformLocsById = program.uniformLocsById; // Maps GLuint -> WebGLUniformLocation\r\n        var arrayIndex = 0;\r\n        var uniformBaseName = name;\r\n  \r\n        // Invariant: when populating integer IDs for uniform locations, we must maintain the precondition that\r\n        // arrays reside in contiguous addresses, i.e. for a 'vec4 colors[10];', colors[4] must be at location colors[0]+4.\r\n        // However, user might call glGetUniformLocation(program, \"colors\") for an array, so we cannot discover based on the user\r\n        // input arguments whether the uniform we are dealing with is an array. The only way to discover which uniforms are arrays\r\n        // is to enumerate over all the active uniforms in the program.\r\n        var leftBrace = webglGetLeftBracePos(name);\r\n  \r\n        // If user passed an array accessor \"[index]\", parse the array index off the accessor.\r\n        if (leftBrace > 0) {\r\n          arrayIndex = jstoi_q(name.slice(leftBrace + 1)) >>> 0; // \"index]\", coerce parseInt(']') with >>>0 to treat \"foo[]\" as \"foo[0]\" and foo[-1] as unsigned out-of-bounds.\r\n          uniformBaseName = name.slice(0, leftBrace);\r\n        }\r\n  \r\n        // Have we cached the location of this uniform before?\r\n        var sizeAndId = program.uniformSizeAndIdsByName[uniformBaseName]; // A pair [array length, GLint of the uniform location]\r\n  \r\n        // If an uniform with this name exists, and if its index is within the array limits (if it's even an array),\r\n        // query the WebGLlocation, or return an existing cached location.\r\n        if (sizeAndId && arrayIndex < sizeAndId[0]) {\r\n          arrayIndex += sizeAndId[1]; // Add the base location of the uniform to the array index offset.\r\n          if ((uniformLocsById[arrayIndex] = uniformLocsById[arrayIndex] || GLctx.getUniformLocation(program, name))) {\r\n            return arrayIndex;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        // N.b. we are currently unable to distinguish between GL program IDs that never existed vs GL program IDs that have been deleted,\r\n        // so report GL_INVALID_VALUE in both cases.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n      }\r\n      return -1;\r\n    }\r\n  var _emscripten_glGetUniformLocation = _glGetUniformLocation;\r\n\r\n  function webglGetUniformLocation(location) {\r\n      var p = GLctx.currentProgram;\r\n  \r\n      if (p) {\r\n        var webglLoc = p.uniformLocsById[location];\r\n        // p.uniformLocsById[location] stores either an integer, or a WebGLUniformLocation.\r\n  \r\n        // If an integer, we have not yet bound the location, so do it now. The integer value specifies the array index\r\n        // we should bind to.\r\n        if (typeof webglLoc == 'number') {\r\n          p.uniformLocsById[location] = webglLoc = GLctx.getUniformLocation(p, p.uniformArrayNamesById[location] + (webglLoc > 0 ? '[' + webglLoc + ']' : ''));\r\n        }\r\n        // Else an already cached WebGLUniformLocation, return it.\r\n        return webglLoc;\r\n      } else {\r\n        GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n      }\r\n    }\r\n  \r\n  \r\n  /** @suppress{checkTypes} */\r\n  function emscriptenWebGLGetUniform(program, location, params, type) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      webglPrepareUniformLocationsBeforeFirstUse(program);\r\n      var data = GLctx.getUniform(program, webglGetUniformLocation(location));\r\n      if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformfv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 2);\r\n    }\r\n  var _emscripten_glGetUniformfv = _glGetUniformfv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformiv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n    }\r\n  var _emscripten_glGetUniformiv = _glGetUniformiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetUniformuiv(program, location, params) {\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n    }\r\n  var _emscripten_glGetUniformuiv = _glGetUniformuiv;\r\n\r\n  /** @suppress{checkTypes} */\r\n  function emscriptenWebGLGetVertexAttrib(index, pname, params, type) {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttrib*v on client-side array: not supported, bad data returned\");\r\n      }\r\n      var data = GLctx.getVertexAttrib(index, pname);\r\n      if (pname == 0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/) {\r\n        HEAP32[((params)>>2)] = data && data[\"name\"];\r\n      } else if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n          case 5: HEAP32[((params)>>2)] = Math.fround(data); break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 5: HEAP32[(((params)+(i*4))>>2)] = Math.fround(data[i]); break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribIiv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 0);\r\n    }\r\n  var _emscripten_glGetVertexAttribIiv = _glGetVertexAttribIiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetVertexAttribIuiv = _glGetVertexAttribIiv;\r\n  var _emscripten_glGetVertexAttribIuiv = _glGetVertexAttribIuiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribPointerv(index, pname, pointer) {\r\n      if (!pointer) {\r\n        // GLES2 specification does not specify how to behave if pointer is a null pointer. Since calling this function does not make sense\r\n        // if pointer == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttribPointer on client-side array: not supported, bad data returned\");\r\n      }\r\n      HEAP32[((pointer)>>2)] = GLctx.getVertexAttribOffset(index, pname);\r\n    }\r\n  var _emscripten_glGetVertexAttribPointerv = _glGetVertexAttribPointerv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribfv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 2);\r\n    }\r\n  var _emscripten_glGetVertexAttribfv = _glGetVertexAttribfv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGetVertexAttribiv(index, pname, params) {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 5);\r\n    }\r\n  var _emscripten_glGetVertexAttribiv = _glGetVertexAttribiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glHint(x0, x1) { GLctx.hint(x0, x1) }\r\n  var _emscripten_glHint = _glHint;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glInvalidateFramebuffer(target, numAttachments, attachments) {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.invalidateFramebuffer(target, list);\r\n    }\r\n  var _emscripten_glInvalidateFramebuffer = _glInvalidateFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glInvalidateSubFramebuffer(target, numAttachments, attachments, x, y, width, height) {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.invalidateSubFramebuffer(target, list, x, y, width, height);\r\n    }\r\n  var _emscripten_glInvalidateSubFramebuffer = _glInvalidateSubFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsBuffer(buffer) {\r\n      var b = GL.buffers[buffer];\r\n      if (!b) return 0;\r\n      return GLctx.isBuffer(b);\r\n    }\r\n  var _emscripten_glIsBuffer = _glIsBuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsEnabled(x0) { return GLctx.isEnabled(x0) }\r\n  var _emscripten_glIsEnabled = _glIsEnabled;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsFramebuffer(framebuffer) {\r\n      var fb = GL.framebuffers[framebuffer];\r\n      if (!fb) return 0;\r\n      return GLctx.isFramebuffer(fb);\r\n    }\r\n  var _emscripten_glIsFramebuffer = _glIsFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsProgram(program) {\r\n      program = GL.programs[program];\r\n      if (!program) return 0;\r\n      return GLctx.isProgram(program);\r\n    }\r\n  var _emscripten_glIsProgram = _glIsProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsQuery(id) {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx.isQuery(query);\r\n    }\r\n  var _emscripten_glIsQuery = _glIsQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsQueryEXT(id) {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx.disjointTimerQueryExt['isQueryEXT'](query);\r\n    }\r\n  var _emscripten_glIsQueryEXT = _glIsQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsRenderbuffer(renderbuffer) {\r\n      var rb = GL.renderbuffers[renderbuffer];\r\n      if (!rb) return 0;\r\n      return GLctx.isRenderbuffer(rb);\r\n    }\r\n  var _emscripten_glIsRenderbuffer = _glIsRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsSampler(id) {\r\n      var sampler = GL.samplers[id];\r\n      if (!sampler) return 0;\r\n      return GLctx.isSampler(sampler);\r\n    }\r\n  var _emscripten_glIsSampler = _glIsSampler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsShader(shader) {\r\n      var s = GL.shaders[shader];\r\n      if (!s) return 0;\r\n      return GLctx.isShader(s);\r\n    }\r\n  var _emscripten_glIsShader = _glIsShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsSync(sync) {\r\n      return GLctx.isSync(GL.syncs[sync]);\r\n    }\r\n  var _emscripten_glIsSync = _glIsSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsTexture(id) {\r\n      var texture = GL.textures[id];\r\n      if (!texture) return 0;\r\n      return GLctx.isTexture(texture);\r\n    }\r\n  var _emscripten_glIsTexture = _glIsTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsTransformFeedback(id) {\r\n      return GLctx.isTransformFeedback(GL.transformFeedbacks[id]);\r\n    }\r\n  var _emscripten_glIsTransformFeedback = _glIsTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsVertexArray(array) {\r\n  \r\n      var vao = GL.vaos[array];\r\n      if (!vao) return 0;\r\n      return GLctx.isVertexArray(vao);\r\n    }\r\n  var _emscripten_glIsVertexArray = _glIsVertexArray;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glIsVertexArrayOES = _glIsVertexArray;\r\n  var _emscripten_glIsVertexArrayOES = _glIsVertexArrayOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glLineWidth(x0) { GLctx.lineWidth(x0) }\r\n  var _emscripten_glLineWidth = _glLineWidth;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glLinkProgram(program) {\r\n      program = GL.programs[program];\r\n      GLctx.linkProgram(program);\r\n      // Invalidate earlier computed uniform->ID mappings, those have now become stale\r\n      program.uniformLocsById = 0; // Mark as null-like so that glGetUniformLocation() knows to populate this again.\r\n      program.uniformSizeAndIdsByName = {};\r\n  \r\n    }\r\n  var _emscripten_glLinkProgram = _glLinkProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPauseTransformFeedback() { GLctx.pauseTransformFeedback() }\r\n  var _emscripten_glPauseTransformFeedback = _glPauseTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPixelStorei(pname, param) {\r\n      if (pname == 0xCF5 /* GL_UNPACK_ALIGNMENT */) {\r\n        GL.unpackAlignment = param;\r\n      }\r\n      GLctx.pixelStorei(pname, param);\r\n    }\r\n  var _emscripten_glPixelStorei = _glPixelStorei;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPolygonOffset(x0, x1) { GLctx.polygonOffset(x0, x1) }\r\n  var _emscripten_glPolygonOffset = _glPolygonOffset;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glProgramBinary(program, binaryFormat, binary, length) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glProgramBinary = _glProgramBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glProgramParameteri(program, pname, value) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glProgramParameteri = _glProgramParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glQueryCounterEXT(id, target) {\r\n      GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id], target);\r\n    }\r\n  var _emscripten_glQueryCounterEXT = _glQueryCounterEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glReadBuffer(x0) { GLctx.readBuffer(x0) }\r\n  var _emscripten_glReadBuffer = _glReadBuffer;\r\n\r\n  function computeUnpackAlignedImageSize(width, height, sizePerPixel, alignment) {\r\n      function roundedToNextMultipleOf(x, y) {\r\n        return (x + y - 1) & -y;\r\n      }\r\n      var plainRowSize = width * sizePerPixel;\r\n      var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);\r\n      return height * alignedRowSize;\r\n    }\r\n  \r\n  function colorChannelsInGlTextureFormat(format) {\r\n      // Micro-optimizations for size: map format to size by subtracting smallest enum value (0x1902) from all values first.\r\n      // Also omit the most common size value (1) from the list, which is assumed by formats not on the list.\r\n      var colorChannels = {\r\n        // 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,\r\n        // 0x1906 /* GL_ALPHA */ - 0x1902: 1,\r\n        5: 3,\r\n        6: 4,\r\n        // 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,\r\n        8: 2,\r\n        29502: 3,\r\n        29504: 4,\r\n        // 0x1903 /* GL_RED */ - 0x1902: 1,\r\n        26917: 2,\r\n        26918: 2,\r\n        // 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,\r\n        29846: 3,\r\n        29847: 4\r\n      };\r\n      return colorChannels[format - 0x1902]||1;\r\n    }\r\n  \r\n  function heapObjectForWebGLType(type) {\r\n      // Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare\r\n      // smaller values for the heap, for shorter generated code size.\r\n      // Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.\r\n      // (since most types are HEAPU16)\r\n      type -= 0x1400;\r\n      if (type == 0) return HEAP8;\r\n  \r\n      if (type == 1) return HEAPU8;\r\n  \r\n      if (type == 2) return HEAP16;\r\n  \r\n      if (type == 4) return HEAP32;\r\n  \r\n      if (type == 6) return HEAPF32;\r\n  \r\n      if (type == 5\r\n        || type == 28922\r\n        || type == 28520\r\n        || type == 30779\r\n        || type == 30782\r\n        )\r\n        return HEAPU32;\r\n  \r\n      return HEAPU16;\r\n    }\r\n  \r\n  function heapAccessShiftForWebGLHeap(heap) {\r\n      return 31 - Math.clz32(heap.BYTES_PER_ELEMENT);\r\n    }\r\n  \r\n  function emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) {\r\n      var heap = heapObjectForWebGLType(type);\r\n      var shift = heapAccessShiftForWebGLHeap(heap);\r\n      var byteSize = 1<<shift;\r\n      var sizePerPixel = colorChannelsInGlTextureFormat(format) * byteSize;\r\n      var bytes = computeUnpackAlignedImageSize(width, height, sizePerPixel, GL.unpackAlignment);\r\n      return heap.subarray(pixels >> shift, pixels + bytes >> shift);\r\n    }\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glReadPixels(x, y, width, height, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelPackBufferBinding) {\r\n          GLctx.readPixels(x, y, width, height, format, type, pixels);\r\n        } else {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.readPixels(x, y, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, format);\r\n      if (!pixelData) {\r\n        GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n        return;\r\n      }\r\n      GLctx.readPixels(x, y, width, height, format, type, pixelData);\r\n    }\r\n  var _emscripten_glReadPixels = _glReadPixels;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glReleaseShaderCompiler() {\r\n      // NOP (as allowed by GLES 2.0 spec)\r\n    }\r\n  var _emscripten_glReleaseShaderCompiler = _glReleaseShaderCompiler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glRenderbufferStorage(x0, x1, x2, x3) { GLctx.renderbufferStorage(x0, x1, x2, x3) }\r\n  var _emscripten_glRenderbufferStorage = _glRenderbufferStorage;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glRenderbufferStorageMultisample(x0, x1, x2, x3, x4) { GLctx.renderbufferStorageMultisample(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glRenderbufferStorageMultisample = _glRenderbufferStorageMultisample;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glResumeTransformFeedback() { GLctx.resumeTransformFeedback() }\r\n  var _emscripten_glResumeTransformFeedback = _glResumeTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSampleCoverage(value, invert) {\r\n      GLctx.sampleCoverage(value, !!invert);\r\n    }\r\n  var _emscripten_glSampleCoverage = _glSampleCoverage;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameterf(sampler, pname, param) {\r\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameterf = _glSamplerParameterf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameterfv(sampler, pname, params) {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameterfv = _glSamplerParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameteri(sampler, pname, param) {\r\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameteri = _glSamplerParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glSamplerParameteriv(sampler, pname, params) {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\r\n    }\r\n  var _emscripten_glSamplerParameteriv = _glSamplerParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glScissor(x0, x1, x2, x3) { GLctx.scissor(x0, x1, x2, x3) }\r\n  var _emscripten_glScissor = _glScissor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glShaderBinary(count, shaders, binaryformat, binary, length) {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    }\r\n  var _emscripten_glShaderBinary = _glShaderBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glShaderSource(shader, count, string, length) {\r\n      var source = GL.getSource(shader, count, string, length);\r\n  \r\n      GLctx.shaderSource(GL.shaders[shader], source);\r\n    }\r\n  var _emscripten_glShaderSource = _glShaderSource;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilFunc(x0, x1, x2) { GLctx.stencilFunc(x0, x1, x2) }\r\n  var _emscripten_glStencilFunc = _glStencilFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilFuncSeparate(x0, x1, x2, x3) { GLctx.stencilFuncSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glStencilFuncSeparate = _glStencilFuncSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilMask(x0) { GLctx.stencilMask(x0) }\r\n  var _emscripten_glStencilMask = _glStencilMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilMaskSeparate(x0, x1) { GLctx.stencilMaskSeparate(x0, x1) }\r\n  var _emscripten_glStencilMaskSeparate = _glStencilMaskSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilOp(x0, x1, x2) { GLctx.stencilOp(x0, x1, x2) }\r\n  var _emscripten_glStencilOp = _glStencilOp;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilOpSeparate(x0, x1, x2, x3) { GLctx.stencilOpSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glStencilOpSeparate = _glStencilOpSeparate;\r\n\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) : null);\r\n    }\r\n  var _emscripten_glTexImage2D = _glTexImage2D;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, null);\r\n      }\r\n    }\r\n  var _emscripten_glTexImage3D = _glTexImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameterf(x0, x1, x2) { GLctx.texParameterf(x0, x1, x2) }\r\n  var _emscripten_glTexParameterf = _glTexParameterf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameterfv(target, pname, params) {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx.texParameterf(target, pname, param);\r\n    }\r\n  var _emscripten_glTexParameterfv = _glTexParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameteri(x0, x1, x2) { GLctx.texParameteri(x0, x1, x2) }\r\n  var _emscripten_glTexParameteri = _glTexParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameteriv(target, pname, params) {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx.texParameteri(target, pname, param);\r\n    }\r\n  var _emscripten_glTexParameteriv = _glTexParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexStorage2D(x0, x1, x2, x3, x4) { GLctx.texStorage2D(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glTexStorage2D = _glTexStorage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexStorage3D(x0, x1, x2, x3, x4, x5) { GLctx.texStorage3D(x0, x1, x2, x3, x4, x5) }\r\n  var _emscripten_glTexStorage3D = _glTexStorage3D;\r\n\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels) {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = null;\r\n      if (pixels) pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0);\r\n      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);\r\n    }\r\n  var _emscripten_glTexSubImage2D = _glTexSubImage2D;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, null);\r\n      }\r\n    }\r\n  var _emscripten_glTexSubImage3D = _glTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTransformFeedbackVaryings(program, count, varyings, bufferMode) {\r\n      program = GL.programs[program];\r\n      var vars = [];\r\n      for (var i = 0; i < count; i++)\r\n        vars.push(UTF8ToString(HEAP32[(((varyings)+(i*4))>>2)]));\r\n  \r\n      GLctx.transformFeedbackVaryings(program, vars, bufferMode);\r\n    }\r\n  var _emscripten_glTransformFeedbackVaryings = _glTransformFeedbackVaryings;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1f(location, v0) {\r\n      GLctx.uniform1f(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1f = _glUniform1f;\r\n\r\n  \r\n  var miniTempWebGLFloatBuffers = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1fv(webglGetUniformLocation(location), HEAPF32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform1fv = _glUniform1fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1i(location, v0) {\r\n      GLctx.uniform1i(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1i = _glUniform1i;\r\n\r\n  \r\n  var miniTempWebGLIntBuffers = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform1iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1iv(webglGetUniformLocation(location), HEAP32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform1iv = _glUniform1iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform1ui(location, v0) {\r\n      GLctx.uniform1ui(webglGetUniformLocation(location), v0);\r\n    }\r\n  var _emscripten_glUniform1ui = _glUniform1ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform1uiv(location, count, value) {\r\n      count && GLctx.uniform1uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count);\r\n    }\r\n  var _emscripten_glUniform1uiv = _glUniform1uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2f(location, v0, v1) {\r\n      GLctx.uniform2f(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2f = _glUniform2f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform2fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform2fv = _glUniform2fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2i(location, v0, v1) {\r\n      GLctx.uniform2i(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2i = _glUniform2i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform2iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform2iv(webglGetUniformLocation(location), HEAP32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform2iv = _glUniform2iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform2ui(location, v0, v1) {\r\n      GLctx.uniform2ui(webglGetUniformLocation(location), v0, v1);\r\n    }\r\n  var _emscripten_glUniform2ui = _glUniform2ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform2uiv(location, count, value) {\r\n      count && GLctx.uniform2uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*2);\r\n    }\r\n  var _emscripten_glUniform2uiv = _glUniform2uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3f(location, v0, v1, v2) {\r\n      GLctx.uniform3f(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3f = _glUniform3f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform3fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform3fv = _glUniform3fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3i(location, v0, v1, v2) {\r\n      GLctx.uniform3i(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3i = _glUniform3i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform3iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform3iv(webglGetUniformLocation(location), HEAP32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform3iv = _glUniform3iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform3ui(location, v0, v1, v2) {\r\n      GLctx.uniform3ui(webglGetUniformLocation(location), v0, v1, v2);\r\n    }\r\n  var _emscripten_glUniform3ui = _glUniform3ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform3uiv(location, count, value) {\r\n      count && GLctx.uniform3uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*3);\r\n    }\r\n  var _emscripten_glUniform3uiv = _glUniform3uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4f(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4f(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4f = _glUniform4f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4fv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform4fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 4 * count; i += 4) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4fv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform4fv = _glUniform4fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4i(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4i(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4i = _glUniform4i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniform4iv(location, count, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform4iv(webglGetUniformLocation(location), HEAP32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAP32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4iv(webglGetUniformLocation(location), view);\r\n    }\r\n  var _emscripten_glUniform4iv = _glUniform4iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform4ui(location, v0, v1, v2, v3) {\r\n      GLctx.uniform4ui(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    }\r\n  var _emscripten_glUniform4ui = _glUniform4ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniform4uiv(location, count, value) {\r\n      count && GLctx.uniform4uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*4);\r\n    }\r\n  var _emscripten_glUniform4uiv = _glUniform4uiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding) {\r\n      program = GL.programs[program];\r\n  \r\n      GLctx.uniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding);\r\n    }\r\n  var _emscripten_glUniformBlockBinding = _glUniformBlockBinding;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix2fv = _glUniformMatrix2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2x3fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    }\r\n  var _emscripten_glUniformMatrix2x3fv = _glUniformMatrix2x3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix2x4fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    }\r\n  var _emscripten_glUniformMatrix2x4fv = _glUniformMatrix2x4fv;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*9);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 32) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[9*count-1];\r\n        for (var i = 0; i < 9*count; i += 9) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n          view[i+4] = HEAPF32[(((value)+(4*i+16))>>2)];\r\n          view[i+5] = HEAPF32[(((value)+(4*i+20))>>2)];\r\n          view[i+6] = HEAPF32[(((value)+(4*i+24))>>2)];\r\n          view[i+7] = HEAPF32[(((value)+(4*i+28))>>2)];\r\n          view[i+8] = HEAPF32[(((value)+(4*i+32))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*36)>>2);\r\n      }\r\n      GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix3fv = _glUniformMatrix3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3x2fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    }\r\n  var _emscripten_glUniformMatrix3x2fv = _glUniformMatrix3x2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix3x4fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    }\r\n  var _emscripten_glUniformMatrix3x4fv = _glUniformMatrix3x4fv;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4fv(location, count, transpose, value) {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*16);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 18) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[16*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 16 * count; i += 16) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n          view[i + 4] = heap[dst + 4];\r\n          view[i + 5] = heap[dst + 5];\r\n          view[i + 6] = heap[dst + 6];\r\n          view[i + 7] = heap[dst + 7];\r\n          view[i + 8] = heap[dst + 8];\r\n          view[i + 9] = heap[dst + 9];\r\n          view[i + 10] = heap[dst + 10];\r\n          view[i + 11] = heap[dst + 11];\r\n          view[i + 12] = heap[dst + 12];\r\n          view[i + 13] = heap[dst + 13];\r\n          view[i + 14] = heap[dst + 14];\r\n          view[i + 15] = heap[dst + 15];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*64)>>2);\r\n      }\r\n      GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, view);\r\n    }\r\n  var _emscripten_glUniformMatrix4fv = _glUniformMatrix4fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4x2fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    }\r\n  var _emscripten_glUniformMatrix4x2fv = _glUniformMatrix4x2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUniformMatrix4x3fv(location, count, transpose, value) {\r\n      count && GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    }\r\n  var _emscripten_glUniformMatrix4x3fv = _glUniformMatrix4x3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glUseProgram(program) {\r\n      program = GL.programs[program];\r\n      GLctx.useProgram(program);\r\n      // Record the currently active program so that we can access the uniform\r\n      // mapping table of that program.\r\n      GLctx.currentProgram = program;\r\n    }\r\n  var _emscripten_glUseProgram = _glUseProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glValidateProgram(program) {\r\n      GLctx.validateProgram(GL.programs[program]);\r\n    }\r\n  var _emscripten_glValidateProgram = _glValidateProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib1f(x0, x1) { GLctx.vertexAttrib1f(x0, x1) }\r\n  var _emscripten_glVertexAttrib1f = _glVertexAttrib1f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib1fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib1f(index, HEAPF32[v>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib1fv = _glVertexAttrib1fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib2f(x0, x1, x2) { GLctx.vertexAttrib2f(x0, x1, x2) }\r\n  var _emscripten_glVertexAttrib2f = _glVertexAttrib2f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib2fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib2f(index, HEAPF32[v>>2], HEAPF32[v+4>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib2fv = _glVertexAttrib2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib3f(x0, x1, x2, x3) { GLctx.vertexAttrib3f(x0, x1, x2, x3) }\r\n  var _emscripten_glVertexAttrib3f = _glVertexAttrib3f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib3fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib3f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib3fv = _glVertexAttrib3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib4f(x0, x1, x2, x3, x4) { GLctx.vertexAttrib4f(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttrib4f = _glVertexAttrib4f;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib4fv(index, v) {\r\n  \r\n      GLctx.vertexAttrib4f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2], HEAPF32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttrib4fv = _glVertexAttrib4fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribDivisor(index, divisor) {\r\n      GLctx.vertexAttribDivisor(index, divisor);\r\n    }\r\n  var _emscripten_glVertexAttribDivisor = _glVertexAttribDivisor;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorANGLE = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorANGLE = _glVertexAttribDivisorANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorARB = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorARB = _glVertexAttribDivisorARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorEXT = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorEXT = _glVertexAttribDivisorEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorNV = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorNV = _glVertexAttribDivisorNV;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4i(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4i(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttribI4i = _glVertexAttribI4i;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4iv(index, v) {\r\n      GLctx.vertexAttribI4i(index, HEAP32[v>>2], HEAP32[v+4>>2], HEAP32[v+8>>2], HEAP32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttribI4iv = _glVertexAttribI4iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4ui(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4ui(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttribI4ui = _glVertexAttribI4ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4uiv(index, v) {\r\n      GLctx.vertexAttribI4ui(index, HEAPU32[v>>2], HEAPU32[v+4>>2], HEAPU32[v+8>>2], HEAPU32[v+12>>2]);\r\n    }\r\n  var _emscripten_glVertexAttribI4uiv = _glVertexAttribI4uiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribIPointer(index, size, type, stride, ptr) {\r\n      GLctx.vertexAttribIPointer(index, size, type, stride, ptr);\r\n    }\r\n  var _emscripten_glVertexAttribIPointer = _glVertexAttribIPointer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      if (!GLctx.currentArrayBufferBinding) {\r\n        cb.size = size;\r\n        cb.type = type;\r\n        cb.normalized = normalized;\r\n        cb.stride = stride;\r\n        cb.ptr = ptr;\r\n        cb.clientside = true;\r\n        cb.vertexAttribPointerAdaptor = function(index, size, type, normalized, stride, ptr) {\r\n          this.vertexAttribPointer(index, size, type, normalized, stride, ptr);\r\n        };\r\n        return;\r\n      }\r\n      cb.clientside = false;\r\n      GLctx.vertexAttribPointer(index, size, type, !!normalized, stride, ptr);\r\n    }\r\n  var _emscripten_glVertexAttribPointer = _glVertexAttribPointer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glViewport(x0, x1, x2, x3) { GLctx.viewport(x0, x1, x2, x3) }\r\n  var _emscripten_glViewport = _glViewport;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glWaitSync(sync, flags, timeout_low, timeout_high) {\r\n      // See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      GLctx.waitSync(GL.syncs[sync], flags, timeout);\r\n    }\r\n  var _emscripten_glWaitSync = _glWaitSync;\r\n\r\n  function _emscripten_has_asyncify() {\r\n      return 1;\r\n    }\r\n\r\n  function _emscripten_memcpy_big(dest, src, num) {\r\n      HEAPU8.copyWithin(dest, src, src + num);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  function doRequestFullscreen(target, strategy) {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      if (!target.requestFullscreen\r\n        && !target.webkitRequestFullscreen\r\n        ) {\r\n        return -3;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (strategy.deferUntilInEventHandler) {\r\n          JSEvents.deferCall(JSEvents_requestFullscreen, 1 /* priority over pointer lock */, [target, strategy]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return JSEvents_requestFullscreen(target, strategy);\r\n    }\r\n  \r\n  \r\n  function _emscripten_request_fullscreen_strategy(target, deferUntilInEventHandler, fullscreenStrategy) {\r\n      var strategy = {\r\n        scaleMode: HEAP32[((fullscreenStrategy)>>2)],\r\n        canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\r\n        filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\r\n        deferUntilInEventHandler: deferUntilInEventHandler,\r\n        canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\r\n        canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)]\r\n      };\r\n  \r\n      return doRequestFullscreen(target, strategy);\r\n    }\r\n\r\n  \r\n  \r\n  function _emscripten_request_pointerlock(target, deferUntilInEventHandler) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      if (!target.requestPointerLock\r\n        ) {\r\n        return -1;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (deferUntilInEventHandler) {\r\n          JSEvents.deferCall(requestPointerLock, 2 /* priority below fullscreen */, [target]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return requestPointerLock(target);\r\n    }\r\n\r\n  function getHeapMax() {\r\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\r\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\r\n      // for any code that deals with heap sizes, which would require special\r\n      // casing all heap size related code to treat 0 specially.\r\n      return 2147483648;\r\n    }\r\n  \r\n  function emscripten_realloc_buffer(size) {\r\n      var b = wasmMemory.buffer;\r\n      try {\r\n        // round size grow request up to wasm page size (fixed 64KB per spec)\r\n        wasmMemory.grow((size - b.byteLength + 65535) >>> 16); // .grow() takes a delta compared to the previous size\r\n        updateMemoryViews();\r\n        return 1 /*success*/;\r\n      } catch(e) {\r\n      }\r\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\r\n      // anyhow)\r\n    }\r\n  function _emscripten_resize_heap(requestedSize) {\r\n      var oldSize = HEAPU8.length;\r\n      requestedSize = requestedSize >>> 0;\r\n      // With multithreaded builds, races can happen (another thread might increase the size\r\n      // in between), so return a failure, and let the caller retry.\r\n  \r\n      // Memory resize rules:\r\n      // 1.  Always increase heap size to at least the requested size, rounded up\r\n      //     to next page multiple.\r\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\r\n      //     geometrically: increase the heap size according to\r\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\r\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\r\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\r\n      //     linearly: increase the heap size by at least\r\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\r\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\r\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\r\n      // 4.  If we were unable to allocate as much memory, it may be due to\r\n      //     over-eager decision to excessively reserve due to (3) above.\r\n      //     Hence if an allocation fails, cut down on the amount of excess\r\n      //     growth, in an attempt to succeed to perform a smaller allocation.\r\n  \r\n      // A limit is set for how much we can grow. We should not exceed that\r\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\r\n      var maxHeapSize = getHeapMax();\r\n      if (requestedSize > maxHeapSize) {\r\n        return false;\r\n      }\r\n  \r\n      let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\r\n  \r\n      // Loop through potential heap size increases. If we attempt a too eager\r\n      // reservation that fails, cut down on the attempted size and reserve a\r\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\r\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\r\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\r\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\r\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\r\n  \r\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\r\n  \r\n        var replacement = emscripten_realloc_buffer(newSize);\r\n        if (replacement) {\r\n  \r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n  function _emscripten_sample_gamepad_data() {\r\n      return (JSEvents.lastGamepadState = (navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : null)))\r\n        ? 0 : -1;\r\n    }\r\n\r\n  \r\n  \r\n  function registerBeforeUnloadEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {\r\n      var beforeUnloadEventHandlerFunc = function(e = event) {\r\n        // Note: This is always called on the main browser thread, since it needs synchronously return a value!\r\n        var confirmationMessage = ((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, 0, userData);\r\n        \r\n        if (confirmationMessage) {\r\n          confirmationMessage = UTF8ToString(confirmationMessage);\r\n        }\r\n        if (confirmationMessage) {\r\n          e.preventDefault();\r\n          e.returnValue = confirmationMessage;\r\n          return confirmationMessage;\r\n        }\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: beforeUnloadEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_beforeunload_callback_on_thread(userData, callbackfunc, targetThread) {\r\n      if (typeof onbeforeunload == 'undefined') return -1;\r\n      // beforeunload callback can only be registered on the main browser thread, because the page will go away immediately after returning from the handler,\r\n      // and there is no time to start proxying it anywhere.\r\n      if (targetThread !== 1) return -5;\r\n      registerBeforeUnloadEventCallback(2, userData, true, callbackfunc, 28, \"beforeunload\");\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerFocusEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.focusEvent) JSEvents.focusEvent = _malloc( 256 );\r\n  \r\n      var focusEventHandlerFunc = function(e = event) {\r\n        var nodeName = JSEvents.getNodeNameForTarget(e.target);\r\n        var id = e.target.id ? e.target.id : '';\r\n  \r\n        var focusEvent = JSEvents.focusEvent;\r\n        stringToUTF8(nodeName, focusEvent + 0, 128);\r\n        stringToUTF8(id, focusEvent + 128, 128);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, focusEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: focusEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_blur_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 12, \"blur\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n\r\n  \r\n  function _emscripten_set_element_css_size(target, width, height) {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      target.style.width = width + \"px\";\r\n      target.style.height = height + \"px\";\r\n  \r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_focus_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 13, \"focus\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillFullscreenChangeEventData(eventStruct) {\r\n      var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\r\n      var isFullscreen = !!fullscreenElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isFullscreen;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = JSEvents.fullscreenEnabled();\r\n      // If transitioning to fullscreen, report info about the element that is now fullscreen.\r\n      // If transitioning to windowed mode, report info about the element that just was fullscreen.\r\n      var reportedElement = isFullscreen ? fullscreenElement : JSEvents.previousFullscreenElement;\r\n      var nodeName = JSEvents.getNodeNameForTarget(reportedElement);\r\n      var id = (reportedElement && reportedElement.id) ? reportedElement.id : '';\r\n      stringToUTF8(nodeName, eventStruct + 8, 128);\r\n      stringToUTF8(id, eventStruct + 136, 128);\r\n      HEAP32[(((eventStruct)+(264))>>2)] = reportedElement ? reportedElement.clientWidth : 0;\r\n      HEAP32[(((eventStruct)+(268))>>2)] = reportedElement ? reportedElement.clientHeight : 0;\r\n      HEAP32[(((eventStruct)+(272))>>2)] = screen.width;\r\n      HEAP32[(((eventStruct)+(276))>>2)] = screen.height;\r\n      if (isFullscreen) {\r\n        JSEvents.previousFullscreenElement = fullscreenElement;\r\n      }\r\n    }\r\n  \r\n  \r\n  function registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.fullscreenChangeEvent) JSEvents.fullscreenChangeEvent = _malloc( 280 );\r\n  \r\n      var fullscreenChangeEventhandlerFunc = function(e = event) {\r\n        var fullscreenChangeEvent = JSEvents.fullscreenChangeEvent;\r\n  \r\n        fillFullscreenChangeEventData(fullscreenChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, fullscreenChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: fullscreenChangeEventhandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  \r\n  function _emscripten_set_fullscreenchange_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"fullscreenchange\", targetThread);\r\n  \r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"webkitfullscreenchange\", targetThread);\r\n  \r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerGamepadEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.gamepadEvent) JSEvents.gamepadEvent = _malloc( 1432 );\r\n  \r\n      var gamepadEventHandlerFunc = function(e = event) {\r\n        var gamepadEvent = JSEvents.gamepadEvent;\r\n        fillGamepadEventData(gamepadEvent, e[\"gamepad\"]);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, gamepadEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: gamepadEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_gamepadconnected_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\r\n      registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 26, \"gamepadconnected\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_gamepaddisconnected_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\r\n      registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 27, \"gamepaddisconnected\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerKeyEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.keyEvent) JSEvents.keyEvent = _malloc( 176 );\r\n  \r\n      var keyEventHandlerFunc = function(e) {\r\n  \r\n        var keyEventData = JSEvents.keyEvent;\r\n        HEAPF64[((keyEventData)>>3)] = e.timeStamp;\r\n  \r\n        var idx = keyEventData >> 2;\r\n  \r\n        HEAP32[idx + 2] = e.location;\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        HEAP32[idx + 7] = e.repeat;\r\n        HEAP32[idx + 8] = e.charCode;\r\n        HEAP32[idx + 9] = e.keyCode;\r\n        HEAP32[idx + 10] = e.which;\r\n        stringToUTF8(e.key || '', keyEventData + 44, 32);\r\n        stringToUTF8(e.code || '', keyEventData + 76, 32);\r\n        stringToUTF8(e.char || '', keyEventData + 108, 32);\r\n        stringToUTF8(e.locale || '', keyEventData + 140, 32);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, keyEventData, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: keyEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_keydown_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 2, \"keydown\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_keypress_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 1, \"keypress\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_keyup_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 3, \"keyup\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop) {\r\n      var browserIterationFunc = (() => dynCall_v.call(null, func));\r\n      setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop);\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillMouseEventData(eventStruct, e, target) {\r\n      HEAPF64[((eventStruct)>>3)] = e.timeStamp;\r\n      var idx = eventStruct >> 2;\r\n      HEAP32[idx + 2] = e.screenX;\r\n      HEAP32[idx + 3] = e.screenY;\r\n      HEAP32[idx + 4] = e.clientX;\r\n      HEAP32[idx + 5] = e.clientY;\r\n      HEAP32[idx + 6] = e.ctrlKey;\r\n      HEAP32[idx + 7] = e.shiftKey;\r\n      HEAP32[idx + 8] = e.altKey;\r\n      HEAP32[idx + 9] = e.metaKey;\r\n      HEAP16[idx*2 + 20] = e.button;\r\n      HEAP16[idx*2 + 21] = e.buttons;\r\n  \r\n      HEAP32[idx + 11] = e[\"movementX\"]\r\n        ;\r\n  \r\n      HEAP32[idx + 12] = e[\"movementY\"]\r\n        ;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAP32[idx + 13] = e.clientX - rect.left;\r\n      HEAP32[idx + 14] = e.clientY - rect.top;\r\n  \r\n    }\r\n  \r\n  \r\n  function registerMouseEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.mouseEvent) JSEvents.mouseEvent = _malloc( 72 );\r\n      target = findEventTarget(target);\r\n  \r\n      var mouseEventHandlerFunc = function(e = event) {\r\n        // TODO: Make this access thread safe, or this could update live while app is reading it.\r\n        fillMouseEventData(JSEvents.mouseEvent, e, target);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, JSEvents.mouseEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: eventTypeString != 'mousemove' && eventTypeString != 'mouseenter' && eventTypeString != 'mouseleave', // Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: mouseEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_mousedown_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 5, \"mousedown\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseenter_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 33, \"mouseenter\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseleave_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 34, \"mouseleave\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mousemove_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 8, \"mousemove\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_mouseup_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 6, \"mouseup\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function fillPointerlockChangeEventData(eventStruct) {\r\n      var pointerLockElement = document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement || document.msPointerLockElement;\r\n      var isPointerlocked = !!pointerLockElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isPointerlocked;\r\n      var nodeName = JSEvents.getNodeNameForTarget(pointerLockElement);\r\n      var id = (pointerLockElement && pointerLockElement.id) ? pointerLockElement.id : '';\r\n      stringToUTF8(nodeName, eventStruct + 4, 128);\r\n      stringToUTF8(id, eventStruct + 132, 128);\r\n    }\r\n  \r\n  \r\n  function registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.pointerlockChangeEvent) JSEvents.pointerlockChangeEvent = _malloc( 260 );\r\n  \r\n      var pointerlockChangeEventHandlerFunc = function(e = event) {\r\n        var pointerlockChangeEvent = JSEvents.pointerlockChangeEvent;\r\n        fillPointerlockChangeEventData(pointerlockChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, pointerlockChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: pointerlockChangeEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  \r\n  /** @suppress {missingProperties} */\r\n  function _emscripten_set_pointerlockchange_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      // TODO: Currently not supported in pthreads or in --proxy-to-worker mode. (In pthreads mode, document object is not defined)\r\n      if (!document || !document.body || (!document.body.requestPointerLock && !document.body.mozRequestPointerLock && !document.body.webkitRequestPointerLock && !document.body.msRequestPointerLock)) {\r\n        return -1;\r\n      }\r\n  \r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"pointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mozpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"webkitpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mspointerlockchange\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  function registerUiEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.uiEvent) JSEvents.uiEvent = _malloc( 36 );\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var uiEventHandlerFunc = function(e = event) {\r\n        if (e.target != target) {\r\n          // Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that\r\n          // was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log\r\n          // message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,\r\n          // causing a new scroll, etc..\r\n          return;\r\n        }\r\n        var b = document.body; // Take document.body to a variable, Closure compiler does not outline access to it on its own.\r\n        if (!b) {\r\n          // During a page unload 'body' can be null, with \"Cannot read property 'clientWidth' of null\" being thrown\r\n          return;\r\n        }\r\n        var uiEvent = JSEvents.uiEvent;\r\n        HEAP32[((uiEvent)>>2)] = e.detail;\r\n        HEAP32[(((uiEvent)+(4))>>2)] = b.clientWidth;\r\n        HEAP32[(((uiEvent)+(8))>>2)] = b.clientHeight;\r\n        HEAP32[(((uiEvent)+(12))>>2)] = innerWidth;\r\n        HEAP32[(((uiEvent)+(16))>>2)] = innerHeight;\r\n        HEAP32[(((uiEvent)+(20))>>2)] = outerWidth;\r\n        HEAP32[(((uiEvent)+(24))>>2)] = outerHeight;\r\n        HEAP32[(((uiEvent)+(28))>>2)] = pageXOffset;\r\n        HEAP32[(((uiEvent)+(32))>>2)] = pageYOffset;\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, uiEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: uiEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_resize_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerUiEventCallback(target, userData, useCapture, callbackfunc, 10, \"resize\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  function registerTouchEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.touchEvent) JSEvents.touchEvent = _malloc( 1696 );\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var touchEventHandlerFunc = function(e) {\r\n        var t, touches = {}, et = e.touches;\r\n        // To ease marshalling different kinds of touches that browser reports (all touches are listed in e.touches, \r\n        // only changed touches in e.changedTouches, and touches on target at a.targetTouches), mark a boolean in\r\n        // each Touch object so that we can later loop only once over all touches we see to marshall over to Wasm.\r\n  \r\n        for (var i = 0; i < et.length; ++i) {\r\n          t = et[i];\r\n          // Browser might recycle the generated Touch objects between each frame (Firefox on Android), so reset any\r\n          // changed/target states we may have set from previous frame.\r\n          t.isChanged = t.onTarget = 0;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the changedTouches list.\r\n        for (var i = 0; i < e.changedTouches.length; ++i) {\r\n          t = e.changedTouches[i];\r\n          t.isChanged = 1;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the targetTouches list.\r\n        for (var i = 0; i < e.targetTouches.length; ++i) {\r\n          touches[e.targetTouches[i].identifier].onTarget = 1;\r\n        }\r\n  \r\n        var touchEvent = JSEvents.touchEvent;\r\n        HEAPF64[((touchEvent)>>3)] = e.timeStamp;\r\n        var idx = touchEvent>>2; // Pre-shift the ptr to index to HEAP32 to save code size\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        idx += 7; // Advance to the start of the touch array.\r\n        var targetRect = getBoundingClientRect(target);\r\n        var numTouches = 0;\r\n        for (var i in touches) {\r\n          t = touches[i];\r\n          HEAP32[idx + 0] = t.identifier;\r\n          HEAP32[idx + 1] = t.screenX;\r\n          HEAP32[idx + 2] = t.screenY;\r\n          HEAP32[idx + 3] = t.clientX;\r\n          HEAP32[idx + 4] = t.clientY;\r\n          HEAP32[idx + 5] = t.pageX;\r\n          HEAP32[idx + 6] = t.pageY;\r\n          HEAP32[idx + 7] = t.isChanged;\r\n          HEAP32[idx + 8] = t.onTarget;\r\n          HEAP32[idx + 9] = t.clientX - targetRect.left;\r\n          HEAP32[idx + 10] = t.clientY - targetRect.top;\r\n  \r\n          idx += 13;\r\n  \r\n          if (++numTouches > 31) {\r\n            break;\r\n          }\r\n        }\r\n        HEAP32[(((touchEvent)+(8))>>2)] = numTouches;\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, touchEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: eventTypeString == 'touchstart' || eventTypeString == 'touchend',\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: touchEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  function _emscripten_set_touchcancel_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 25, \"touchcancel\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchend_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 23, \"touchend\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchmove_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 24, \"touchmove\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  function _emscripten_set_touchstart_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 22, \"touchstart\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function fillVisibilityChangeEventData(eventStruct) {\r\n      var visibilityStates = [ \"hidden\", \"visible\", \"prerender\", \"unloaded\" ];\r\n      var visibilityState = visibilityStates.indexOf(document.visibilityState);\r\n  \r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = document.hidden;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = visibilityState;\r\n    }\r\n  \r\n  \r\n  function registerVisibilityChangeEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.visibilityChangeEvent) JSEvents.visibilityChangeEvent = _malloc( 8 );\r\n  \r\n      var visibilityChangeEventHandlerFunc = function(e = event) {\r\n        var visibilityChangeEvent = JSEvents.visibilityChangeEvent;\r\n  \r\n        fillVisibilityChangeEventData(visibilityChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, visibilityChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: visibilityChangeEventHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  function _emscripten_set_visibilitychange_callback_on_thread(userData, useCapture, callbackfunc, targetThread) {\r\n      registerVisibilityChangeEventCallback(specialHTMLTargets[1], userData, useCapture, callbackfunc, 21, \"visibilitychange\", targetThread);\r\n      return 0;\r\n    }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  function registerWheelEventCallback(target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) {\r\n      if (!JSEvents.wheelEvent) JSEvents.wheelEvent = _malloc( 104 );\r\n  \r\n      // The DOM Level 3 events spec event 'wheel'\r\n      var wheelHandlerFunc = function(e = event) {\r\n        var wheelEvent = JSEvents.wheelEvent;\r\n        fillMouseEventData(wheelEvent, e, target);\r\n        HEAPF64[(((wheelEvent)+(72))>>3)] = e[\"deltaX\"];\r\n        HEAPF64[(((wheelEvent)+(80))>>3)] = e[\"deltaY\"];\r\n        HEAPF64[(((wheelEvent)+(88))>>3)] = e[\"deltaZ\"];\r\n        HEAP32[(((wheelEvent)+(96))>>2)] = e[\"deltaMode\"];\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, wheelEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: target,\r\n        allowsDeferredCalls: true,\r\n        eventTypeString: eventTypeString,\r\n        callbackfunc: callbackfunc,\r\n        handlerFunc: wheelHandlerFunc,\r\n        useCapture: useCapture\r\n      };\r\n      JSEvents.registerOrRemoveHandler(eventHandler);\r\n    }\r\n  \r\n  function _emscripten_set_wheel_callback_on_thread(target, userData, useCapture, callbackfunc, targetThread) {\r\n      target = findEventTarget(target);\r\n      if (typeof target.onwheel != 'undefined') {\r\n        registerWheelEventCallback(target, userData, useCapture, callbackfunc, 9, \"wheel\", targetThread);\r\n        return 0;\r\n      } else {\r\n        return -1;\r\n      }\r\n    }\r\n\r\n  \r\n  function _emscripten_set_window_title(title) {\r\n      setWindowTitle(UTF8ToString(title));\r\n    }\r\n\r\n  function _emscripten_sleep(ms) {\r\n      // emscripten_sleep() does not return a value, but we still need a |return|\r\n      // here for stack switching support (ASYNCIFY=2). In that mode this function\r\n      // returns a Promise instead of nothing, and that Promise is what tells the\r\n      // wasm VM to pause the stack.\r\n      return Asyncify.handleSleep((wakeUp) => safeSetTimeout(wakeUp, ms));\r\n    }\r\n  _emscripten_sleep.isAsync = true;\r\n\r\n  var ENV = {};\r\n  \r\n  function getExecutableName() {\r\n      return thisProgram || './this.program';\r\n    }\r\n  function getEnvStrings() {\r\n      if (!getEnvStrings.strings) {\r\n        // Default values.\r\n        // Browser language detection #8751\r\n        var lang = ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\r\n        var env = {\r\n          'USER': 'web_user',\r\n          'LOGNAME': 'web_user',\r\n          'PATH': '/',\r\n          'PWD': '/',\r\n          'HOME': '/home/web_user',\r\n          'LANG': lang,\r\n          '_': getExecutableName()\r\n        };\r\n        // Apply the user-provided values, if any.\r\n        for (var x in ENV) {\r\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\r\n          // explicitly set to be so. We allow user code to do that to\r\n          // force variables with default values to remain unset.\r\n          if (ENV[x] === undefined) delete env[x];\r\n          else env[x] = ENV[x];\r\n        }\r\n        var strings = [];\r\n        for (var x in env) {\r\n          strings.push(x + '=' + env[x]);\r\n        }\r\n        getEnvStrings.strings = strings;\r\n      }\r\n      return getEnvStrings.strings;\r\n    }\r\n  \r\n  function stringToAscii(str, buffer) {\r\n      for (var i = 0; i < str.length; ++i) {\r\n        HEAP8[((buffer++)>>0)] = str.charCodeAt(i);\r\n      }\r\n      // Null-terminate the string\r\n      HEAP8[((buffer)>>0)] = 0;\r\n    }\r\n  \r\n  function _environ_get(__environ, environ_buf) {\r\n      var bufSize = 0;\r\n      getEnvStrings().forEach(function(string, i) {\r\n        var ptr = environ_buf + bufSize;\r\n        HEAPU32[(((__environ)+(i*4))>>2)] = ptr;\r\n        stringToAscii(string, ptr);\r\n        bufSize += string.length + 1;\r\n      });\r\n      return 0;\r\n    }\r\n\r\n  \r\n  function _environ_sizes_get(penviron_count, penviron_buf_size) {\r\n      var strings = getEnvStrings();\r\n      HEAPU32[((penviron_count)>>2)] = strings.length;\r\n      var bufSize = 0;\r\n      strings.forEach(function(string) {\r\n        bufSize += string.length + 1;\r\n      });\r\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\r\n      return 0;\r\n    }\r\n\r\n\r\n  function _fd_close(fd) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.close(stream);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  function _fd_fdstat_get(fd, pbuf) {\r\n  try {\r\n  \r\n      var rightsBase = 0;\r\n      var rightsInheriting = 0;\r\n      var flags = 0;\r\n      {\r\n        var stream = SYSCALLS.getStreamFromFD(fd);\r\n        // All character devices are terminals (other things a Linux system would\r\n        // assume is a character device, like the mouse, we have special APIs for).\r\n        var type = stream.tty ? 2 :\r\n                   FS.isDir(stream.mode) ? 3 :\r\n                   FS.isLink(stream.mode) ? 7 :\r\n                   4;\r\n      }\r\n      HEAP8[((pbuf)>>0)] = type;\r\n      HEAP16[(((pbuf)+(2))>>1)] = flags;\r\n      (tempI64 = [rightsBase>>>0,(tempDouble=rightsBase,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(8))>>2)] = tempI64[0],HEAP32[(((pbuf)+(12))>>2)] = tempI64[1]);\r\n      (tempI64 = [rightsInheriting>>>0,(tempDouble=rightsInheriting,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(16))>>2)] = tempI64[0],HEAP32[(((pbuf)+(20))>>2)] = tempI64[1]);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  function doReadv(stream, iov, iovcnt, offset) {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.read(stream, HEAP8,ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (curr < len) break; // nothing more to read\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n  \r\n  function _fd_read(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doReadv(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\r\n  try {\r\n  \r\n      var offset = convertI32PairToI53Checked(offset_low, offset_high); if (isNaN(offset)) return 61;\r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.llseek(stream, offset, whence);\r\n      (tempI64 = [stream.position>>>0,(tempDouble=stream.position,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((newOffset)>>2)] = tempI64[0],HEAP32[(((newOffset)+(4))>>2)] = tempI64[1]);\r\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  function doWritev(stream, iov, iovcnt, offset) {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.write(stream, HEAP8,ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    }\r\n  \r\n  function _fd_write(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doWritev(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n\r\n  \r\n  function arraySum(array, index) {\r\n      var sum = 0;\r\n      for (var i = 0; i <= index; sum += array[i++]) {\r\n        // no-op\r\n      }\r\n      return sum;\r\n    }\r\n  \r\n  \r\n  var MONTH_DAYS_LEAP = [31,29,31,30,31,30,31,31,30,31,30,31];\r\n  \r\n  var MONTH_DAYS_REGULAR = [31,28,31,30,31,30,31,31,30,31,30,31];\r\n  function addDays(date, days) {\r\n      var newDate = new Date(date.getTime());\r\n      while (days > 0) {\r\n        var leap = isLeapYear(newDate.getFullYear());\r\n        var currentMonth = newDate.getMonth();\r\n        var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\r\n  \r\n        if (days > daysInCurrentMonth-newDate.getDate()) {\r\n          // we spill over to next month\r\n          days -= (daysInCurrentMonth-newDate.getDate()+1);\r\n          newDate.setDate(1);\r\n          if (currentMonth < 11) {\r\n            newDate.setMonth(currentMonth+1)\r\n          } else {\r\n            newDate.setMonth(0);\r\n            newDate.setFullYear(newDate.getFullYear()+1);\r\n          }\r\n        } else {\r\n          // we stay in current month\r\n          newDate.setDate(newDate.getDate()+days);\r\n          return newDate;\r\n        }\r\n      }\r\n  \r\n      return newDate;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  function writeArrayToMemory(array, buffer) {\r\n      HEAP8.set(array, buffer);\r\n    }\r\n  \r\n  function _strftime(s, maxsize, format, tm) {\r\n      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);\r\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html\r\n  \r\n      var tm_zone = HEAP32[(((tm)+(40))>>2)];\r\n  \r\n      var date = {\r\n        tm_sec: HEAP32[((tm)>>2)],\r\n        tm_min: HEAP32[(((tm)+(4))>>2)],\r\n        tm_hour: HEAP32[(((tm)+(8))>>2)],\r\n        tm_mday: HEAP32[(((tm)+(12))>>2)],\r\n        tm_mon: HEAP32[(((tm)+(16))>>2)],\r\n        tm_year: HEAP32[(((tm)+(20))>>2)],\r\n        tm_wday: HEAP32[(((tm)+(24))>>2)],\r\n        tm_yday: HEAP32[(((tm)+(28))>>2)],\r\n        tm_isdst: HEAP32[(((tm)+(32))>>2)],\r\n        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],\r\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''\r\n      };\r\n  \r\n      var pattern = UTF8ToString(format);\r\n  \r\n      // expand format\r\n      var EXPANSION_RULES_1 = {\r\n        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013\r\n        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y\r\n        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d\r\n        '%h': '%b',                       // Equivalent to %b\r\n        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation\r\n        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation\r\n        '%T': '%H:%M:%S',                 // Replaced by the time\r\n        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation\r\n        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate time representation\r\n        // Modified Conversion Specifiers\r\n        '%Ec': '%c',                      // Replaced by the locale's alternative appropriate date and time representation.\r\n        '%EC': '%C',                      // Replaced by the name of the base year (period) in the locale's alternative representation.\r\n        '%Ex': '%m/%d/%y',                // Replaced by the locale's alternative date representation.\r\n        '%EX': '%H:%M:%S',                // Replaced by the locale's alternative time representation.\r\n        '%Ey': '%y',                      // Replaced by the offset from %EC (year only) in the locale's alternative representation.\r\n        '%EY': '%Y',                      // Replaced by the full alternative year representation.\r\n        '%Od': '%d',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.\r\n        '%Oe': '%e',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.\r\n        '%OH': '%H',                      // Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.\r\n        '%OI': '%I',                      // Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.\r\n        '%Om': '%m',                      // Replaced by the month using the locale's alternative numeric symbols.\r\n        '%OM': '%M',                      // Replaced by the minutes using the locale's alternative numeric symbols.\r\n        '%OS': '%S',                      // Replaced by the seconds using the locale's alternative numeric symbols.\r\n        '%Ou': '%u',                      // Replaced by the weekday as a number in the locale's alternative representation (Monday=1).\r\n        '%OU': '%U',                      // Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.\r\n        '%OV': '%V',                      // Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.\r\n        '%Ow': '%w',                      // Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.\r\n        '%OW': '%W',                      // Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.\r\n        '%Oy': '%y',                      // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.\r\n      };\r\n      for (var rule in EXPANSION_RULES_1) {\r\n        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\r\n      }\r\n  \r\n      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  \r\n      function leadingSomething(value, digits, character) {\r\n        var str = typeof value == 'number' ? value.toString() : (value || '');\r\n        while (str.length < digits) {\r\n          str = character[0]+str;\r\n        }\r\n        return str;\r\n      }\r\n  \r\n      function leadingNulls(value, digits) {\r\n        return leadingSomething(value, digits, '0');\r\n      }\r\n  \r\n      function compareByDay(date1, date2) {\r\n        function sgn(value) {\r\n          return value < 0 ? -1 : (value > 0 ? 1 : 0);\r\n        }\r\n  \r\n        var compare;\r\n        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {\r\n          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {\r\n            compare = sgn(date1.getDate()-date2.getDate());\r\n          }\r\n        }\r\n        return compare;\r\n      }\r\n  \r\n      function getFirstWeekStartDate(janFourth) {\r\n          switch (janFourth.getDay()) {\r\n            case 0: // Sunday\r\n              return new Date(janFourth.getFullYear()-1, 11, 29);\r\n            case 1: // Monday\r\n              return janFourth;\r\n            case 2: // Tuesday\r\n              return new Date(janFourth.getFullYear(), 0, 3);\r\n            case 3: // Wednesday\r\n              return new Date(janFourth.getFullYear(), 0, 2);\r\n            case 4: // Thursday\r\n              return new Date(janFourth.getFullYear(), 0, 1);\r\n            case 5: // Friday\r\n              return new Date(janFourth.getFullYear()-1, 11, 31);\r\n            case 6: // Saturday\r\n              return new Date(janFourth.getFullYear()-1, 11, 30);\r\n          }\r\n      }\r\n  \r\n      function getWeekBasedYear(date) {\r\n          var thisDate = addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);\r\n  \r\n          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\r\n          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);\r\n  \r\n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\r\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\r\n  \r\n          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\r\n            // this date is after the start of the first week of this year\r\n            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\r\n              return thisDate.getFullYear()+1;\r\n            }\r\n            return thisDate.getFullYear();\r\n          }\r\n          return thisDate.getFullYear()-1;\r\n      }\r\n  \r\n      var EXPANSION_RULES_2 = {\r\n        '%a': function(date) {\r\n          return WEEKDAYS[date.tm_wday].substring(0,3);\r\n        },\r\n        '%A': function(date) {\r\n          return WEEKDAYS[date.tm_wday];\r\n        },\r\n        '%b': function(date) {\r\n          return MONTHS[date.tm_mon].substring(0,3);\r\n        },\r\n        '%B': function(date) {\r\n          return MONTHS[date.tm_mon];\r\n        },\r\n        '%C': function(date) {\r\n          var year = date.tm_year+1900;\r\n          return leadingNulls((year/100)|0,2);\r\n        },\r\n        '%d': function(date) {\r\n          return leadingNulls(date.tm_mday, 2);\r\n        },\r\n        '%e': function(date) {\r\n          return leadingSomething(date.tm_mday, 2, ' ');\r\n        },\r\n        '%g': function(date) {\r\n          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.\r\n          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes\r\n          // January 4th, which is also the week that includes the first Thursday of the year, and\r\n          // is also the first week that contains at least four days in the year.\r\n          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of\r\n          // the last week of the preceding year; thus, for Saturday 2nd January 1999,\r\n          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,\r\n          // or 31st is a Monday, it and any following days are part of week 1 of the following year.\r\n          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.\r\n  \r\n          return getWeekBasedYear(date).toString().substring(2);\r\n        },\r\n        '%G': function(date) {\r\n          return getWeekBasedYear(date);\r\n        },\r\n        '%H': function(date) {\r\n          return leadingNulls(date.tm_hour, 2);\r\n        },\r\n        '%I': function(date) {\r\n          var twelveHour = date.tm_hour;\r\n          if (twelveHour == 0) twelveHour = 12;\r\n          else if (twelveHour > 12) twelveHour -= 12;\r\n          return leadingNulls(twelveHour, 2);\r\n        },\r\n        '%j': function(date) {\r\n          // Day of the year (001-366)\r\n          return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year+1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon-1), 3);\r\n        },\r\n        '%m': function(date) {\r\n          return leadingNulls(date.tm_mon+1, 2);\r\n        },\r\n        '%M': function(date) {\r\n          return leadingNulls(date.tm_min, 2);\r\n        },\r\n        '%n': function() {\r\n          return '\\n';\r\n        },\r\n        '%p': function(date) {\r\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\r\n            return 'AM';\r\n          }\r\n          return 'PM';\r\n        },\r\n        '%S': function(date) {\r\n          return leadingNulls(date.tm_sec, 2);\r\n        },\r\n        '%t': function() {\r\n          return '\\t';\r\n        },\r\n        '%u': function(date) {\r\n          return date.tm_wday || 7;\r\n        },\r\n        '%U': function(date) {\r\n          var days = date.tm_yday + 7 - date.tm_wday;\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%V': function(date) {\r\n          // Replaced by the week number of the year (Monday as the first day of the week)\r\n          // as a decimal number [01,53]. If the week containing 1 January has four\r\n          // or more days in the new year, then it is considered week 1.\r\n          // Otherwise, it is the last week of the previous year, and the next week is week 1.\r\n          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]\r\n          var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7 ) / 7);\r\n          // If 1 Jan is just 1-3 days past Monday, the previous week\r\n          // is also in this year.\r\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\r\n            val++;\r\n          }\r\n          if (!val) {\r\n            val = 52;\r\n            // If 31 December of prev year a Thursday, or Friday of a\r\n            // leap year, then the prev year has 53 weeks.\r\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\r\n            if (dec31 == 4 || (dec31 == 5 && isLeapYear(date.tm_year%400-1))) {\r\n              val++;\r\n            }\r\n          } else if (val == 53) {\r\n            // If 1 January is not a Thursday, and not a Wednesday of a\r\n            // leap year, then this year has only 52 weeks.\r\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\r\n            if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year)))\r\n              val = 1;\r\n          }\r\n          return leadingNulls(val, 2);\r\n        },\r\n        '%w': function(date) {\r\n          return date.tm_wday;\r\n        },\r\n        '%W': function(date) {\r\n          var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%y': function(date) {\r\n          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]\r\n          return (date.tm_year+1900).toString().substring(2);\r\n        },\r\n        '%Y': function(date) {\r\n          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]\r\n          return date.tm_year+1900;\r\n        },\r\n        '%z': function(date) {\r\n          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).\r\n          // For example, \"-0430\" means 4 hours 30 minutes behind UTC (west of Greenwich).\r\n          var off = date.tm_gmtoff;\r\n          var ahead = off >= 0;\r\n          off = Math.abs(off) / 60;\r\n          // convert from minutes into hhmm format (which means 60 minutes = 100 units)\r\n          off = (off / 60)*100 + (off % 60);\r\n          return (ahead ? '+' : '-') + String(\"0000\" + off).slice(-4);\r\n        },\r\n        '%Z': function(date) {\r\n          return date.tm_zone;\r\n        },\r\n        '%%': function() {\r\n          return '%';\r\n        }\r\n      };\r\n  \r\n      // Replace %% with a pair of NULLs (which cannot occur in a C string), then\r\n      // re-inject them after processing.\r\n      pattern = pattern.replace(/%%/g, '\\0\\0')\r\n      for (var rule in EXPANSION_RULES_2) {\r\n        if (pattern.includes(rule)) {\r\n          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\r\n        }\r\n      }\r\n      pattern = pattern.replace(/\\0\\0/g, '%')\r\n  \r\n      var bytes = intArrayFromString(pattern, false);\r\n      if (bytes.length > maxsize) {\r\n        return 0;\r\n      }\r\n  \r\n      writeArrayToMemory(bytes, s);\r\n      return bytes.length-1;\r\n    }\r\n\r\n  function _strftime_l(s, maxsize, format, tm, loc) {\r\n      return _strftime(s, maxsize, format, tm); // no locale support yet\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  function runAndAbortIfError(func) {\r\n      try {\r\n        return func();\r\n      } catch (e) {\r\n        abort(e);\r\n      }\r\n    }\r\n  \r\n  \r\n  function sigToWasmTypes(sig) {\r\n      var typeNames = {\r\n        'i': 'i32',\r\n        // i64 values will be split into two i32s.\r\n        'j': 'i32',\r\n        'f': 'f32',\r\n        'd': 'f64',\r\n        'p': 'i32',\r\n      };\r\n      var type = {\r\n        parameters: [],\r\n        results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]\r\n      };\r\n      for (var i = 1; i < sig.length; ++i) {\r\n        type.parameters.push(typeNames[sig[i]]);\r\n        if (sig[i] === 'j') {\r\n          type.parameters.push('i32');\r\n        }\r\n      }\r\n      return type;\r\n    }\r\n  \r\n  function runtimeKeepalivePush() {\r\n      runtimeKeepaliveCounter += 1;\r\n    }\r\n  \r\n  function runtimeKeepalivePop() {\r\n      runtimeKeepaliveCounter -= 1;\r\n    }\r\n  \r\n  \r\n  var Asyncify = {instrumentWasmImports:function(imports) {\r\n        var ASYNCIFY_IMPORTS = [\"invoke_*\",\"fd_sync\",\"__wasi_fd_sync\",\"__asyncjs__*\",\"emscripten_idb_load\",\"emscripten_idb_store\",\"emscripten_idb_delete\",\"emscripten_idb_exists\",\"emscripten_idb_load_blob\",\"emscripten_idb_store_blob\",\"emscripten_sleep\",\"emscripten_wget\",\"emscripten_wget_data\",\"emscripten_scan_registers\",\"emscripten_lazy_load_code\",\"_load_secondary_module\",\"emscripten_fiber_swap\"];\r\n        for (var x in imports) {\r\n          (function(x) {\r\n            var original = imports[x];\r\n            var sig = original.sig;\r\n            if (typeof original == 'function') {\r\n              var isAsyncifyImport = original.isAsync ||\r\n                                     ASYNCIFY_IMPORTS.indexOf(x) >= 0 ||\r\n                                     x.startsWith('__asyncjs__');\r\n            }\r\n          })(x);\r\n        }\r\n      },instrumentWasmExports:function(exports) {\r\n        var ret = {};\r\n        for (var x in exports) {\r\n          (function(x) {\r\n            var original = exports[x];\r\n            if (typeof original == 'function') {\r\n              ret[x] = function() {\r\n                Asyncify.exportCallStack.push(x);\r\n                try {\r\n                  return original.apply(null, arguments);\r\n                } finally {\r\n                  if (!ABORT) {\r\n                    var y = Asyncify.exportCallStack.pop();\r\n                    assert(y === x);\r\n                    Asyncify.maybeStopUnwind();\r\n                  }\r\n                }\r\n              };\r\n            } else {\r\n              ret[x] = original;\r\n            }\r\n          })(x);\r\n        }\r\n        return ret;\r\n      },State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:4096,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId:function(funcName) {\r\n        var id = Asyncify.callStackNameToId[funcName];\r\n        if (id === undefined) {\r\n          id = Asyncify.callStackId++;\r\n          Asyncify.callStackNameToId[funcName] = id;\r\n          Asyncify.callStackIdToName[id] = funcName;\r\n        }\r\n        return id;\r\n      },maybeStopUnwind:function() {\r\n        if (Asyncify.currData &&\r\n            Asyncify.state === Asyncify.State.Unwinding &&\r\n            Asyncify.exportCallStack.length === 0) {\r\n          // We just finished unwinding.\r\n          // Be sure to set the state before calling any other functions to avoid\r\n          // possible infinite recursion here (For example in debug pthread builds\r\n          // the dbg() function itself can call back into WebAssembly to get the\r\n          // current pthread_self() pointer).\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          \r\n          // Keep the runtime alive so that a re-wind can be done later.\r\n          runAndAbortIfError(_asyncify_stop_unwind);\r\n          if (typeof Fibers != 'undefined') {\r\n            Fibers.trampoline();\r\n          }\r\n        }\r\n      },whenDone:function() {\r\n        return new Promise((resolve, reject) => {\r\n          Asyncify.asyncPromiseHandlers = {\r\n            resolve: resolve,\r\n            reject: reject\r\n          };\r\n        });\r\n      },allocateData:function() {\r\n        // An asyncify data structure has three fields:\r\n        //  0  current stack pos\r\n        //  4  max stack pos\r\n        //  8  id of function at bottom of the call stack (callStackIdToName[id] == name of js function)\r\n        //\r\n        // The Asyncify ABI only interprets the first two fields, the rest is for the runtime.\r\n        // We also embed a stack in the same memory region here, right next to the structure.\r\n        // This struct is also defined as asyncify_data_t in emscripten/fiber.h\r\n        var ptr = _malloc(12 + Asyncify.StackSize);\r\n        Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\r\n        Asyncify.setDataRewindFunc(ptr);\r\n        return ptr;\r\n      },setDataHeader:function(ptr, stack, stackSize) {\r\n        HEAP32[((ptr)>>2)] = stack;\r\n        HEAP32[(((ptr)+(4))>>2)] = stack + stackSize;\r\n      },setDataRewindFunc:function(ptr) {\r\n        var bottomOfCallStack = Asyncify.exportCallStack[0];\r\n        var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\r\n        HEAP32[(((ptr)+(8))>>2)] = rewindId;\r\n      },getDataRewindFunc:function(ptr) {\r\n        var id = HEAP32[(((ptr)+(8))>>2)];\r\n        var name = Asyncify.callStackIdToName[id];\r\n        var func = Module['asm'][name];\r\n        return func;\r\n      },doRewind:function(ptr) {\r\n        var start = Asyncify.getDataRewindFunc(ptr);\r\n        // Once we have rewound and the stack we no longer need to artificially\r\n        // keep the runtime alive.\r\n        \r\n        return start();\r\n      },handleSleep:function(startAsync) {\r\n        if (ABORT) return;\r\n        if (Asyncify.state === Asyncify.State.Normal) {\r\n          // Prepare to sleep. Call startAsync, and see what happens:\r\n          // if the code decided to call our callback synchronously,\r\n          // then no async operation was in fact begun, and we don't\r\n          // need to do anything.\r\n          var reachedCallback = false;\r\n          var reachedAfterCallback = false;\r\n          startAsync((handleSleepReturnValue = 0) => {\r\n            if (ABORT) return;\r\n            Asyncify.handleSleepReturnValue = handleSleepReturnValue;\r\n            reachedCallback = true;\r\n            if (!reachedAfterCallback) {\r\n              // We are happening synchronously, so no need for async.\r\n              return;\r\n            }\r\n            Asyncify.state = Asyncify.State.Rewinding;\r\n            runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.resume();\r\n            }\r\n            var asyncWasmReturnValue, isError = false;\r\n            try {\r\n              asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\r\n            } catch (err) {\r\n              asyncWasmReturnValue = err;\r\n              isError = true;\r\n            }\r\n            // Track whether the return value was handled by any promise handlers.\r\n            var handled = false;\r\n            if (!Asyncify.currData) {\r\n              // All asynchronous execution has finished.\r\n              // `asyncWasmReturnValue` now contains the final\r\n              // return value of the exported async WASM function.\r\n              //\r\n              // Note: `asyncWasmReturnValue` is distinct from\r\n              // `Asyncify.handleSleepReturnValue`.\r\n              // `Asyncify.handleSleepReturnValue` contains the return\r\n              // value of the last C function to have executed\r\n              // `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`\r\n              // contains the return value of the exported WASM function\r\n              // that may have called C functions that\r\n              // call `Asyncify.handleSleep()`.\r\n              var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\r\n              if (asyncPromiseHandlers) {\r\n                Asyncify.asyncPromiseHandlers = null;\r\n                (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\r\n                handled = true;\r\n              }\r\n            }\r\n            if (isError && !handled) {\r\n              // If there was an error and it was not handled by now, we have no choice but to\r\n              // rethrow that error into the global scope where it can be caught only by\r\n              // `onerror` or `onunhandledpromiserejection`.\r\n              throw asyncWasmReturnValue;\r\n            }\r\n          });\r\n          reachedAfterCallback = true;\r\n          if (!reachedCallback) {\r\n            // A true async operation was begun; start a sleep.\r\n            Asyncify.state = Asyncify.State.Unwinding;\r\n            // TODO: reuse, don't alloc/free every sleep\r\n            Asyncify.currData = Asyncify.allocateData();\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.pause();\r\n            }\r\n            runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\r\n          }\r\n        } else if (Asyncify.state === Asyncify.State.Rewinding) {\r\n          // Stop a resume.\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          runAndAbortIfError(_asyncify_stop_rewind);\r\n          _free(Asyncify.currData);\r\n          Asyncify.currData = null;\r\n          // Call all sleep callbacks now that the sleep-resume is all done.\r\n          Asyncify.sleepCallbacks.forEach((func) => callUserCallback(func));\r\n        } else {\r\n          abort('invalid state: ' + Asyncify.state);\r\n        }\r\n        return Asyncify.handleSleepReturnValue;\r\n      },handleAsync:function(startAsync) {\r\n        return Asyncify.handleSleep((wakeUp) => {\r\n          // TODO: add error handling as a second param when handleSleep implements it.\r\n          startAsync().then(wakeUp);\r\n        });\r\n      }};\r\n\r\n\r\n  var FSNode = /** @constructor */ function(parent, name, mode, rdev) {\r\n    if (!parent) {\r\n      parent = this;  // root node sets parent to itself\r\n    }\r\n    this.parent = parent;\r\n    this.mount = parent.mount;\r\n    this.mounted = null;\r\n    this.id = FS.nextInode++;\r\n    this.name = name;\r\n    this.mode = mode;\r\n    this.node_ops = {};\r\n    this.stream_ops = {};\r\n    this.rdev = rdev;\r\n  };\r\n  var readMode = 292/*292*/ | 73/*73*/;\r\n  var writeMode = 146/*146*/;\r\n  Object.defineProperties(FSNode.prototype, {\r\n   read: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & readMode) === readMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= readMode : this.mode &= ~readMode;\r\n    }\r\n   },\r\n   write: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & writeMode) === writeMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= writeMode : this.mode &= ~writeMode;\r\n    }\r\n   },\r\n   isFolder: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isDir(this.mode);\r\n    }\r\n   },\r\n   isDevice: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isChrdev(this.mode);\r\n    }\r\n   }\r\n  });\r\n  FS.FSNode = FSNode;\r\n  FS.staticInit();Module[\"FS_createPath\"] = FS.createPath;Module[\"FS_createDataFile\"] = FS.createDataFile;Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;Module[\"FS_unlink\"] = FS.unlink;Module[\"FS_createLazyFile\"] = FS.createLazyFile;Module[\"FS_createDevice\"] = FS.createDevice;;\r\n\r\n      // exports\r\n      Module[\"requestFullscreen\"] = function Module_requestFullscreen(lockPointer, resizeCanvas) { Browser.requestFullscreen(lockPointer, resizeCanvas) };\r\n      Module[\"requestAnimationFrame\"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };\r\n      Module[\"setCanvasSize\"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };\r\n      Module[\"pauseMainLoop\"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };\r\n      Module[\"resumeMainLoop\"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };\r\n      Module[\"getUserMedia\"] = function Module_getUserMedia() { Browser.getUserMedia() };\r\n      Module[\"createContext\"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) };\r\n      var preloadedImages = {};\r\n      var preloadedAudios = {};;\r\nvar GLctx;;\r\nfor (var i = 0; i < 32; ++i) tempFixedLengthArray.push(new Array(i));;\r\nvar miniTempWebGLFloatBuffersStorage = new Float32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n  miniTempWebGLFloatBuffers[i] = miniTempWebGLFloatBuffersStorage.subarray(0, i+1);\r\n  }\r\n  ;\r\nvar miniTempWebGLIntBuffersStorage = new Int32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n  miniTempWebGLIntBuffers[i] = miniTempWebGLIntBuffersStorage.subarray(0, i+1);\r\n  }\r\n  ;\r\n// include: base64Utils.js\r\n// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149\r\n\r\n// This code was written by Tyler Akins and has been placed in the\r\n// public domain.  It would be nice if you left this header intact.\r\n// Base64 code from Tyler Akins -- http://rumkin.com\r\n\r\n/**\r\n * Decodes a base64 string.\r\n * @param {string} input The string to decode.\r\n */\r\nvar decodeBase64 = typeof atob == 'function' ? atob : function (input) {\r\n  var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\n  var output = '';\r\n  var chr1, chr2, chr3;\r\n  var enc1, enc2, enc3, enc4;\r\n  var i = 0;\r\n  // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\r\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\r\n  do {\r\n    enc1 = keyStr.indexOf(input.charAt(i++));\r\n    enc2 = keyStr.indexOf(input.charAt(i++));\r\n    enc3 = keyStr.indexOf(input.charAt(i++));\r\n    enc4 = keyStr.indexOf(input.charAt(i++));\r\n\r\n    chr1 = (enc1 << 2) | (enc2 >> 4);\r\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n    chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n    output = output + String.fromCharCode(chr1);\r\n\r\n    if (enc3 !== 64) {\r\n      output = output + String.fromCharCode(chr2);\r\n    }\r\n    if (enc4 !== 64) {\r\n      output = output + String.fromCharCode(chr3);\r\n    }\r\n  } while (i < input.length);\r\n  return output;\r\n};\r\n\r\n// Converts a string of base64 into a byte array.\r\n// Throws error on invalid input.\r\nfunction intArrayFromBase64(s) {\r\n\r\n  try {\r\n    var decoded = decodeBase64(s);\r\n    var bytes = new Uint8Array(decoded.length);\r\n    for (var i = 0 ; i < decoded.length ; ++i) {\r\n      bytes[i] = decoded.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n  } catch (_) {\r\n    throw new Error('Converting base64 string to bytes failed.');\r\n  }\r\n}\r\n\r\n// If filename is a base64 data URI, parses and returns data (Buffer on node,\r\n// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.\r\nfunction tryParseAsDataURI(filename) {\r\n  if (!isDataURI(filename)) {\r\n    return;\r\n  }\r\n\r\n  return intArrayFromBase64(filename.slice(dataURIPrefix.length));\r\n}\r\n\r\n\r\n// end include: base64Utils.js\r\nvar wasmImports = {\r\n  \"__cxa_throw\": ___cxa_throw,\r\n  \"__syscall_chmod\": ___syscall_chmod,\r\n  \"__syscall_fchmod\": ___syscall_fchmod,\r\n  \"__syscall_fcntl64\": ___syscall_fcntl64,\r\n  \"__syscall_fstat64\": ___syscall_fstat64,\r\n  \"__syscall_ftruncate64\": ___syscall_ftruncate64,\r\n  \"__syscall_getcwd\": ___syscall_getcwd,\r\n  \"__syscall_getdents64\": ___syscall_getdents64,\r\n  \"__syscall_ioctl\": ___syscall_ioctl,\r\n  \"__syscall_lstat64\": ___syscall_lstat64,\r\n  \"__syscall_mkdirat\": ___syscall_mkdirat,\r\n  \"__syscall_newfstatat\": ___syscall_newfstatat,\r\n  \"__syscall_openat\": ___syscall_openat,\r\n  \"__syscall_rmdir\": ___syscall_rmdir,\r\n  \"__syscall_stat64\": ___syscall_stat64,\r\n  \"__syscall_unlinkat\": ___syscall_unlinkat,\r\n  \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\r\n  \"_localtime_js\": __localtime_js,\r\n  \"_mktime_js\": __mktime_js,\r\n  \"_tzset_js\": __tzset_js,\r\n  \"abort\": _abort,\r\n  \"eglBindAPI\": _eglBindAPI,\r\n  \"eglChooseConfig\": _eglChooseConfig,\r\n  \"eglCreateContext\": _eglCreateContext,\r\n  \"eglCreateWindowSurface\": _eglCreateWindowSurface,\r\n  \"eglDestroyContext\": _eglDestroyContext,\r\n  \"eglDestroySurface\": _eglDestroySurface,\r\n  \"eglGetConfigAttrib\": _eglGetConfigAttrib,\r\n  \"eglGetDisplay\": _eglGetDisplay,\r\n  \"eglGetError\": _eglGetError,\r\n  \"eglInitialize\": _eglInitialize,\r\n  \"eglMakeCurrent\": _eglMakeCurrent,\r\n  \"eglQueryString\": _eglQueryString,\r\n  \"eglSwapBuffers\": _eglSwapBuffers,\r\n  \"eglSwapInterval\": _eglSwapInterval,\r\n  \"eglTerminate\": _eglTerminate,\r\n  \"eglWaitGL\": _eglWaitGL,\r\n  \"eglWaitNative\": _eglWaitNative,\r\n  \"emscripten_asm_const_int\": _emscripten_asm_const_int,\r\n  \"emscripten_asm_const_int_sync_on_main_thread\": _emscripten_asm_const_int_sync_on_main_thread,\r\n  \"emscripten_date_now\": _emscripten_date_now,\r\n  \"emscripten_enter_soft_fullscreen\": _emscripten_enter_soft_fullscreen,\r\n  \"emscripten_exit_fullscreen\": _emscripten_exit_fullscreen,\r\n  \"emscripten_exit_pointerlock\": _emscripten_exit_pointerlock,\r\n  \"emscripten_exit_soft_fullscreen\": _emscripten_exit_soft_fullscreen,\r\n  \"emscripten_get_device_pixel_ratio\": _emscripten_get_device_pixel_ratio,\r\n  \"emscripten_get_element_css_size\": _emscripten_get_element_css_size,\r\n  \"emscripten_get_gamepad_status\": _emscripten_get_gamepad_status,\r\n  \"emscripten_get_now\": _emscripten_get_now,\r\n  \"emscripten_get_num_gamepads\": _emscripten_get_num_gamepads,\r\n  \"emscripten_get_screen_size\": _emscripten_get_screen_size,\r\n  \"emscripten_glActiveTexture\": _emscripten_glActiveTexture,\r\n  \"emscripten_glAttachShader\": _emscripten_glAttachShader,\r\n  \"emscripten_glBeginQuery\": _emscripten_glBeginQuery,\r\n  \"emscripten_glBeginQueryEXT\": _emscripten_glBeginQueryEXT,\r\n  \"emscripten_glBeginTransformFeedback\": _emscripten_glBeginTransformFeedback,\r\n  \"emscripten_glBindAttribLocation\": _emscripten_glBindAttribLocation,\r\n  \"emscripten_glBindBuffer\": _emscripten_glBindBuffer,\r\n  \"emscripten_glBindBufferBase\": _emscripten_glBindBufferBase,\r\n  \"emscripten_glBindBufferRange\": _emscripten_glBindBufferRange,\r\n  \"emscripten_glBindFramebuffer\": _emscripten_glBindFramebuffer,\r\n  \"emscripten_glBindRenderbuffer\": _emscripten_glBindRenderbuffer,\r\n  \"emscripten_glBindSampler\": _emscripten_glBindSampler,\r\n  \"emscripten_glBindTexture\": _emscripten_glBindTexture,\r\n  \"emscripten_glBindTransformFeedback\": _emscripten_glBindTransformFeedback,\r\n  \"emscripten_glBindVertexArray\": _emscripten_glBindVertexArray,\r\n  \"emscripten_glBindVertexArrayOES\": _emscripten_glBindVertexArrayOES,\r\n  \"emscripten_glBlendColor\": _emscripten_glBlendColor,\r\n  \"emscripten_glBlendEquation\": _emscripten_glBlendEquation,\r\n  \"emscripten_glBlendEquationSeparate\": _emscripten_glBlendEquationSeparate,\r\n  \"emscripten_glBlendFunc\": _emscripten_glBlendFunc,\r\n  \"emscripten_glBlendFuncSeparate\": _emscripten_glBlendFuncSeparate,\r\n  \"emscripten_glBlitFramebuffer\": _emscripten_glBlitFramebuffer,\r\n  \"emscripten_glBufferData\": _emscripten_glBufferData,\r\n  \"emscripten_glBufferSubData\": _emscripten_glBufferSubData,\r\n  \"emscripten_glCheckFramebufferStatus\": _emscripten_glCheckFramebufferStatus,\r\n  \"emscripten_glClear\": _emscripten_glClear,\r\n  \"emscripten_glClearBufferfi\": _emscripten_glClearBufferfi,\r\n  \"emscripten_glClearBufferfv\": _emscripten_glClearBufferfv,\r\n  \"emscripten_glClearBufferiv\": _emscripten_glClearBufferiv,\r\n  \"emscripten_glClearBufferuiv\": _emscripten_glClearBufferuiv,\r\n  \"emscripten_glClearColor\": _emscripten_glClearColor,\r\n  \"emscripten_glClearDepthf\": _emscripten_glClearDepthf,\r\n  \"emscripten_glClearStencil\": _emscripten_glClearStencil,\r\n  \"emscripten_glClientWaitSync\": _emscripten_glClientWaitSync,\r\n  \"emscripten_glColorMask\": _emscripten_glColorMask,\r\n  \"emscripten_glCompileShader\": _emscripten_glCompileShader,\r\n  \"emscripten_glCompressedTexImage2D\": _emscripten_glCompressedTexImage2D,\r\n  \"emscripten_glCompressedTexImage3D\": _emscripten_glCompressedTexImage3D,\r\n  \"emscripten_glCompressedTexSubImage2D\": _emscripten_glCompressedTexSubImage2D,\r\n  \"emscripten_glCompressedTexSubImage3D\": _emscripten_glCompressedTexSubImage3D,\r\n  \"emscripten_glCopyBufferSubData\": _emscripten_glCopyBufferSubData,\r\n  \"emscripten_glCopyTexImage2D\": _emscripten_glCopyTexImage2D,\r\n  \"emscripten_glCopyTexSubImage2D\": _emscripten_glCopyTexSubImage2D,\r\n  \"emscripten_glCopyTexSubImage3D\": _emscripten_glCopyTexSubImage3D,\r\n  \"emscripten_glCreateProgram\": _emscripten_glCreateProgram,\r\n  \"emscripten_glCreateShader\": _emscripten_glCreateShader,\r\n  \"emscripten_glCullFace\": _emscripten_glCullFace,\r\n  \"emscripten_glDeleteBuffers\": _emscripten_glDeleteBuffers,\r\n  \"emscripten_glDeleteFramebuffers\": _emscripten_glDeleteFramebuffers,\r\n  \"emscripten_glDeleteProgram\": _emscripten_glDeleteProgram,\r\n  \"emscripten_glDeleteQueries\": _emscripten_glDeleteQueries,\r\n  \"emscripten_glDeleteQueriesEXT\": _emscripten_glDeleteQueriesEXT,\r\n  \"emscripten_glDeleteRenderbuffers\": _emscripten_glDeleteRenderbuffers,\r\n  \"emscripten_glDeleteSamplers\": _emscripten_glDeleteSamplers,\r\n  \"emscripten_glDeleteShader\": _emscripten_glDeleteShader,\r\n  \"emscripten_glDeleteSync\": _emscripten_glDeleteSync,\r\n  \"emscripten_glDeleteTextures\": _emscripten_glDeleteTextures,\r\n  \"emscripten_glDeleteTransformFeedbacks\": _emscripten_glDeleteTransformFeedbacks,\r\n  \"emscripten_glDeleteVertexArrays\": _emscripten_glDeleteVertexArrays,\r\n  \"emscripten_glDeleteVertexArraysOES\": _emscripten_glDeleteVertexArraysOES,\r\n  \"emscripten_glDepthFunc\": _emscripten_glDepthFunc,\r\n  \"emscripten_glDepthMask\": _emscripten_glDepthMask,\r\n  \"emscripten_glDepthRangef\": _emscripten_glDepthRangef,\r\n  \"emscripten_glDetachShader\": _emscripten_glDetachShader,\r\n  \"emscripten_glDisable\": _emscripten_glDisable,\r\n  \"emscripten_glDisableVertexAttribArray\": _emscripten_glDisableVertexAttribArray,\r\n  \"emscripten_glDrawArrays\": _emscripten_glDrawArrays,\r\n  \"emscripten_glDrawArraysInstanced\": _emscripten_glDrawArraysInstanced,\r\n  \"emscripten_glDrawArraysInstancedANGLE\": _emscripten_glDrawArraysInstancedANGLE,\r\n  \"emscripten_glDrawArraysInstancedARB\": _emscripten_glDrawArraysInstancedARB,\r\n  \"emscripten_glDrawArraysInstancedEXT\": _emscripten_glDrawArraysInstancedEXT,\r\n  \"emscripten_glDrawArraysInstancedNV\": _emscripten_glDrawArraysInstancedNV,\r\n  \"emscripten_glDrawBuffers\": _emscripten_glDrawBuffers,\r\n  \"emscripten_glDrawBuffersEXT\": _emscripten_glDrawBuffersEXT,\r\n  \"emscripten_glDrawBuffersWEBGL\": _emscripten_glDrawBuffersWEBGL,\r\n  \"emscripten_glDrawElements\": _emscripten_glDrawElements,\r\n  \"emscripten_glDrawElementsInstanced\": _emscripten_glDrawElementsInstanced,\r\n  \"emscripten_glDrawElementsInstancedANGLE\": _emscripten_glDrawElementsInstancedANGLE,\r\n  \"emscripten_glDrawElementsInstancedARB\": _emscripten_glDrawElementsInstancedARB,\r\n  \"emscripten_glDrawElementsInstancedEXT\": _emscripten_glDrawElementsInstancedEXT,\r\n  \"emscripten_glDrawElementsInstancedNV\": _emscripten_glDrawElementsInstancedNV,\r\n  \"emscripten_glDrawRangeElements\": _emscripten_glDrawRangeElements,\r\n  \"emscripten_glEnable\": _emscripten_glEnable,\r\n  \"emscripten_glEnableVertexAttribArray\": _emscripten_glEnableVertexAttribArray,\r\n  \"emscripten_glEndQuery\": _emscripten_glEndQuery,\r\n  \"emscripten_glEndQueryEXT\": _emscripten_glEndQueryEXT,\r\n  \"emscripten_glEndTransformFeedback\": _emscripten_glEndTransformFeedback,\r\n  \"emscripten_glFenceSync\": _emscripten_glFenceSync,\r\n  \"emscripten_glFinish\": _emscripten_glFinish,\r\n  \"emscripten_glFlush\": _emscripten_glFlush,\r\n  \"emscripten_glFramebufferRenderbuffer\": _emscripten_glFramebufferRenderbuffer,\r\n  \"emscripten_glFramebufferTexture2D\": _emscripten_glFramebufferTexture2D,\r\n  \"emscripten_glFramebufferTextureLayer\": _emscripten_glFramebufferTextureLayer,\r\n  \"emscripten_glFrontFace\": _emscripten_glFrontFace,\r\n  \"emscripten_glGenBuffers\": _emscripten_glGenBuffers,\r\n  \"emscripten_glGenFramebuffers\": _emscripten_glGenFramebuffers,\r\n  \"emscripten_glGenQueries\": _emscripten_glGenQueries,\r\n  \"emscripten_glGenQueriesEXT\": _emscripten_glGenQueriesEXT,\r\n  \"emscripten_glGenRenderbuffers\": _emscripten_glGenRenderbuffers,\r\n  \"emscripten_glGenSamplers\": _emscripten_glGenSamplers,\r\n  \"emscripten_glGenTextures\": _emscripten_glGenTextures,\r\n  \"emscripten_glGenTransformFeedbacks\": _emscripten_glGenTransformFeedbacks,\r\n  \"emscripten_glGenVertexArrays\": _emscripten_glGenVertexArrays,\r\n  \"emscripten_glGenVertexArraysOES\": _emscripten_glGenVertexArraysOES,\r\n  \"emscripten_glGenerateMipmap\": _emscripten_glGenerateMipmap,\r\n  \"emscripten_glGetActiveAttrib\": _emscripten_glGetActiveAttrib,\r\n  \"emscripten_glGetActiveUniform\": _emscripten_glGetActiveUniform,\r\n  \"emscripten_glGetActiveUniformBlockName\": _emscripten_glGetActiveUniformBlockName,\r\n  \"emscripten_glGetActiveUniformBlockiv\": _emscripten_glGetActiveUniformBlockiv,\r\n  \"emscripten_glGetActiveUniformsiv\": _emscripten_glGetActiveUniformsiv,\r\n  \"emscripten_glGetAttachedShaders\": _emscripten_glGetAttachedShaders,\r\n  \"emscripten_glGetAttribLocation\": _emscripten_glGetAttribLocation,\r\n  \"emscripten_glGetBooleanv\": _emscripten_glGetBooleanv,\r\n  \"emscripten_glGetBufferParameteri64v\": _emscripten_glGetBufferParameteri64v,\r\n  \"emscripten_glGetBufferParameteriv\": _emscripten_glGetBufferParameteriv,\r\n  \"emscripten_glGetError\": _emscripten_glGetError,\r\n  \"emscripten_glGetFloatv\": _emscripten_glGetFloatv,\r\n  \"emscripten_glGetFragDataLocation\": _emscripten_glGetFragDataLocation,\r\n  \"emscripten_glGetFramebufferAttachmentParameteriv\": _emscripten_glGetFramebufferAttachmentParameteriv,\r\n  \"emscripten_glGetInteger64i_v\": _emscripten_glGetInteger64i_v,\r\n  \"emscripten_glGetInteger64v\": _emscripten_glGetInteger64v,\r\n  \"emscripten_glGetIntegeri_v\": _emscripten_glGetIntegeri_v,\r\n  \"emscripten_glGetIntegerv\": _emscripten_glGetIntegerv,\r\n  \"emscripten_glGetInternalformativ\": _emscripten_glGetInternalformativ,\r\n  \"emscripten_glGetProgramBinary\": _emscripten_glGetProgramBinary,\r\n  \"emscripten_glGetProgramInfoLog\": _emscripten_glGetProgramInfoLog,\r\n  \"emscripten_glGetProgramiv\": _emscripten_glGetProgramiv,\r\n  \"emscripten_glGetQueryObjecti64vEXT\": _emscripten_glGetQueryObjecti64vEXT,\r\n  \"emscripten_glGetQueryObjectivEXT\": _emscripten_glGetQueryObjectivEXT,\r\n  \"emscripten_glGetQueryObjectui64vEXT\": _emscripten_glGetQueryObjectui64vEXT,\r\n  \"emscripten_glGetQueryObjectuiv\": _emscripten_glGetQueryObjectuiv,\r\n  \"emscripten_glGetQueryObjectuivEXT\": _emscripten_glGetQueryObjectuivEXT,\r\n  \"emscripten_glGetQueryiv\": _emscripten_glGetQueryiv,\r\n  \"emscripten_glGetQueryivEXT\": _emscripten_glGetQueryivEXT,\r\n  \"emscripten_glGetRenderbufferParameteriv\": _emscripten_glGetRenderbufferParameteriv,\r\n  \"emscripten_glGetSamplerParameterfv\": _emscripten_glGetSamplerParameterfv,\r\n  \"emscripten_glGetSamplerParameteriv\": _emscripten_glGetSamplerParameteriv,\r\n  \"emscripten_glGetShaderInfoLog\": _emscripten_glGetShaderInfoLog,\r\n  \"emscripten_glGetShaderPrecisionFormat\": _emscripten_glGetShaderPrecisionFormat,\r\n  \"emscripten_glGetShaderSource\": _emscripten_glGetShaderSource,\r\n  \"emscripten_glGetShaderiv\": _emscripten_glGetShaderiv,\r\n  \"emscripten_glGetString\": _emscripten_glGetString,\r\n  \"emscripten_glGetStringi\": _emscripten_glGetStringi,\r\n  \"emscripten_glGetSynciv\": _emscripten_glGetSynciv,\r\n  \"emscripten_glGetTexParameterfv\": _emscripten_glGetTexParameterfv,\r\n  \"emscripten_glGetTexParameteriv\": _emscripten_glGetTexParameteriv,\r\n  \"emscripten_glGetTransformFeedbackVarying\": _emscripten_glGetTransformFeedbackVarying,\r\n  \"emscripten_glGetUniformBlockIndex\": _emscripten_glGetUniformBlockIndex,\r\n  \"emscripten_glGetUniformIndices\": _emscripten_glGetUniformIndices,\r\n  \"emscripten_glGetUniformLocation\": _emscripten_glGetUniformLocation,\r\n  \"emscripten_glGetUniformfv\": _emscripten_glGetUniformfv,\r\n  \"emscripten_glGetUniformiv\": _emscripten_glGetUniformiv,\r\n  \"emscripten_glGetUniformuiv\": _emscripten_glGetUniformuiv,\r\n  \"emscripten_glGetVertexAttribIiv\": _emscripten_glGetVertexAttribIiv,\r\n  \"emscripten_glGetVertexAttribIuiv\": _emscripten_glGetVertexAttribIuiv,\r\n  \"emscripten_glGetVertexAttribPointerv\": _emscripten_glGetVertexAttribPointerv,\r\n  \"emscripten_glGetVertexAttribfv\": _emscripten_glGetVertexAttribfv,\r\n  \"emscripten_glGetVertexAttribiv\": _emscripten_glGetVertexAttribiv,\r\n  \"emscripten_glHint\": _emscripten_glHint,\r\n  \"emscripten_glInvalidateFramebuffer\": _emscripten_glInvalidateFramebuffer,\r\n  \"emscripten_glInvalidateSubFramebuffer\": _emscripten_glInvalidateSubFramebuffer,\r\n  \"emscripten_glIsBuffer\": _emscripten_glIsBuffer,\r\n  \"emscripten_glIsEnabled\": _emscripten_glIsEnabled,\r\n  \"emscripten_glIsFramebuffer\": _emscripten_glIsFramebuffer,\r\n  \"emscripten_glIsProgram\": _emscripten_glIsProgram,\r\n  \"emscripten_glIsQuery\": _emscripten_glIsQuery,\r\n  \"emscripten_glIsQueryEXT\": _emscripten_glIsQueryEXT,\r\n  \"emscripten_glIsRenderbuffer\": _emscripten_glIsRenderbuffer,\r\n  \"emscripten_glIsSampler\": _emscripten_glIsSampler,\r\n  \"emscripten_glIsShader\": _emscripten_glIsShader,\r\n  \"emscripten_glIsSync\": _emscripten_glIsSync,\r\n  \"emscripten_glIsTexture\": _emscripten_glIsTexture,\r\n  \"emscripten_glIsTransformFeedback\": _emscripten_glIsTransformFeedback,\r\n  \"emscripten_glIsVertexArray\": _emscripten_glIsVertexArray,\r\n  \"emscripten_glIsVertexArrayOES\": _emscripten_glIsVertexArrayOES,\r\n  \"emscripten_glLineWidth\": _emscripten_glLineWidth,\r\n  \"emscripten_glLinkProgram\": _emscripten_glLinkProgram,\r\n  \"emscripten_glPauseTransformFeedback\": _emscripten_glPauseTransformFeedback,\r\n  \"emscripten_glPixelStorei\": _emscripten_glPixelStorei,\r\n  \"emscripten_glPolygonOffset\": _emscripten_glPolygonOffset,\r\n  \"emscripten_glProgramBinary\": _emscripten_glProgramBinary,\r\n  \"emscripten_glProgramParameteri\": _emscripten_glProgramParameteri,\r\n  \"emscripten_glQueryCounterEXT\": _emscripten_glQueryCounterEXT,\r\n  \"emscripten_glReadBuffer\": _emscripten_glReadBuffer,\r\n  \"emscripten_glReadPixels\": _emscripten_glReadPixels,\r\n  \"emscripten_glReleaseShaderCompiler\": _emscripten_glReleaseShaderCompiler,\r\n  \"emscripten_glRenderbufferStorage\": _emscripten_glRenderbufferStorage,\r\n  \"emscripten_glRenderbufferStorageMultisample\": _emscripten_glRenderbufferStorageMultisample,\r\n  \"emscripten_glResumeTransformFeedback\": _emscripten_glResumeTransformFeedback,\r\n  \"emscripten_glSampleCoverage\": _emscripten_glSampleCoverage,\r\n  \"emscripten_glSamplerParameterf\": _emscripten_glSamplerParameterf,\r\n  \"emscripten_glSamplerParameterfv\": _emscripten_glSamplerParameterfv,\r\n  \"emscripten_glSamplerParameteri\": _emscripten_glSamplerParameteri,\r\n  \"emscripten_glSamplerParameteriv\": _emscripten_glSamplerParameteriv,\r\n  \"emscripten_glScissor\": _emscripten_glScissor,\r\n  \"emscripten_glShaderBinary\": _emscripten_glShaderBinary,\r\n  \"emscripten_glShaderSource\": _emscripten_glShaderSource,\r\n  \"emscripten_glStencilFunc\": _emscripten_glStencilFunc,\r\n  \"emscripten_glStencilFuncSeparate\": _emscripten_glStencilFuncSeparate,\r\n  \"emscripten_glStencilMask\": _emscripten_glStencilMask,\r\n  \"emscripten_glStencilMaskSeparate\": _emscripten_glStencilMaskSeparate,\r\n  \"emscripten_glStencilOp\": _emscripten_glStencilOp,\r\n  \"emscripten_glStencilOpSeparate\": _emscripten_glStencilOpSeparate,\r\n  \"emscripten_glTexImage2D\": _emscripten_glTexImage2D,\r\n  \"emscripten_glTexImage3D\": _emscripten_glTexImage3D,\r\n  \"emscripten_glTexParameterf\": _emscripten_glTexParameterf,\r\n  \"emscripten_glTexParameterfv\": _emscripten_glTexParameterfv,\r\n  \"emscripten_glTexParameteri\": _emscripten_glTexParameteri,\r\n  \"emscripten_glTexParameteriv\": _emscripten_glTexParameteriv,\r\n  \"emscripten_glTexStorage2D\": _emscripten_glTexStorage2D,\r\n  \"emscripten_glTexStorage3D\": _emscripten_glTexStorage3D,\r\n  \"emscripten_glTexSubImage2D\": _emscripten_glTexSubImage2D,\r\n  \"emscripten_glTexSubImage3D\": _emscripten_glTexSubImage3D,\r\n  \"emscripten_glTransformFeedbackVaryings\": _emscripten_glTransformFeedbackVaryings,\r\n  \"emscripten_glUniform1f\": _emscripten_glUniform1f,\r\n  \"emscripten_glUniform1fv\": _emscripten_glUniform1fv,\r\n  \"emscripten_glUniform1i\": _emscripten_glUniform1i,\r\n  \"emscripten_glUniform1iv\": _emscripten_glUniform1iv,\r\n  \"emscripten_glUniform1ui\": _emscripten_glUniform1ui,\r\n  \"emscripten_glUniform1uiv\": _emscripten_glUniform1uiv,\r\n  \"emscripten_glUniform2f\": _emscripten_glUniform2f,\r\n  \"emscripten_glUniform2fv\": _emscripten_glUniform2fv,\r\n  \"emscripten_glUniform2i\": _emscripten_glUniform2i,\r\n  \"emscripten_glUniform2iv\": _emscripten_glUniform2iv,\r\n  \"emscripten_glUniform2ui\": _emscripten_glUniform2ui,\r\n  \"emscripten_glUniform2uiv\": _emscripten_glUniform2uiv,\r\n  \"emscripten_glUniform3f\": _emscripten_glUniform3f,\r\n  \"emscripten_glUniform3fv\": _emscripten_glUniform3fv,\r\n  \"emscripten_glUniform3i\": _emscripten_glUniform3i,\r\n  \"emscripten_glUniform3iv\": _emscripten_glUniform3iv,\r\n  \"emscripten_glUniform3ui\": _emscripten_glUniform3ui,\r\n  \"emscripten_glUniform3uiv\": _emscripten_glUniform3uiv,\r\n  \"emscripten_glUniform4f\": _emscripten_glUniform4f,\r\n  \"emscripten_glUniform4fv\": _emscripten_glUniform4fv,\r\n  \"emscripten_glUniform4i\": _emscripten_glUniform4i,\r\n  \"emscripten_glUniform4iv\": _emscripten_glUniform4iv,\r\n  \"emscripten_glUniform4ui\": _emscripten_glUniform4ui,\r\n  \"emscripten_glUniform4uiv\": _emscripten_glUniform4uiv,\r\n  \"emscripten_glUniformBlockBinding\": _emscripten_glUniformBlockBinding,\r\n  \"emscripten_glUniformMatrix2fv\": _emscripten_glUniformMatrix2fv,\r\n  \"emscripten_glUniformMatrix2x3fv\": _emscripten_glUniformMatrix2x3fv,\r\n  \"emscripten_glUniformMatrix2x4fv\": _emscripten_glUniformMatrix2x4fv,\r\n  \"emscripten_glUniformMatrix3fv\": _emscripten_glUniformMatrix3fv,\r\n  \"emscripten_glUniformMatrix3x2fv\": _emscripten_glUniformMatrix3x2fv,\r\n  \"emscripten_glUniformMatrix3x4fv\": _emscripten_glUniformMatrix3x4fv,\r\n  \"emscripten_glUniformMatrix4fv\": _emscripten_glUniformMatrix4fv,\r\n  \"emscripten_glUniformMatrix4x2fv\": _emscripten_glUniformMatrix4x2fv,\r\n  \"emscripten_glUniformMatrix4x3fv\": _emscripten_glUniformMatrix4x3fv,\r\n  \"emscripten_glUseProgram\": _emscripten_glUseProgram,\r\n  \"emscripten_glValidateProgram\": _emscripten_glValidateProgram,\r\n  \"emscripten_glVertexAttrib1f\": _emscripten_glVertexAttrib1f,\r\n  \"emscripten_glVertexAttrib1fv\": _emscripten_glVertexAttrib1fv,\r\n  \"emscripten_glVertexAttrib2f\": _emscripten_glVertexAttrib2f,\r\n  \"emscripten_glVertexAttrib2fv\": _emscripten_glVertexAttrib2fv,\r\n  \"emscripten_glVertexAttrib3f\": _emscripten_glVertexAttrib3f,\r\n  \"emscripten_glVertexAttrib3fv\": _emscripten_glVertexAttrib3fv,\r\n  \"emscripten_glVertexAttrib4f\": _emscripten_glVertexAttrib4f,\r\n  \"emscripten_glVertexAttrib4fv\": _emscripten_glVertexAttrib4fv,\r\n  \"emscripten_glVertexAttribDivisor\": _emscripten_glVertexAttribDivisor,\r\n  \"emscripten_glVertexAttribDivisorANGLE\": _emscripten_glVertexAttribDivisorANGLE,\r\n  \"emscripten_glVertexAttribDivisorARB\": _emscripten_glVertexAttribDivisorARB,\r\n  \"emscripten_glVertexAttribDivisorEXT\": _emscripten_glVertexAttribDivisorEXT,\r\n  \"emscripten_glVertexAttribDivisorNV\": _emscripten_glVertexAttribDivisorNV,\r\n  \"emscripten_glVertexAttribI4i\": _emscripten_glVertexAttribI4i,\r\n  \"emscripten_glVertexAttribI4iv\": _emscripten_glVertexAttribI4iv,\r\n  \"emscripten_glVertexAttribI4ui\": _emscripten_glVertexAttribI4ui,\r\n  \"emscripten_glVertexAttribI4uiv\": _emscripten_glVertexAttribI4uiv,\r\n  \"emscripten_glVertexAttribIPointer\": _emscripten_glVertexAttribIPointer,\r\n  \"emscripten_glVertexAttribPointer\": _emscripten_glVertexAttribPointer,\r\n  \"emscripten_glViewport\": _emscripten_glViewport,\r\n  \"emscripten_glWaitSync\": _emscripten_glWaitSync,\r\n  \"emscripten_has_asyncify\": _emscripten_has_asyncify,\r\n  \"emscripten_memcpy_big\": _emscripten_memcpy_big,\r\n  \"emscripten_request_fullscreen_strategy\": _emscripten_request_fullscreen_strategy,\r\n  \"emscripten_request_pointerlock\": _emscripten_request_pointerlock,\r\n  \"emscripten_resize_heap\": _emscripten_resize_heap,\r\n  \"emscripten_sample_gamepad_data\": _emscripten_sample_gamepad_data,\r\n  \"emscripten_set_beforeunload_callback_on_thread\": _emscripten_set_beforeunload_callback_on_thread,\r\n  \"emscripten_set_blur_callback_on_thread\": _emscripten_set_blur_callback_on_thread,\r\n  \"emscripten_set_canvas_element_size\": _emscripten_set_canvas_element_size,\r\n  \"emscripten_set_element_css_size\": _emscripten_set_element_css_size,\r\n  \"emscripten_set_focus_callback_on_thread\": _emscripten_set_focus_callback_on_thread,\r\n  \"emscripten_set_fullscreenchange_callback_on_thread\": _emscripten_set_fullscreenchange_callback_on_thread,\r\n  \"emscripten_set_gamepadconnected_callback_on_thread\": _emscripten_set_gamepadconnected_callback_on_thread,\r\n  \"emscripten_set_gamepaddisconnected_callback_on_thread\": _emscripten_set_gamepaddisconnected_callback_on_thread,\r\n  \"emscripten_set_keydown_callback_on_thread\": _emscripten_set_keydown_callback_on_thread,\r\n  \"emscripten_set_keypress_callback_on_thread\": _emscripten_set_keypress_callback_on_thread,\r\n  \"emscripten_set_keyup_callback_on_thread\": _emscripten_set_keyup_callback_on_thread,\r\n  \"emscripten_set_main_loop\": _emscripten_set_main_loop,\r\n  \"emscripten_set_mousedown_callback_on_thread\": _emscripten_set_mousedown_callback_on_thread,\r\n  \"emscripten_set_mouseenter_callback_on_thread\": _emscripten_set_mouseenter_callback_on_thread,\r\n  \"emscripten_set_mouseleave_callback_on_thread\": _emscripten_set_mouseleave_callback_on_thread,\r\n  \"emscripten_set_mousemove_callback_on_thread\": _emscripten_set_mousemove_callback_on_thread,\r\n  \"emscripten_set_mouseup_callback_on_thread\": _emscripten_set_mouseup_callback_on_thread,\r\n  \"emscripten_set_pointerlockchange_callback_on_thread\": _emscripten_set_pointerlockchange_callback_on_thread,\r\n  \"emscripten_set_resize_callback_on_thread\": _emscripten_set_resize_callback_on_thread,\r\n  \"emscripten_set_touchcancel_callback_on_thread\": _emscripten_set_touchcancel_callback_on_thread,\r\n  \"emscripten_set_touchend_callback_on_thread\": _emscripten_set_touchend_callback_on_thread,\r\n  \"emscripten_set_touchmove_callback_on_thread\": _emscripten_set_touchmove_callback_on_thread,\r\n  \"emscripten_set_touchstart_callback_on_thread\": _emscripten_set_touchstart_callback_on_thread,\r\n  \"emscripten_set_visibilitychange_callback_on_thread\": _emscripten_set_visibilitychange_callback_on_thread,\r\n  \"emscripten_set_wheel_callback_on_thread\": _emscripten_set_wheel_callback_on_thread,\r\n  \"emscripten_set_window_title\": _emscripten_set_window_title,\r\n  \"emscripten_sleep\": _emscripten_sleep,\r\n  \"environ_get\": _environ_get,\r\n  \"environ_sizes_get\": _environ_sizes_get,\r\n  \"exit\": _exit,\r\n  \"fd_close\": _fd_close,\r\n  \"fd_fdstat_get\": _fd_fdstat_get,\r\n  \"fd_read\": _fd_read,\r\n  \"fd_seek\": _fd_seek,\r\n  \"fd_write\": _fd_write,\r\n  \"glGetFloatv\": _glGetFloatv,\r\n  \"strftime\": _strftime,\r\n  \"strftime_l\": _strftime_l\r\n};\r\nvar asm = createWasm();\r\n/** @type {function(...*):?} */\r\nvar ___wasm_call_ctors = function() {\r\n  return (___wasm_call_ctors = Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _free = function() {\r\n  return (_free = Module[\"asm\"][\"free\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _malloc = function() {\r\n  return (_malloc = Module[\"asm\"][\"malloc\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___errno_location = function() {\r\n  return (___errno_location = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebSetFullscreen = Module[\"_I_WebSetFullscreen\"] = function() {\r\n  return (_I_WebSetFullscreen = Module[\"_I_WebSetFullscreen\"] = Module[\"asm\"][\"I_WebSetFullscreen\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebOpenGameMenu = Module[\"_I_WebOpenGameMenu\"] = function() {\r\n  return (_I_WebOpenGameMenu = Module[\"_I_WebOpenGameMenu\"] = Module[\"asm\"][\"I_WebOpenGameMenu\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebSyncScreenSize = Module[\"_I_WebSyncScreenSize\"] = function() {\r\n  return (_I_WebSyncScreenSize = Module[\"_I_WebSyncScreenSize\"] = Module[\"asm\"][\"I_WebSyncScreenSize\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _I_WebMain = Module[\"_I_WebMain\"] = function() {\r\n  return (_I_WebMain = Module[\"_I_WebMain\"] = Module[\"asm\"][\"I_WebMain\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _main = Module[\"_main\"] = function() {\r\n  return (_main = Module[\"_main\"] = Module[\"asm\"][\"__main_argc_argv\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_set_limits = function() {\r\n  return (_emscripten_stack_set_limits = Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_get_base = function() {\r\n  return (_emscripten_stack_get_base = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _emscripten_stack_get_end = function() {\r\n  return (_emscripten_stack_get_end = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackSave = function() {\r\n  return (stackSave = Module[\"asm\"][\"stackSave\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackRestore = function() {\r\n  return (stackRestore = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar stackAlloc = function() {\r\n  return (stackAlloc = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___cxa_increment_exception_refcount = function() {\r\n  return (___cxa_increment_exception_refcount = Module[\"asm\"][\"__cxa_increment_exception_refcount\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar ___cxa_is_pointer_type = function() {\r\n  return (___cxa_is_pointer_type = Module[\"asm\"][\"__cxa_is_pointer_type\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vi = Module[\"dynCall_vi\"] = function() {\r\n  return (dynCall_vi = Module[\"dynCall_vi\"] = Module[\"asm\"][\"dynCall_vi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = function() {\r\n  return (dynCall_viiii = Module[\"dynCall_viiii\"] = Module[\"asm\"][\"dynCall_viiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iii = Module[\"dynCall_iii\"] = function() {\r\n  return (dynCall_iii = Module[\"dynCall_iii\"] = Module[\"asm\"][\"dynCall_iii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_ii = Module[\"dynCall_ii\"] = function() {\r\n  return (dynCall_ii = Module[\"dynCall_ii\"] = Module[\"asm\"][\"dynCall_ii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vif = Module[\"dynCall_vif\"] = function() {\r\n  return (dynCall_vif = Module[\"dynCall_vif\"] = Module[\"asm\"][\"dynCall_vif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vffff = Module[\"dynCall_vffff\"] = function() {\r\n  return (dynCall_vffff = Module[\"dynCall_vffff\"] = Module[\"asm\"][\"dynCall_vffff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vii = Module[\"dynCall_vii\"] = function() {\r\n  return (dynCall_vii = Module[\"dynCall_vii\"] = Module[\"asm\"][\"dynCall_vii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = function() {\r\n  return (dynCall_iiii = Module[\"dynCall_iiii\"] = Module[\"asm\"][\"dynCall_iiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viii = Module[\"dynCall_viii\"] = function() {\r\n  return (dynCall_viii = Module[\"dynCall_viii\"] = Module[\"asm\"][\"dynCall_viii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vfff = Module[\"dynCall_vfff\"] = function() {\r\n  return (dynCall_vfff = Module[\"dynCall_vfff\"] = Module[\"asm\"][\"dynCall_vfff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_v = Module[\"dynCall_v\"] = function() {\r\n  return (dynCall_v = Module[\"dynCall_v\"] = Module[\"asm\"][\"dynCall_v\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = function() {\r\n  return (dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = Module[\"asm\"][\"dynCall_iiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiid = Module[\"dynCall_iiid\"] = function() {\r\n  return (dynCall_iiid = Module[\"dynCall_iiid\"] = Module[\"asm\"][\"dynCall_iiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vf = Module[\"dynCall_vf\"] = function() {\r\n  return (dynCall_vf = Module[\"dynCall_vf\"] = Module[\"asm\"][\"dynCall_vf\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viif = Module[\"dynCall_viif\"] = function() {\r\n  return (dynCall_viif = Module[\"dynCall_viif\"] = Module[\"asm\"][\"dynCall_viif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = function() {\r\n  return (dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vff = Module[\"dynCall_vff\"] = function() {\r\n  return (dynCall_vff = Module[\"dynCall_vff\"] = Module[\"asm\"][\"dynCall_vff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viffff = Module[\"dynCall_viffff\"] = function() {\r\n  return (dynCall_viffff = Module[\"dynCall_viffff\"] = Module[\"asm\"][\"dynCall_viffff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiji = Module[\"dynCall_iiji\"] = function() {\r\n  return (dynCall_iiji = Module[\"dynCall_iiji\"] = Module[\"asm\"][\"dynCall_iiji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = function() {\r\n  return (dynCall_iiiii = Module[\"dynCall_iiiii\"] = Module[\"asm\"][\"dynCall_iiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iji = Module[\"dynCall_iji\"] = function() {\r\n  return (dynCall_iji = Module[\"dynCall_iji\"] = Module[\"asm\"][\"dynCall_iji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iijii = Module[\"dynCall_iijii\"] = function() {\r\n  return (dynCall_iijii = Module[\"dynCall_iijii\"] = Module[\"asm\"][\"dynCall_iijii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = function() {\r\n  return (dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = Module[\"asm\"][\"dynCall_viiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = function() {\r\n  return (dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = Module[\"asm\"][\"dynCall_iidiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\r\n  return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"dynCall_jiji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\r\n  return (dynCall_ji = Module[\"dynCall_ji\"] = Module[\"asm\"][\"dynCall_ji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = function() {\r\n  return (dynCall_viiiii = Module[\"dynCall_viiiii\"] = Module[\"asm\"][\"dynCall_viiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_i = Module[\"dynCall_i\"] = function() {\r\n  return (dynCall_i = Module[\"dynCall_i\"] = Module[\"asm\"][\"dynCall_i\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vfi = Module[\"dynCall_vfi\"] = function() {\r\n  return (dynCall_vfi = Module[\"dynCall_vfi\"] = Module[\"asm\"][\"dynCall_vfi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viff = Module[\"dynCall_viff\"] = function() {\r\n  return (dynCall_viff = Module[\"dynCall_viff\"] = Module[\"asm\"][\"dynCall_viff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vifff = Module[\"dynCall_vifff\"] = function() {\r\n  return (dynCall_vifff = Module[\"dynCall_vifff\"] = Module[\"asm\"][\"dynCall_vifff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = function() {\r\n  return (dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = Module[\"asm\"][\"dynCall_viiiiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifi = Module[\"dynCall_viifi\"] = function() {\r\n  return (dynCall_viifi = Module[\"dynCall_viifi\"] = Module[\"asm\"][\"dynCall_viifi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifff = Module[\"dynCall_viifff\"] = function() {\r\n  return (dynCall_viifff = Module[\"dynCall_viifff\"] = Module[\"asm\"][\"dynCall_viifff\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viifffii = Module[\"dynCall_viifffii\"] = function() {\r\n  return (dynCall_viifffii = Module[\"dynCall_viifffii\"] = Module[\"asm\"][\"dynCall_viifffii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiifiiiii = Module[\"dynCall_viiiifiiiii\"] = function() {\r\n  return (dynCall_viiiifiiiii = Module[\"dynCall_viiiifiiiii\"] = Module[\"asm\"][\"dynCall_viiiifiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = function() {\r\n  return (dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_diii = Module[\"dynCall_diii\"] = function() {\r\n  return (dynCall_diii = Module[\"dynCall_diii\"] = Module[\"asm\"][\"dynCall_diii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiid = Module[\"dynCall_viiid\"] = function() {\r\n  return (dynCall_viiid = Module[\"dynCall_viiid\"] = Module[\"asm\"][\"dynCall_viiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiiddd = Module[\"dynCall_viiiddd\"] = function() {\r\n  return (dynCall_viiiddd = Module[\"dynCall_viiiddd\"] = Module[\"asm\"][\"dynCall_viiiddd\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vid = Module[\"dynCall_vid\"] = function() {\r\n  return (dynCall_vid = Module[\"dynCall_vid\"] = Module[\"asm\"][\"dynCall_vid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viiffi = Module[\"dynCall_viiffi\"] = function() {\r\n  return (dynCall_viiffi = Module[\"dynCall_viiffi\"] = Module[\"asm\"][\"dynCall_viiffi\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiifii = Module[\"dynCall_iiiifii\"] = function() {\r\n  return (dynCall_iiiifii = Module[\"dynCall_iiiifii\"] = Module[\"asm\"][\"dynCall_iiiifii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiif = Module[\"dynCall_iiiiif\"] = function() {\r\n  return (dynCall_iiiiif = Module[\"dynCall_iiiiif\"] = Module[\"asm\"][\"dynCall_iiiiif\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_vijji = Module[\"dynCall_vijji\"] = function() {\r\n  return (dynCall_vijji = Module[\"dynCall_vijji\"] = Module[\"asm\"][\"dynCall_vijji\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\r\n  return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"dynCall_viijii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = function() {\r\n  return (dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\r\n  return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"dynCall_iiiiij\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = function() {\r\n  return (dynCall_iiiiid = Module[\"dynCall_iiiiid\"] = Module[\"asm\"][\"dynCall_iiiiid\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\r\n  return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiijj\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = function() {\r\n  return (dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = Module[\"asm\"][\"dynCall_iiiiiiii\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\r\n  return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiiijj\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_start_unwind = function() {\r\n  return (_asyncify_start_unwind = Module[\"asm\"][\"asyncify_start_unwind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_stop_unwind = function() {\r\n  return (_asyncify_stop_unwind = Module[\"asm\"][\"asyncify_stop_unwind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_start_rewind = function() {\r\n  return (_asyncify_start_rewind = Module[\"asm\"][\"asyncify_start_rewind\"]).apply(null, arguments);\r\n};\r\n\r\n/** @type {function(...*):?} */\r\nvar _asyncify_stop_rewind = function() {\r\n  return (_asyncify_stop_rewind = Module[\"asm\"][\"asyncify_stop_rewind\"]).apply(null, arguments);\r\n};\r\n\r\n\r\n\r\n// include: postamble.js\r\n// === Auto-generated postamble setup entry stuff ===\r\n\r\nModule[\"addRunDependency\"] = addRunDependency;\r\nModule[\"removeRunDependency\"] = removeRunDependency;\r\nModule[\"FS_createPath\"] = FS.createPath;\r\nModule[\"FS_createDataFile\"] = FS.createDataFile;\r\nModule[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\r\nModule[\"FS_createLazyFile\"] = FS.createLazyFile;\r\nModule[\"FS_createDevice\"] = FS.createDevice;\r\nModule[\"FS_unlink\"] = FS.unlink;\r\nModule[\"LZ4\"] = LZ4;\r\n\r\n\r\nvar calledRun;\r\n\r\ndependenciesFulfilled = function runCaller() {\r\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\r\n  if (!calledRun) run();\r\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\r\n};\r\n\r\nfunction callMain(args = []) {\r\n\r\n  var entryFunction = _main;\r\n\r\n  args.unshift(thisProgram);\r\n\r\n  var argc = args.length;\r\n  var argv = stackAlloc((argc + 1) * 4);\r\n  var argv_ptr = argv >> 2;\r\n  args.forEach((arg) => {\r\n    HEAP32[argv_ptr++] = stringToUTF8OnStack(arg);\r\n  });\r\n  HEAP32[argv_ptr] = 0;\r\n\r\n  try {\r\n\r\n    var ret = entryFunction(argc, argv);\r\n\r\n    // if we're not running an evented main loop, it's time to exit\r\n    exitJS(ret, /* implicit = */ true);\r\n    return ret;\r\n  }\r\n  catch (e) {\r\n    return handleException(e);\r\n  }\r\n}\r\n\r\nfunction run(args = arguments_) {\r\n\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  preRun();\r\n\r\n  // a preRun added a dependency, run will be called later\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  function doRun() {\r\n    // run may have just been called through dependencies being fulfilled just in this very frame,\r\n    // or while the async setStatus time below was happening\r\n    if (calledRun) return;\r\n    calledRun = true;\r\n    Module['calledRun'] = true;\r\n\r\n    if (ABORT) return;\r\n\r\n    initRuntime();\r\n\r\n    preMain();\r\n\r\n    readyPromiseResolve(Module);\r\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\r\n\r\n    if (shouldRunNow) callMain(args);\r\n\r\n    postRun();\r\n  }\r\n\r\n  if (Module['setStatus']) {\r\n    Module['setStatus']('Running...');\r\n    setTimeout(function() {\r\n      setTimeout(function() {\r\n        Module['setStatus']('');\r\n      }, 1);\r\n      doRun();\r\n    }, 1);\r\n  } else\r\n  {\r\n    doRun();\r\n  }\r\n}\r\n\r\nif (Module['preInit']) {\r\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\r\n  while (Module['preInit'].length > 0) {\r\n    Module['preInit'].pop()();\r\n  }\r\n}\r\n\r\n// shouldRunNow refers to calling main(), not run().\r\nvar shouldRunNow = true;\r\n\r\nif (Module['noInitialRun']) shouldRunNow = false;\r\n\r\nrun();\r\n\r\n\r\n// end include: postamble.js\r\n\r\n\r\n  return createEdgeModule.ready\r\n}\r\n\r\n);\r\n})();\r\nexport default createEdgeModule;","import { Signal, signal } from '@preact/signals';\r\nimport { h } from 'preact';\r\nimport style from './style.css';\r\nimport { useEffect, useRef, useState } from 'preact/hooks';\r\nimport createEdgeModule from '../../edge-classic';\r\n\r\nconst defaultIWad = \"freedoom2.wad\"\r\nconst deathmatchIWad = \"freedm.wad\";\r\n\r\ntype PlayerConfig = {\r\n\tindexDBName: string;\r\n}\r\n\r\ntype WadState = {\r\n\terror?: string;\r\n\twadName?: string;\r\n\tisIWAD?: boolean;\r\n}\r\n\r\nconst config: PlayerConfig = {\r\n\tindexDBName: '/edge-classic'\r\n}\r\n\r\nclass WadHandler {\r\n\r\n\tconstructor(config: PlayerConfig) {\r\n\t\tthis.config = config;\r\n\t}\r\n\r\n\tprivate error(message: string) {\r\n\t\talert(message);\r\n\t\tconsole.error(message);\r\n\t\tconsole.trace();\r\n\t}\r\n\r\n\tsetWad(wadName: string, isIWAD?: boolean) {\r\n\t\tthis.wadState.value = { wadName: wadName, isIWAD: isIWAD };\r\n\t}\r\n\r\n\tasync uploadWad(file: File) {\r\n\r\n\t\tlet database: IDBDatabase | undefined;\r\n\r\n\t\ttry {\r\n\t\t\tdatabase = await this.openDatabase();\r\n\t\t\tif (!database) {\r\n\t\t\t\tthis.error(\"Unable to open database\")\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis.error(e);\r\n\t\t\tdatabase?.close();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst upload = new Promise<{ wadName: string, iwad: boolean }>((resolve, reject) => {\r\n\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\r\n\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\tconst bits = e.target.result;\r\n\t\t\t\tconst contents = new Uint8Array(bits as ArrayBuffer);\r\n\r\n\t\t\t\tconst iwad = contents[0] === 73;\r\n\r\n\t\t\t\tconst trans = database.transaction(['FILE_DATA'], 'readwrite');\r\n\t\t\t\tconst path = `${this.config.indexDBName}/${file.name}`;\r\n\t\t\t\tconst addReq = trans.objectStore('FILE_DATA').put({ timestamp: new Date(), mode: 33206, contents: contents }, path);\r\n\r\n\t\t\t\taddReq.onerror = (e) => {\r\n\t\t\t\t\treject(\"Error storing wad data\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttrans.oncomplete = (e) => {\r\n\t\t\t\t\tresolve({ wadName: file.name, iwad: iwad });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treader.onerror = (e) => {\r\n\t\t\t\treject(\"Error reading wad\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst wad = await upload;\r\n\t\t\tdatabase?.close();\r\n\t\t\tdatabase = undefined;\r\n\t\t\tthis.setWad(wad.wadName, wad.iwad);\r\n\t\t} catch (e) {\r\n\t\t\tthis.error(e);\r\n\t\t} finally {\r\n\t\t\tdatabase?.close();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate async openDatabase() {\r\n\r\n\t\treturn new Promise<IDBDatabase | undefined>((resolve, reject) => {\r\n\r\n\t\t\t// build pre-render guard\r\n\t\t\tif (typeof window !== 'undefined') {\r\n\t\t\t\tconst dbrequest = window.indexedDB.open(this.config.indexDBName);\r\n\r\n\t\t\t\tdbrequest.onerror = (e) => {\r\n\t\t\t\t\treject(`unable to load database ${this.config.indexDBName}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdbrequest.onupgradeneeded = (e) => {\r\n\r\n\t\t\t\t\tconsole.log(\"upgrade needed\");\r\n\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tif (!db.objectStoreNames.contains(\"FILE_DATA\")) {\r\n\t\t\t\t\t\tconsole.log(\"Creating FILE_DATA object store\");\r\n\t\t\t\t\t\tconst store = db.createObjectStore(\"FILE_DATA\", {});\r\n\t\t\t\t\t\tstore.createIndex(\"timestamp\", \"timestamp\", { unique: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tdbrequest.onsuccess = (e) => {\r\n\t\t\t\t\tconsole.log(\"db open\");\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tresolve(db);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\twadState: Signal<WadState> = signal({});\r\n\r\n\tconfig: PlayerConfig;\r\n\r\n\tstatic get singleton(): WadHandler {\r\n\t\tif (!WadHandler.instance) {\r\n\t\t\tWadHandler.instance = new WadHandler(config);\r\n\t\t}\r\n\t\treturn WadHandler.instance;\r\n\t}\r\n\r\n\tprivate static instance?: WadHandler;\r\n}\r\n\r\ntype Project = {\r\n\tname: string;\r\n\timage: string;\r\n\tlink: string;\r\n}\r\n\r\nconst projects: Project[] = [\r\n\r\n\t{ name: \"Operation: Arctic Wolf Revisited\", image: \"./assets/images/articwolf.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/arctic-wolf-revisited\" },\r\n\t{ name: \"Astral Pathfinder\", image: \"./assets/images/astralpathfinder.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/astral-pathfinder1\" },\r\n\t{ name: \"Aliens: Stranded\", image: \"./assets/images/aliensstranded.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/aliens-stranded\" }\r\n]\r\n\r\nconst WadChooser = () => {\r\n\r\n\tconst pelements = projects.map(p => {\r\n\t\treturn <a href={p.link} target=\"_blank\" style=\"display:flex;flex:1;flex-direction:column;height:100%;align-items:flex-end\">\r\n\t\t\t<div style={{ display: \"flex\", flex: 0 }}>\r\n\t\t\t\t<div style={{ paddingTop: 12, paddingBottom: 4, fontSize: 14, whiteSpace: \"pre\", fontWeight: \"normal\" }}>{p.name}</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", position: \"relative\", flexGrow: 1, width: \"100%\" }} >\r\n\t\t\t\t<img style=\"width:100%;height:100%;object-fit:cover;position:absolute\" src={p.image} />\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t});\r\n\r\n\treturn <div style={{ display: \"flex\", width: \"100%\", maxWidth: \"1440px\", padding: 24, paddingLeft: 42 }}>\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1 }}>\r\n\t\t\t<div style={{ display: \"flex\", width: \"80%\" }}>\r\n\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"start\" }}>\r\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t\t<div style={{ fontSize: 18, fontWeight: \"normal\", paddingBottom: 24 }}>EDGE-Classic is a Doom source port that provides advanced features, ease of modding, and attractive visuals while keeping hardware requirements very modest.\r\n\t\t\t\t\t\t\t<p>The latest release can be downloaded from <a href=\"https://edge-classic.github.io/index.html\" target=\"_blank\">https://edge-classic.github.io</a> </p>\r\n\t\t\t\t\t\t\t<p>Play EDGE-Classic in your browser by selecting an option below:</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:24px;width:292px;height:64px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWad(defaultIWad, true)\r\n\t\t\t\t\t\t}}>Play Freedoom</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:24px;width:292px;height:64px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWad(deathmatchIWad, true)\r\n\t\t\t\t\t\t}}>Play Bot Death Match</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:24px;width:292px;height:64px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tdocument.getElementById('getWadFile').click()\r\n\t\t\t\t\t\t}}>Choose Wad</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<input id=\"getWadFile\" style=\"display:none\" type=\"file\" onChange={(e) => {\r\n\t\t\t\t\tconst files = (e.target as any).files as File[];\r\n\t\t\t\t\tif (files.length !== 1) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\talert(\"Please select a single wad file\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst file = files[0];\r\n\t\t\t\t\tif (!file.name.toLowerCase().endsWith(\".wad\")) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\talert(\"Please select a single wad file\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst wadHandler = WadHandler.singleton;\r\n\t\t\t\t\twadHandler.uploadWad(file);\r\n\r\n\t\t\t\t}} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1, width: \"50%\", flexDirection: \"column\" }}>\r\n\t\t\t<div style={{ display: \"flex\", flex: \"0 0 24px\", position: \"relative\" }}>\r\n\t\t\t\t<div style={{ position: \"absolute\", fontSize: 18, fontWeight: 400, whiteSpace: \"pre\" }}>Suggested Projects</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", flexShrink: 0, flexGrow: 1, flexDirection: \"column\" }}>\r\n\t\t\t\t{pelements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n}\r\n\r\nconst EdgeClassic = () => {\r\n\r\n\tconst canvasRef = useRef<HTMLCanvasElement>(null);\r\n\tconst canvasContainerRef = useRef<HTMLDivElement>(null);\r\n\tconst [state, setState] = useState<{ loading: boolean }>({ loading: true });\r\n\tconst wadState = WadHandler.singleton.wadState.value;\r\n\r\n\r\n\tconst pointerLockChange = () => {\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst lock = canvas === document.pointerLockElement;\r\n\r\n\t\tModule._I_WebSetFullscreen(lock ? 1 : 0);\r\n\r\n\t\t/*\r\n\t\t// It feels good to open the menu when releasing pointer lock\r\n\t\t// though, it makes the interaction tricky to close the menu\r\n\t\tif (!lock) {\r\n\t\t\tModule._I_WebOpenGameMenu(1);\r\n\t\t} \r\n\t\t*/\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst canvasContainer = canvasContainerRef?.current;\r\n\r\n\t\tconst wadName = wadState.wadName!;\r\n\r\n\t\tif (!canvasContainer) {\r\n\t\t\tthrow \"Unable to get canvas container\";\r\n\t\t}\r\n\r\n\t\tif (!canvas) {\r\n\t\t\tthrow \"Unable to get canvas\";\r\n\t\t}\r\n\r\n\t\tconst syncCanvasSize = () => {\r\n\t\t\tconst w = Math.floor(canvasContainer.offsetWidth);\r\n\t\t\tconst h = Math.floor(canvasContainer.offsetHeight);\r\n\t\t\tconsole.log(\"Setting canvas size\", w, h);\r\n\t\t\tcanvas.style.width = `${w}px`;\r\n\t\t\tcanvas.style.height = `${h}px`;\r\n\t\t\tcanvas.width = w;\r\n\t\t\tcanvas.height = h;\r\n\t\t}\r\n\r\n\t\t// initial update\t\t\r\n\t\tsyncCanvasSize();\r\n\r\n\t\tconst canvasSync = () => {\r\n\t\t\tsyncCanvasSize();\r\n\t\t\tModule._I_WebSyncScreenSize();\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"pointerlockchange\", pointerLockChange, false);\r\n\r\n\t\tlet doSyncTimeout;\r\n\t\twindow.addEventListener(\"resize\", (ev) => {\r\n\r\n\t\t\tclearTimeout(doSyncTimeout);\r\n\t\t\tdoSyncTimeout = setTimeout(canvasSync, 250);\r\n\r\n\t\t});\r\n\r\n\t\tcanvas.addEventListener(\"webglcontextlost\", function (e) { alert('FIXME: WebGL context lost, please reload the page'); e.preventDefault(); }, false);\r\n\r\n\r\n\t\tlet iwad = defaultIWad;\r\n\t\tif (wadState.wadName === deathmatchIWad) {\r\n\t\t\tiwad = deathmatchIWad;\r\n\t\t}\r\n\t\t\r\n\t\tif (wadState.wadName !== iwad && wadState.isIWAD) {\r\n\t\t\tiwad = `edge-classic/${wadName}`;\r\n\t\t}\r\n\r\n\t\tconst args = [\"-home\", \"edge-classic\", \"-windowed\", \"-width\", canvas.offsetWidth.toString(), \"-height\", canvas.offsetHeight.toString(), \"-iwad\", iwad];\r\n\r\n\t\tif (iwad === deathmatchIWad) {\r\n\t\t\targs.push(...[\"-deathmatch\", \"1\", \"-warp\", \"map03\", \"-nomonsters\", \"-bots\", \"2\"])\r\n\t\t}\r\n\r\n\t\tif (!wadState.isIWAD) {\r\n\t\t\targs.push(\"-file\")\r\n\t\t\targs.push(`edge-classic/${wadName}`);\r\n\t\t}\r\n\r\n\t\tcreateEdgeModule({\r\n\t\t\tedgePostInit: () => {\r\n\t\t\t\tconsole.log(\"Post-Init!\");\r\n\t\t\t\t// jump \r\n\t\t\t\tif (!args.find( a => a.startsWith(\"-warp\"))) {\r\n\t\t\t\t\tModule._I_WebOpenGameMenu(1);\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tsetState({ ...state, loading: false });\r\n\t\t\t},\r\n\t\t\tonFullscreen: () => {\r\n\t\t\t\t/*\r\n\t\t\t\tconsole.log(\"On fullscreen\");\r\n\t\t\t\tconst elements = document.querySelectorAll(\".playercontrols\");\r\n\t\t\t\telements?.forEach(e => {\r\n\t\t\t\t\t(e as any).style.display = \"flex\";\r\n\t\t\t\t});\r\n\t\t\t\t*/\r\n\t\t\t},\r\n\t\t\tpreEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\tpostEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\targuments: args,\r\n\t\t\tpreInit: () => {\r\n\t\t\t\tconsole.log(\"Pre-Init\");\r\n\t\t\t},\r\n\t\t\tpreRun: [],\r\n\t\t\tpostRun: [],\r\n\t\t\tprint: (function () {\r\n\t\t\t\treturn function (text) {\r\n\t\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\t\tconsole.log(text);\r\n\t\t\t\t};\r\n\t\t\t})(),\r\n\t\t\tprintErr: function (text) {\r\n\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\tconsole.error(text);\r\n\t\t\t},\r\n\t\t\tcanvas: canvas,\r\n\t\t\tsetStatus: function (text) { console.log(\"status\", text) },\r\n\t\t\tmonitorRunDependencies: function (left) { console.log(left) },\r\n\t\t}).then(module => {\r\n\t\t\tglobalThis.Module = module;\r\n\t\t\tmodule.canvas = canvas;\r\n\t\t});\r\n\r\n\r\n\t\treturn () => {\r\n\r\n\t\t};\r\n\r\n\t}, []);\r\n\r\n\r\n\treturn <div id=\"canvas-container\" ref={canvasContainerRef} style={{ display: \"flex\", width: \"100%\", height: \"100%\", position: \"relative\" }}>\r\n\t\t<canvas id=\"canvas\" ref={canvasRef} style={{ visibility: state.loading ? \"hidden\" : \"visible\" }}\r\n\t\t\tonClick={async (ev) => {\r\n\t\t\t\tconst lock = canvasRef.current === document.pointerLockElement;\r\n\t\t\t\tif (!lock) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait canvasRef.current?.requestPointerLock();\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}} />\r\n\r\n\t\t{!!state.loading && <div style={{ position: \"absolute\", display: \"flex\", width: \"100%\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n\t\t\t<div class={style.loading}>\r\n\t\t\t\t<span style=\"--i:1\">L</span>\r\n\t\t\t\t<span style=\"--i:2\">O</span>\r\n\t\t\t\t<span style=\"--i:3\">A</span>\r\n\t\t\t\t<span style=\"--i:4\">D</span>\r\n\t\t\t\t<span style=\"--i:5\">I</span>\r\n\t\t\t\t<span style=\"--i:6\">N</span>\r\n\t\t\t\t<span style=\"--i:7\">G</span>\r\n\t\t\t\t<span style=\"--i:8\">.</span>\r\n\t\t\t\t<span style=\"--i:9\">.</span>\r\n\t\t\t\t<span style=\"--i:10\">.</span>\r\n\t\t\t</div>\r\n\t\t</div>}\r\n\r\n\t</div>\r\n}\r\n// floating player controls, not currently used\r\n// {!state.loading && <PlayerControls />} \r\n\r\nconst PlayerControls = () => {\r\n\tconst [fullscreen, setFullscreen] = useState(false);\r\n\treturn <div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\", padding: \"24px\", zIndex: 1, position: \"absolute\" }}>\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\" }} />\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", flexShrink: 1, paddingRight: \"48px\" }}>\r\n\t\t\t<button style={{ opacity: 1 }} className=\"playercontrols\" onClick={() => { Module._I_WebSetFullscreen(fullscreen ? 0 : 1, setFullscreen(!fullscreen)) }}>{fullscreen ? \"Minimize\" : \"Maximize\"}</button>\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nconst Player = () => {\r\n\r\n\tconst wadHandler = WadHandler.singleton;\r\n\tconst wadState = wadHandler.wadState.value;\r\n\r\n\treturn (\r\n\t\t<div style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\r\n\t\t\t{!wadState.wadName && <WadChooser />}\r\n\t\t\t{!!wadState.wadName && <EdgeClassic />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Player;\r\n","import './style/index.css';\r\nimport App from './components/app';\r\n\r\nexport default App;\r\n","import { h } from 'preact';\r\n\r\nimport Header from './header';\r\nimport Player from './player';\r\n\r\nconst App = () => (\r\n\t<div id=\"app\">\r\n\t\t<Header />\r\n\t\t<main>\r\n\t\t\t<Player/>\r\n\t\t</main>\r\n\t</div>\r\n);\r\n\r\nexport default App;\r\n"],"sourceRoot":""}